// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module maxpool3 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        relu3_pipe_6_V_V_dout,
        relu3_pipe_6_V_V_empty_n,
        relu3_pipe_6_V_V_read,
        pool3_pipe_6_V_V_din,
        pool3_pipe_6_V_V_full_n,
        pool3_pipe_6_V_V_write
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [4:0] relu3_pipe_6_V_V_dout;
input   relu3_pipe_6_V_V_empty_n;
output   relu3_pipe_6_V_V_read;
output  [4:0] pool3_pipe_6_V_V_din;
input   pool3_pipe_6_V_V_full_n;
output   pool3_pipe_6_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg relu3_pipe_6_V_V_read;
reg pool3_pipe_6_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    relu3_pipe_6_V_V_blk_n;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln444_fu_402_p2;
reg    pool3_pipe_6_V_V_blk_n;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln461_fu_572_p2;
wire   [4:0] add_ln439_fu_325_p2;
reg   [4:0] add_ln439_reg_639;
wire    ap_CS_fsm_state2;
wire   [1:0] add_ln441_fu_337_p2;
reg   [1:0] add_ln441_reg_647;
wire    ap_CS_fsm_state3;
wire   [8:0] add_ln356_fu_367_p2;
reg   [8:0] add_ln356_reg_652;
wire   [0:0] icmp_ln441_fu_331_p2;
wire   [6:0] add_ln442_fu_379_p2;
reg   [6:0] add_ln442_reg_660;
wire    ap_CS_fsm_state4;
wire   [14:0] tmp_29_cast_fu_394_p3;
reg   [14:0] tmp_29_cast_reg_665;
wire   [0:0] icmp_ln442_fu_373_p2;
wire   [6:0] add_ln444_fu_408_p2;
reg    ap_block_state5;
wire   [6:0] add_ln451_fu_440_p2;
reg   [6:0] add_ln451_reg_684;
wire    ap_CS_fsm_state7;
wire   [14:0] zext_ln454_fu_446_p1;
reg   [14:0] zext_ln454_reg_689;
wire   [0:0] icmp_ln451_fu_434_p2;
wire   [6:0] add_ln450_fu_450_p2;
wire   [1:0] add_ln454_fu_462_p2;
reg   [1:0] add_ln454_reg_702;
wire    ap_CS_fsm_state8;
wire   [8:0] add_ln356_9_fu_492_p2;
reg   [8:0] add_ln356_9_reg_707;
wire   [0:0] icmp_ln454_fu_456_p2;
wire   [3:0] zext_ln455_1_fu_506_p1;
reg   [3:0] zext_ln455_1_reg_712;
wire   [1:0] add_ln455_fu_520_p2;
reg   [1:0] add_ln455_reg_720;
wire    ap_CS_fsm_state9;
wire   [3:0] add_ln356_10_fu_530_p2;
reg   [3:0] add_ln356_10_reg_725;
wire   [0:0] icmp_ln455_fu_514_p2;
wire   [1:0] add_ln461_fu_578_p2;
reg   [1:0] add_ln461_reg_738;
reg    ap_block_state11;
wire   [3:0] zext_ln462_fu_592_p1;
reg   [3:0] zext_ln462_reg_743;
wire   [1:0] add_ln462_fu_602_p2;
reg   [1:0] add_ln462_reg_751;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln462_fu_596_p2;
wire   [4:0] select_ln251_fu_628_p3;
wire    ap_CS_fsm_state13;
reg   [13:0] pool3_line_buffer_V_address0;
reg    pool3_line_buffer_V_ce0;
reg    pool3_line_buffer_V_we0;
wire   [4:0] pool3_line_buffer_V_q0;
reg   [1:0] pool3_window_buffer_s_address0;
reg    pool3_window_buffer_s_ce0;
reg    pool3_window_buffer_s_we0;
wire   [4:0] pool3_window_buffer_s_q0;
reg   [4:0] h2_0_0_reg_183;
reg    ap_block_state1;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln450_fu_428_p2;
reg   [1:0] line_row_0_0_reg_194;
wire   [0:0] icmp_ln439_fu_319_p2;
reg   [6:0] line_col_0_0_reg_205;
reg   [6:0] line_c_0_0_reg_216;
reg   [6:0] block_0_0_reg_227;
reg   [6:0] c_0_0_reg_239;
reg   [1:0] window_row_0_0_reg_250;
reg   [1:0] window_col_0_0_reg_261;
wire    ap_CS_fsm_state10;
reg   [4:0] tmp_V_9_reg_272;
reg   [1:0] pool_row_0_0_reg_285;
reg   [4:0] p_0_0_reg_296;
reg   [1:0] pool_col_0_0_reg_308;
wire   [63:0] zext_ln356_14_fu_423_p1;
wire   [63:0] zext_ln356_20_fu_563_p1;
wire   [63:0] zext_ln356_18_fu_568_p1;
wire   [63:0] zext_ln463_1_fu_617_p1;
wire   [7:0] tmp_13_fu_343_p3;
wire   [5:0] tmp_14_fu_355_p3;
wire   [8:0] zext_ln356_11_fu_363_p1;
wire   [8:0] zext_ln356_fu_351_p1;
wire   [8:0] zext_ln356_12_fu_385_p1;
wire   [8:0] add_ln356_7_fu_389_p2;
wire   [14:0] zext_ln356_13_fu_414_p1;
wire   [14:0] add_ln356_8_fu_418_p2;
wire   [7:0] tmp_15_fu_468_p3;
wire   [5:0] tmp_16_fu_480_p3;
wire   [8:0] zext_ln356_16_fu_488_p1;
wire   [8:0] zext_ln356_15_fu_476_p1;
wire   [2:0] tmp_17_fu_498_p3;
wire   [3:0] zext_ln356_17_fu_526_p1;
wire   [6:0] zext_ln455_fu_510_p1;
wire   [6:0] add_ln456_fu_535_p2;
wire   [8:0] zext_ln356_19_fu_541_p1;
wire   [8:0] add_ln356_11_fu_545_p2;
wire   [14:0] tmp_35_cast_fu_550_p3;
wire   [14:0] add_ln356_12_fu_558_p2;
wire   [2:0] tmp_18_fu_584_p3;
wire   [3:0] zext_ln463_fu_608_p1;
wire   [3:0] add_ln463_fu_612_p2;
wire   [0:0] icmp_ln1494_fu_622_p2;
reg   [12:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 13'd1;
end

maxpool3_pool3_likZb #(
    .DataWidth( 5 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
pool3_line_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool3_line_buffer_V_address0),
    .ce0(pool3_line_buffer_V_ce0),
    .we0(pool3_line_buffer_V_we0),
    .d0(relu3_pipe_6_V_V_dout),
    .q0(pool3_line_buffer_V_q0)
);

maxpool3_pool3_wik0b #(
    .DataWidth( 5 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
pool3_window_buffer_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool3_window_buffer_s_address0),
    .ce0(pool3_window_buffer_s_ce0),
    .we0(pool3_window_buffer_s_we0),
    .d0(pool3_line_buffer_V_q0),
    .q0(pool3_window_buffer_s_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln439_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln441_fu_331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        block_0_0_reg_227 <= 7'd0;
    end else if (((icmp_ln451_fu_434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        block_0_0_reg_227 <= add_ln450_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln461_fu_572_p2 == 1'd1) & (pool3_pipe_6_V_V_full_n == 1'b0)) & (icmp_ln461_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        c_0_0_reg_239 <= add_ln451_reg_684;
    end else if (((icmp_ln450_fu_428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        c_0_0_reg_239 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln450_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        h2_0_0_reg_183 <= add_ln439_reg_639;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        h2_0_0_reg_183 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln444_fu_402_p2 == 1'd0) & (relu3_pipe_6_V_V_empty_n == 1'b0)) & (icmp_ln444_fu_402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        line_c_0_0_reg_216 <= add_ln444_fu_408_p2;
    end else if (((icmp_ln442_fu_373_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        line_c_0_0_reg_216 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln444_fu_402_p2 == 1'd0) & (relu3_pipe_6_V_V_empty_n == 1'b0)) & (icmp_ln444_fu_402_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        line_col_0_0_reg_205 <= add_ln442_reg_660;
    end else if (((icmp_ln441_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        line_col_0_0_reg_205 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln442_fu_373_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        line_row_0_0_reg_194 <= add_ln441_reg_647;
    end else if (((icmp_ln439_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        line_row_0_0_reg_194 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_0_0_reg_296 <= select_ln251_fu_628_p3;
    end else if ((~((icmp_ln461_fu_572_p2 == 1'd1) & (pool3_pipe_6_V_V_full_n == 1'b0)) & (icmp_ln461_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        p_0_0_reg_296 <= tmp_V_9_reg_272;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        pool_col_0_0_reg_308 <= add_ln462_reg_751;
    end else if ((~((icmp_ln461_fu_572_p2 == 1'd1) & (pool3_pipe_6_V_V_full_n == 1'b0)) & (icmp_ln461_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        pool_col_0_0_reg_308 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln454_fu_456_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        pool_row_0_0_reg_285 <= 2'd0;
    end else if (((icmp_ln462_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        pool_row_0_0_reg_285 <= add_ln461_reg_738;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln454_fu_456_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_V_9_reg_272 <= 5'd0;
    end else if (((icmp_ln462_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        tmp_V_9_reg_272 <= p_0_0_reg_296;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        window_col_0_0_reg_261 <= add_ln455_reg_720;
    end else if (((icmp_ln454_fu_456_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        window_col_0_0_reg_261 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln455_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        window_row_0_0_reg_250 <= add_ln454_reg_702;
    end else if (((icmp_ln451_fu_434_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        window_row_0_0_reg_250 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln455_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        add_ln356_10_reg_725 <= add_ln356_10_fu_530_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln454_fu_456_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln356_9_reg_707[8 : 4] <= add_ln356_9_fu_492_p2[8 : 4];
        zext_ln455_1_reg_712[2 : 1] <= zext_ln455_1_fu_506_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln441_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln356_reg_652[8 : 4] <= add_ln356_fu_367_p2[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln439_reg_639 <= add_ln439_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln441_reg_647 <= add_ln441_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln442_reg_660 <= add_ln442_fu_379_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln451_reg_684 <= add_ln451_fu_440_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln454_reg_702 <= add_ln454_fu_462_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln455_reg_720 <= add_ln455_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln461_fu_572_p2 == 1'd1) & (pool3_pipe_6_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln461_reg_738 <= add_ln461_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln462_reg_751 <= add_ln462_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln442_fu_373_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_29_cast_reg_665[14 : 6] <= tmp_29_cast_fu_394_p3[14 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln451_fu_434_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        zext_ln454_reg_689[6 : 0] <= zext_ln454_fu_446_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln461_fu_572_p2 == 1'd1) & (pool3_pipe_6_V_V_full_n == 1'b0)) & (icmp_ln461_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        zext_ln462_reg_743[2 : 1] <= zext_ln462_fu_592_p1[2 : 1];
    end
end

always @ (*) begin
    if (((icmp_ln439_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln439_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        pool3_line_buffer_V_address0 = zext_ln356_20_fu_563_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        pool3_line_buffer_V_address0 = zext_ln356_14_fu_423_p1;
    end else begin
        pool3_line_buffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (~((icmp_ln444_fu_402_p2 == 1'd0) & (relu3_pipe_6_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        pool3_line_buffer_V_ce0 = 1'b1;
    end else begin
        pool3_line_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln444_fu_402_p2 == 1'd0) & (relu3_pipe_6_V_V_empty_n == 1'b0)) & (icmp_ln444_fu_402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        pool3_line_buffer_V_we0 = 1'b1;
    end else begin
        pool3_line_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln461_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        pool3_pipe_6_V_V_blk_n = pool3_pipe_6_V_V_full_n;
    end else begin
        pool3_pipe_6_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln461_fu_572_p2 == 1'd1) & (pool3_pipe_6_V_V_full_n == 1'b0)) & (icmp_ln461_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        pool3_pipe_6_V_V_write = 1'b1;
    end else begin
        pool3_pipe_6_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        pool3_window_buffer_s_address0 = zext_ln463_1_fu_617_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pool3_window_buffer_s_address0 = zext_ln356_18_fu_568_p1;
    end else begin
        pool3_window_buffer_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state12))) begin
        pool3_window_buffer_s_ce0 = 1'b1;
    end else begin
        pool3_window_buffer_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        pool3_window_buffer_s_we0 = 1'b1;
    end else begin
        pool3_window_buffer_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((icmp_ln444_fu_402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        relu3_pipe_6_V_V_blk_n = relu3_pipe_6_V_V_empty_n;
    end else begin
        relu3_pipe_6_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln444_fu_402_p2 == 1'd0) & (relu3_pipe_6_V_V_empty_n == 1'b0)) & (icmp_ln444_fu_402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        relu3_pipe_6_V_V_read = 1'b1;
    end else begin
        relu3_pipe_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln439_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln441_fu_331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln442_fu_373_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((icmp_ln444_fu_402_p2 == 1'd0) & (relu3_pipe_6_V_V_empty_n == 1'b0)) & (icmp_ln444_fu_402_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((icmp_ln444_fu_402_p2 == 1'd0) & (relu3_pipe_6_V_V_empty_n == 1'b0)) & (icmp_ln444_fu_402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln450_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln451_fu_434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln454_fu_456_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln455_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state11 : begin
            if ((~((icmp_ln461_fu_572_p2 == 1'd1) & (pool3_pipe_6_V_V_full_n == 1'b0)) & (icmp_ln461_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if ((~((icmp_ln461_fu_572_p2 == 1'd1) & (pool3_pipe_6_V_V_full_n == 1'b0)) & (icmp_ln461_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln462_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln356_10_fu_530_p2 = (zext_ln356_17_fu_526_p1 + zext_ln455_1_reg_712);

assign add_ln356_11_fu_545_p2 = (zext_ln356_19_fu_541_p1 + add_ln356_9_reg_707);

assign add_ln356_12_fu_558_p2 = (zext_ln454_reg_689 + tmp_35_cast_fu_550_p3);

assign add_ln356_7_fu_389_p2 = (zext_ln356_12_fu_385_p1 + add_ln356_reg_652);

assign add_ln356_8_fu_418_p2 = (tmp_29_cast_reg_665 + zext_ln356_13_fu_414_p1);

assign add_ln356_9_fu_492_p2 = (zext_ln356_16_fu_488_p1 + zext_ln356_15_fu_476_p1);

assign add_ln356_fu_367_p2 = (zext_ln356_11_fu_363_p1 + zext_ln356_fu_351_p1);

assign add_ln439_fu_325_p2 = (h2_0_0_reg_183 + 5'd1);

assign add_ln441_fu_337_p2 = (line_row_0_0_reg_194 + 2'd1);

assign add_ln442_fu_379_p2 = (line_col_0_0_reg_205 + 7'd1);

assign add_ln444_fu_408_p2 = (line_c_0_0_reg_216 + 7'd1);

assign add_ln450_fu_450_p2 = (block_0_0_reg_227 + 7'd2);

assign add_ln451_fu_440_p2 = (c_0_0_reg_239 + 7'd1);

assign add_ln454_fu_462_p2 = (window_row_0_0_reg_250 + 2'd1);

assign add_ln455_fu_520_p2 = (window_col_0_0_reg_261 + 2'd1);

assign add_ln456_fu_535_p2 = (block_0_0_reg_227 + zext_ln455_fu_510_p1);

assign add_ln461_fu_578_p2 = (pool_row_0_0_reg_285 + 2'd1);

assign add_ln462_fu_602_p2 = (pool_col_0_0_reg_308 + 2'd1);

assign add_ln463_fu_612_p2 = (zext_ln462_reg_743 + zext_ln463_fu_608_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state11 = ((icmp_ln461_fu_572_p2 == 1'd1) & (pool3_pipe_6_V_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((icmp_ln444_fu_402_p2 == 1'd0) & (relu3_pipe_6_V_V_empty_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln1494_fu_622_p2 = ((pool3_window_buffer_s_q0 > p_0_0_reg_296) ? 1'b1 : 1'b0);

assign icmp_ln439_fu_319_p2 = ((h2_0_0_reg_183 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln441_fu_331_p2 = ((line_row_0_0_reg_194 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln442_fu_373_p2 = ((line_col_0_0_reg_205 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_402_p2 = ((line_c_0_0_reg_216 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln450_fu_428_p2 = ((block_0_0_reg_227 < 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln451_fu_434_p2 = ((c_0_0_reg_239 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln454_fu_456_p2 = ((window_row_0_0_reg_250 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln455_fu_514_p2 = ((window_col_0_0_reg_261 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln461_fu_572_p2 = ((pool_row_0_0_reg_285 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln462_fu_596_p2 = ((pool_col_0_0_reg_308 == 2'd2) ? 1'b1 : 1'b0);

assign pool3_pipe_6_V_V_din = tmp_V_9_reg_272;

assign select_ln251_fu_628_p3 = ((icmp_ln1494_fu_622_p2[0:0] === 1'b1) ? pool3_window_buffer_s_q0 : p_0_0_reg_296);

assign start_out = real_start;

assign tmp_13_fu_343_p3 = {{line_row_0_0_reg_194}, {6'd0}};

assign tmp_14_fu_355_p3 = {{line_row_0_0_reg_194}, {4'd0}};

assign tmp_15_fu_468_p3 = {{window_row_0_0_reg_250}, {6'd0}};

assign tmp_16_fu_480_p3 = {{window_row_0_0_reg_250}, {4'd0}};

assign tmp_17_fu_498_p3 = {{window_row_0_0_reg_250}, {1'd0}};

assign tmp_18_fu_584_p3 = {{pool_row_0_0_reg_285}, {1'd0}};

assign tmp_29_cast_fu_394_p3 = {{add_ln356_7_fu_389_p2}, {6'd0}};

assign tmp_35_cast_fu_550_p3 = {{add_ln356_11_fu_545_p2}, {6'd0}};

assign zext_ln356_11_fu_363_p1 = tmp_14_fu_355_p3;

assign zext_ln356_12_fu_385_p1 = line_col_0_0_reg_205;

assign zext_ln356_13_fu_414_p1 = line_c_0_0_reg_216;

assign zext_ln356_14_fu_423_p1 = add_ln356_8_fu_418_p2;

assign zext_ln356_15_fu_476_p1 = tmp_15_fu_468_p3;

assign zext_ln356_16_fu_488_p1 = tmp_16_fu_480_p3;

assign zext_ln356_17_fu_526_p1 = window_col_0_0_reg_261;

assign zext_ln356_18_fu_568_p1 = add_ln356_10_reg_725;

assign zext_ln356_19_fu_541_p1 = add_ln456_fu_535_p2;

assign zext_ln356_20_fu_563_p1 = add_ln356_12_fu_558_p2;

assign zext_ln356_fu_351_p1 = tmp_13_fu_343_p3;

assign zext_ln454_fu_446_p1 = c_0_0_reg_239;

assign zext_ln455_1_fu_506_p1 = tmp_17_fu_498_p3;

assign zext_ln455_fu_510_p1 = window_col_0_0_reg_261;

assign zext_ln462_fu_592_p1 = tmp_18_fu_584_p3;

assign zext_ln463_1_fu_617_p1 = add_ln463_fu_612_p2;

assign zext_ln463_fu_608_p1 = pool_col_0_0_reg_308;

always @ (posedge ap_clk) begin
    add_ln356_reg_652[3:0] <= 4'b0000;
    tmp_29_cast_reg_665[5:0] <= 6'b000000;
    zext_ln454_reg_689[14:7] <= 8'b00000000;
    add_ln356_9_reg_707[3:0] <= 4'b0000;
    zext_ln455_1_reg_712[0] <= 1'b0;
    zext_ln455_1_reg_712[3] <= 1'b0;
    zext_ln462_reg_743[0] <= 1'b0;
    zext_ln462_reg_743[3] <= 1'b0;
end

endmodule //maxpool3
