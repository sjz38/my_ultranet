// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "relu_bn8.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic relu_bn8::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic relu_bn8::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> relu_bn8::ap_ST_fsm_state1 = "1";
const sc_lv<3> relu_bn8::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> relu_bn8::ap_ST_fsm_state11 = "100";
const sc_lv<32> relu_bn8::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool relu_bn8::ap_const_boolean_1 = true;
const sc_lv<1> relu_bn8::ap_const_lv1_0 = "0";
const sc_lv<3> relu_bn8::ap_const_lv3_0 = "000";
const sc_lv<2> relu_bn8::ap_const_lv2_0 = "00";
const sc_lv<4> relu_bn8::ap_const_lv4_0 = "0000";
const sc_lv<32> relu_bn8::ap_const_lv32_1 = "1";
const bool relu_bn8::ap_const_boolean_0 = false;
const sc_lv<1> relu_bn8::ap_const_lv1_1 = "1";
const sc_lv<14> relu_bn8::ap_const_lv14_0 = "00000000000000";
const sc_lv<12> relu_bn8::ap_const_lv12_0 = "000000000000";
const sc_lv<5> relu_bn8::ap_const_lv5_0 = "00000";
const sc_lv<7> relu_bn8::ap_const_lv7_0 = "0000000";
const sc_lv<4> relu_bn8::ap_const_lv4_F = "1111";
const sc_lv<32> relu_bn8::ap_const_lv32_2 = "10";
const sc_lv<32> relu_bn8::ap_const_lv32_1F = "11111";
const sc_lv<14> relu_bn8::ap_const_lv14_3200 = "11001000000000";
const sc_lv<14> relu_bn8::ap_const_lv14_1 = "1";
const sc_lv<4> relu_bn8::ap_const_lv4_1 = "1";
const sc_lv<12> relu_bn8::ap_const_lv12_500 = "10100000000";
const sc_lv<7> relu_bn8::ap_const_lv7_40 = "1000000";
const sc_lv<5> relu_bn8::ap_const_lv5_1 = "1";
const sc_lv<6> relu_bn8::ap_const_lv6_0 = "000000";
const sc_lv<7> relu_bn8::ap_const_lv7_1 = "1";
const sc_lv<12> relu_bn8::ap_const_lv12_1 = "1";
const sc_lv<32> relu_bn8::ap_const_lv32_A = "1010";
const sc_lv<32> relu_bn8::ap_const_lv32_19 = "11001";
const sc_lv<16> relu_bn8::ap_const_lv16_100 = "100000000";
const sc_lv<32> relu_bn8::ap_const_lv32_E = "1110";
const sc_lv<32> relu_bn8::ap_const_lv32_12 = "10010";
const sc_lv<5> relu_bn8::ap_const_lv5_10 = "10000";
const sc_lv<32> relu_bn8::ap_const_lv32_4 = "100";
const sc_lv<27> relu_bn8::ap_const_lv27_7FFFFFF = "111111111111111111111111111";
const sc_lv<32> relu_bn8::ap_const_lv32_5 = "101";
const sc_lv<32> relu_bn8::ap_const_lv32_FFFFFFE8 = "11111111111111111111111111101000";
const sc_lv<31> relu_bn8::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<3> relu_bn8::ap_const_lv3_6 = "110";
const sc_lv<5> relu_bn8::ap_const_lv5_1F = "11111";
const sc_lv<5> relu_bn8::ap_const_lv5_8 = "1000";
const sc_lv<32> relu_bn8::ap_const_lv32_FFFFFFE7 = "11111111111111111111111111100111";
const sc_lv<32> relu_bn8::ap_const_lv32_3F = "111111";
const sc_lv<8> relu_bn8::ap_const_lv8_7F = "1111111";
const sc_lv<8> relu_bn8::ap_const_lv8_7E = "1111110";
const sc_lv<8> relu_bn8::ap_const_lv8_1 = "1";
const sc_lv<32> relu_bn8::ap_const_lv32_17 = "10111";

relu_bn8::relu_bn8(sc_module_name name) : sc_module(name), mVcdFile(0) {
    a_batchnorm8_V_U = new relu_bn8_a_batchnCce("a_batchnorm8_V_U");
    a_batchnorm8_V_U->clk(ap_clk);
    a_batchnorm8_V_U->reset(ap_rst);
    a_batchnorm8_V_U->address0(a_batchnorm8_V_address0);
    a_batchnorm8_V_U->ce0(a_batchnorm8_V_ce0);
    a_batchnorm8_V_U->q0(a_batchnorm8_V_q0);
    b_batchnorm8_V_U = new relu_bn8_b_batchnCde("b_batchnorm8_V_U");
    b_batchnorm8_V_U->clk(ap_clk);
    b_batchnorm8_V_U->reset(ap_rst);
    b_batchnorm8_V_U->address0(b_batchnorm8_V_address0);
    b_batchnorm8_V_U->ce0(b_batchnorm8_V_ce0);
    b_batchnorm8_V_U->q0(b_batchnorm8_V_q0);
    test_mac_muladd_1Cee_U922 = new test_mac_muladd_1Cee<1,1,12,16,22,26>("test_mac_muladd_1Cee_U922");
    test_mac_muladd_1Cee_U922->din0(a_batchnorm8_V_q0);
    test_mac_muladd_1Cee_U922->din1(conv8_pipe_15_V_V_dout);
    test_mac_muladd_1Cee_U922->din2(b_batchnorm8_V_q0);
    test_mac_muladd_1Cee_U922->dout(grp_fu_862_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_batchnorm8_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln892_fu_465_p1 );

    SC_METHOD(thread_a_batchnorm8_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_add_ln884_1_fu_339_p2);
    sensitive << ( ap_phi_mux_args07_0_0_i_phi_fu_273_p4 );

    SC_METHOD(thread_add_ln884_fu_333_p2);
    sensitive << ( indvar_flatten13_i_reg_258 );

    SC_METHOD(thread_add_ln885_1_fu_494_p2);
    sensitive << ( indvar_flatten_i_reg_280 );

    SC_METHOD(thread_add_ln885_fu_415_p2);
    sensitive << ( select_ln894_fu_351_p3 );

    SC_METHOD(thread_add_ln886_fu_488_p2);
    sensitive << ( select_ln894_2_fu_427_p3 );

    SC_METHOD(thread_add_ln894_1_fu_447_p2);
    sensitive << ( add_ln894_fu_391_p2 );
    sensitive << ( zext_ln894_3_fu_443_p1 );

    SC_METHOD(thread_add_ln894_2_fu_471_p2);
    sensitive << ( zext_ln892_fu_465_p1 );
    sensitive << ( zext_ln894_4_fu_461_p1 );

    SC_METHOD(thread_add_ln894_3_fu_477_p2);
    sensitive << ( zext_ln894_reg_873 );
    sensitive << ( add_ln894_2_fu_471_p2 );

    SC_METHOD(thread_add_ln894_fu_391_p2);
    sensitive << ( zext_ln894_2_fu_387_p1 );
    sensitive << ( zext_ln894_1_fu_375_p1 );

    SC_METHOD(thread_add_ln944_fu_617_p2);
    sensitive << ( sub_ln944_fu_608_p2 );

    SC_METHOD(thread_add_ln949_fu_690_p2);
    sensitive << ( trunc_ln944_fu_613_p1 );

    SC_METHOD(thread_add_ln958_fu_735_p2);
    sensitive << ( sub_ln944_fu_608_p2 );

    SC_METHOD(thread_add_ln961_fu_779_p2);
    sensitive << ( zext_ln961_fu_775_p1 );
    sensitive << ( select_ln958_fu_767_p3 );

    SC_METHOD(thread_add_ln964_fu_820_p2);
    sensitive << ( sub_ln964_fu_815_p2 );
    sensitive << ( select_ln964_fu_807_p3 );

    SC_METHOD(thread_and_ln894_fu_409_p2);
    sensitive << ( icmp_ln886_fu_403_p2 );
    sensitive << ( xor_ln894_fu_397_p2 );

    SC_METHOD(thread_and_ln947_1_fu_670_p2);
    sensitive << ( icmp_ln947_fu_633_p2 );
    sensitive << ( icmp_ln947_1_fu_664_p2 );

    SC_METHOD(thread_and_ln947_fu_659_p2);
    sensitive << ( select_ln1495_1_reg_923 );
    sensitive << ( lshr_ln947_fu_653_p2 );

    SC_METHOD(thread_and_ln949_fu_703_p2);
    sensitive << ( p_Result_3_i_fu_696_p3 );
    sensitive << ( xor_ln949_fu_684_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( conv8_pipe_15_V_V_empty_n );
    sensitive << ( m_axi_result_BVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln884_reg_878 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( conv8_pipe_15_V_V_empty_n );
    sensitive << ( m_axi_result_BVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln884_reg_878 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter7_reg );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( conv8_pipe_15_V_V_empty_n );
    sensitive << ( m_axi_result_BVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln884_reg_878 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter7_reg );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( result_offset_empty_n );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);
    sensitive << ( m_axi_result_BVALID );
    sensitive << ( icmp_ln884_reg_878_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( conv8_pipe_15_V_V_empty_n );
    sensitive << ( icmp_ln884_reg_878 );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( m_axi_result_AWREADY );
    sensitive << ( icmp_ln884_reg_878_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( m_axi_result_WREADY );
    sensitive << ( icmp_ln884_reg_878_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln884_fu_327_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_phi_mux_args07_0_0_i_phi_fu_273_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln884_reg_878 );
    sensitive << ( args07_0_0_i_reg_269 );
    sensitive << ( select_ln894_1_reg_887 );

    SC_METHOD(thread_ap_phi_mux_args17_0_0_i_phi_fu_295_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln884_reg_878 );
    sensitive << ( args17_0_0_i_reg_291 );
    sensitive << ( select_ln894_3_reg_892 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_b_batchnorm8_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln892_fu_465_p1 );

    SC_METHOD(thread_b_batchnorm8_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_bitcast_ln739_fu_850_p1);
    sensitive << ( trunc_ln738_fu_846_p1 );

    SC_METHOD(thread_conv8_pipe_15_V_V_blk_n);
    sensitive << ( conv8_pipe_15_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln884_reg_878 );

    SC_METHOD(thread_conv8_pipe_15_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln884_reg_878 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln1495_fu_536_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln884_reg_878 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln_i_fu_520_p4 );

    SC_METHOD(thread_icmp_ln884_fu_327_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten13_i_reg_258 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln885_fu_345_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_i_reg_280 );
    sensitive << ( icmp_ln884_fu_327_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln886_fu_403_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( args27_0_0_i_reg_302 );
    sensitive << ( icmp_ln884_fu_327_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln935_fu_603_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln1495_1_reg_923 );

    SC_METHOD(thread_icmp_ln947_1_fu_664_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln947_fu_659_p2 );

    SC_METHOD(thread_icmp_ln947_fu_633_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_2_fu_623_p4 );

    SC_METHOD(thread_icmp_ln958_fu_729_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( add_ln944_fu_617_p2 );

    SC_METHOD(thread_l_i_fu_591_p3);
    sensitive << ( p_Result_7_i_fu_583_p3 );

    SC_METHOD(thread_lshr_ln947_fu_653_p2);
    sensitive << ( zext_ln947_fu_649_p1 );

    SC_METHOD(thread_lshr_ln958_fu_741_p2);
    sensitive << ( zext_ln958_fu_726_p1 );
    sensitive << ( add_ln958_fu_735_p2 );

    SC_METHOD(thread_lshr_ln_i_fu_785_p4);
    sensitive << ( add_ln961_fu_779_p2 );

    SC_METHOD(thread_m_axi_result_ARADDR);

    SC_METHOD(thread_m_axi_result_ARBURST);

    SC_METHOD(thread_m_axi_result_ARCACHE);

    SC_METHOD(thread_m_axi_result_ARID);

    SC_METHOD(thread_m_axi_result_ARLEN);

    SC_METHOD(thread_m_axi_result_ARLOCK);

    SC_METHOD(thread_m_axi_result_ARPROT);

    SC_METHOD(thread_m_axi_result_ARQOS);

    SC_METHOD(thread_m_axi_result_ARREGION);

    SC_METHOD(thread_m_axi_result_ARSIZE);

    SC_METHOD(thread_m_axi_result_ARUSER);

    SC_METHOD(thread_m_axi_result_ARVALID);

    SC_METHOD(thread_m_axi_result_AWADDR);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( result_addr_reg_897_pp0_iter1_reg );

    SC_METHOD(thread_m_axi_result_AWBURST);

    SC_METHOD(thread_m_axi_result_AWCACHE);

    SC_METHOD(thread_m_axi_result_AWID);

    SC_METHOD(thread_m_axi_result_AWLEN);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_result_AWLOCK);

    SC_METHOD(thread_m_axi_result_AWPROT);

    SC_METHOD(thread_m_axi_result_AWQOS);

    SC_METHOD(thread_m_axi_result_AWREGION);

    SC_METHOD(thread_m_axi_result_AWSIZE);

    SC_METHOD(thread_m_axi_result_AWUSER);

    SC_METHOD(thread_m_axi_result_AWVALID);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_result_BREADY);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter7_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_result_RREADY);

    SC_METHOD(thread_m_axi_result_WDATA);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter2_reg );
    sensitive << ( select_ln935_reg_942 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_result_WID);

    SC_METHOD(thread_m_axi_result_WLAST);

    SC_METHOD(thread_m_axi_result_WSTRB);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_result_WUSER);

    SC_METHOD(thread_m_axi_result_WVALID);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_or_ln1495_fu_559_p2);
    sensitive << ( tmp_1_fu_529_p3 );
    sensitive << ( icmp_ln1495_fu_536_p2 );

    SC_METHOD(thread_or_ln894_fu_421_p2);
    sensitive << ( icmp_ln885_fu_345_p2 );
    sensitive << ( and_ln894_fu_409_p2 );

    SC_METHOD(thread_or_ln949_fu_709_p2);
    sensitive << ( and_ln949_fu_703_p2 );
    sensitive << ( and_ln947_1_fu_670_p2 );

    SC_METHOD(thread_or_ln_i_fu_715_p3);
    sensitive << ( or_ln949_fu_709_p2 );

    SC_METHOD(thread_p_Result_3_i_fu_696_p3);
    sensitive << ( select_ln1495_1_reg_923 );
    sensitive << ( add_ln949_fu_690_p2 );

    SC_METHOD(thread_p_Result_7_i_fu_583_p3);
    sensitive << ( p_Result_i_fu_573_p4 );

    SC_METHOD(thread_p_Result_9_i_fu_834_p5);
    sensitive << ( zext_ln962_fu_795_p1 );
    sensitive << ( tmp_5_i_fu_826_p3 );

    SC_METHOD(thread_p_Result_i_fu_573_p4);
    sensitive << ( select_ln1495_1_fu_565_p3 );

    SC_METHOD(thread_result_blk_n_AW);
    sensitive << ( m_axi_result_AWREADY );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter1_reg );

    SC_METHOD(thread_result_blk_n_B);
    sensitive << ( m_axi_result_BVALID );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter7_reg );

    SC_METHOD(thread_result_blk_n_W);
    sensitive << ( m_axi_result_WREADY );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln884_reg_878_pp0_iter2_reg );

    SC_METHOD(thread_result_offset1_i_fu_313_p4);
    sensitive << ( result_offset_dout );

    SC_METHOD(thread_result_offset_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( result_offset_empty_n );

    SC_METHOD(thread_result_offset_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( result_offset_empty_n );

    SC_METHOD(thread_select_ln1495_1_fu_565_p3);
    sensitive << ( or_ln1495_fu_559_p2 );
    sensitive << ( select_ln1495_fu_551_p3 );
    sensitive << ( tmp_7_i_fu_542_p4 );

    SC_METHOD(thread_select_ln1495_fu_551_p3);
    sensitive << ( tmp_1_fu_529_p3 );

    SC_METHOD(thread_select_ln885_fu_500_p3);
    sensitive << ( icmp_ln885_fu_345_p2 );
    sensitive << ( add_ln885_1_fu_494_p2 );

    SC_METHOD(thread_select_ln894_1_fu_359_p3);
    sensitive << ( ap_phi_mux_args07_0_0_i_phi_fu_273_p4 );
    sensitive << ( icmp_ln885_fu_345_p2 );
    sensitive << ( add_ln884_1_fu_339_p2 );

    SC_METHOD(thread_select_ln894_2_fu_427_p3);
    sensitive << ( args27_0_0_i_reg_302 );
    sensitive << ( or_ln894_fu_421_p2 );

    SC_METHOD(thread_select_ln894_3_fu_435_p3);
    sensitive << ( select_ln894_fu_351_p3 );
    sensitive << ( and_ln894_fu_409_p2 );
    sensitive << ( add_ln885_fu_415_p2 );

    SC_METHOD(thread_select_ln894_fu_351_p3);
    sensitive << ( ap_phi_mux_args17_0_0_i_phi_fu_295_p4 );
    sensitive << ( icmp_ln885_fu_345_p2 );

    SC_METHOD(thread_select_ln935_fu_854_p3);
    sensitive << ( icmp_ln935_fu_603_p2 );
    sensitive << ( bitcast_ln739_fu_850_p1 );

    SC_METHOD(thread_select_ln958_fu_767_p3);
    sensitive << ( icmp_ln958_fu_729_p2 );
    sensitive << ( zext_ln958_1_fu_747_p1 );
    sensitive << ( shl_ln958_fu_761_p2 );

    SC_METHOD(thread_select_ln964_fu_807_p3);
    sensitive << ( tmp_4_fu_799_p3 );

    SC_METHOD(thread_shl_ln958_fu_761_p2);
    sensitive << ( zext_ln957_fu_723_p1 );
    sensitive << ( zext_ln958_2_fu_757_p1 );

    SC_METHOD(thread_sub_ln944_fu_608_p2);
    sensitive << ( l_i_reg_932 );

    SC_METHOD(thread_sub_ln947_fu_643_p2);
    sensitive << ( trunc_ln947_fu_639_p1 );

    SC_METHOD(thread_sub_ln958_fu_751_p2);
    sensitive << ( sub_ln944_fu_608_p2 );

    SC_METHOD(thread_sub_ln964_fu_815_p2);
    sensitive << ( trunc_ln943_reg_937 );

    SC_METHOD(thread_tmp_1_fu_529_p3);
    sensitive << ( grp_fu_862_p3 );

    SC_METHOD(thread_tmp_1_i_fu_367_p3);
    sensitive << ( select_ln894_1_fu_359_p3 );

    SC_METHOD(thread_tmp_2_fu_623_p4);
    sensitive << ( add_ln944_fu_617_p2 );

    SC_METHOD(thread_tmp_2_i_fu_379_p3);
    sensitive << ( select_ln894_1_fu_359_p3 );

    SC_METHOD(thread_tmp_3_fu_676_p3);
    sensitive << ( add_ln944_fu_617_p2 );

    SC_METHOD(thread_tmp_4_fu_799_p3);
    sensitive << ( add_ln961_fu_779_p2 );

    SC_METHOD(thread_tmp_5_i_fu_826_p3);
    sensitive << ( add_ln964_fu_820_p2 );

    SC_METHOD(thread_tmp_7_i_fu_542_p4);
    sensitive << ( grp_fu_862_p3 );

    SC_METHOD(thread_tmp_fu_453_p3);
    sensitive << ( add_ln894_1_fu_447_p2 );

    SC_METHOD(thread_trunc_ln738_fu_846_p1);
    sensitive << ( p_Result_9_i_fu_834_p5 );

    SC_METHOD(thread_trunc_ln943_fu_599_p1);
    sensitive << ( l_i_fu_591_p3 );

    SC_METHOD(thread_trunc_ln944_fu_613_p1);
    sensitive << ( sub_ln944_fu_608_p2 );

    SC_METHOD(thread_trunc_ln947_fu_639_p1);
    sensitive << ( sub_ln944_fu_608_p2 );

    SC_METHOD(thread_trunc_ln_i_fu_520_p4);
    sensitive << ( grp_fu_862_p3 );

    SC_METHOD(thread_xor_ln894_fu_397_p2);
    sensitive << ( icmp_ln885_fu_345_p2 );

    SC_METHOD(thread_xor_ln949_fu_684_p2);
    sensitive << ( tmp_3_fu_676_p3 );

    SC_METHOD(thread_zext_ln892_fu_465_p1);
    sensitive << ( select_ln894_2_fu_427_p3 );

    SC_METHOD(thread_zext_ln894_1_fu_375_p1);
    sensitive << ( tmp_1_i_fu_367_p3 );

    SC_METHOD(thread_zext_ln894_2_fu_387_p1);
    sensitive << ( tmp_2_i_fu_379_p3 );

    SC_METHOD(thread_zext_ln894_3_fu_443_p1);
    sensitive << ( select_ln894_3_fu_435_p3 );

    SC_METHOD(thread_zext_ln894_4_fu_461_p1);
    sensitive << ( tmp_fu_453_p3 );

    SC_METHOD(thread_zext_ln894_fu_323_p1);
    sensitive << ( result_offset1_i_fu_313_p4 );

    SC_METHOD(thread_zext_ln947_fu_649_p1);
    sensitive << ( sub_ln947_fu_643_p2 );

    SC_METHOD(thread_zext_ln957_fu_723_p1);
    sensitive << ( select_ln1495_1_reg_923 );

    SC_METHOD(thread_zext_ln958_1_fu_747_p1);
    sensitive << ( lshr_ln958_fu_741_p2 );

    SC_METHOD(thread_zext_ln958_2_fu_757_p1);
    sensitive << ( sub_ln958_fu_751_p2 );

    SC_METHOD(thread_zext_ln958_fu_726_p1);
    sensitive << ( select_ln1495_1_reg_923 );

    SC_METHOD(thread_zext_ln961_fu_775_p1);
    sensitive << ( or_ln_i_fu_715_p3 );

    SC_METHOD(thread_zext_ln962_fu_795_p1);
    sensitive << ( lshr_ln_i_fu_785_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( result_offset_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln884_fu_327_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "relu_bn8_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, conv8_pipe_15_V_V_dout, "(port)conv8_pipe_15_V_V_dout");
    sc_trace(mVcdFile, conv8_pipe_15_V_V_empty_n, "(port)conv8_pipe_15_V_V_empty_n");
    sc_trace(mVcdFile, conv8_pipe_15_V_V_read, "(port)conv8_pipe_15_V_V_read");
    sc_trace(mVcdFile, m_axi_result_AWVALID, "(port)m_axi_result_AWVALID");
    sc_trace(mVcdFile, m_axi_result_AWREADY, "(port)m_axi_result_AWREADY");
    sc_trace(mVcdFile, m_axi_result_AWADDR, "(port)m_axi_result_AWADDR");
    sc_trace(mVcdFile, m_axi_result_AWID, "(port)m_axi_result_AWID");
    sc_trace(mVcdFile, m_axi_result_AWLEN, "(port)m_axi_result_AWLEN");
    sc_trace(mVcdFile, m_axi_result_AWSIZE, "(port)m_axi_result_AWSIZE");
    sc_trace(mVcdFile, m_axi_result_AWBURST, "(port)m_axi_result_AWBURST");
    sc_trace(mVcdFile, m_axi_result_AWLOCK, "(port)m_axi_result_AWLOCK");
    sc_trace(mVcdFile, m_axi_result_AWCACHE, "(port)m_axi_result_AWCACHE");
    sc_trace(mVcdFile, m_axi_result_AWPROT, "(port)m_axi_result_AWPROT");
    sc_trace(mVcdFile, m_axi_result_AWQOS, "(port)m_axi_result_AWQOS");
    sc_trace(mVcdFile, m_axi_result_AWREGION, "(port)m_axi_result_AWREGION");
    sc_trace(mVcdFile, m_axi_result_AWUSER, "(port)m_axi_result_AWUSER");
    sc_trace(mVcdFile, m_axi_result_WVALID, "(port)m_axi_result_WVALID");
    sc_trace(mVcdFile, m_axi_result_WREADY, "(port)m_axi_result_WREADY");
    sc_trace(mVcdFile, m_axi_result_WDATA, "(port)m_axi_result_WDATA");
    sc_trace(mVcdFile, m_axi_result_WSTRB, "(port)m_axi_result_WSTRB");
    sc_trace(mVcdFile, m_axi_result_WLAST, "(port)m_axi_result_WLAST");
    sc_trace(mVcdFile, m_axi_result_WID, "(port)m_axi_result_WID");
    sc_trace(mVcdFile, m_axi_result_WUSER, "(port)m_axi_result_WUSER");
    sc_trace(mVcdFile, m_axi_result_ARVALID, "(port)m_axi_result_ARVALID");
    sc_trace(mVcdFile, m_axi_result_ARREADY, "(port)m_axi_result_ARREADY");
    sc_trace(mVcdFile, m_axi_result_ARADDR, "(port)m_axi_result_ARADDR");
    sc_trace(mVcdFile, m_axi_result_ARID, "(port)m_axi_result_ARID");
    sc_trace(mVcdFile, m_axi_result_ARLEN, "(port)m_axi_result_ARLEN");
    sc_trace(mVcdFile, m_axi_result_ARSIZE, "(port)m_axi_result_ARSIZE");
    sc_trace(mVcdFile, m_axi_result_ARBURST, "(port)m_axi_result_ARBURST");
    sc_trace(mVcdFile, m_axi_result_ARLOCK, "(port)m_axi_result_ARLOCK");
    sc_trace(mVcdFile, m_axi_result_ARCACHE, "(port)m_axi_result_ARCACHE");
    sc_trace(mVcdFile, m_axi_result_ARPROT, "(port)m_axi_result_ARPROT");
    sc_trace(mVcdFile, m_axi_result_ARQOS, "(port)m_axi_result_ARQOS");
    sc_trace(mVcdFile, m_axi_result_ARREGION, "(port)m_axi_result_ARREGION");
    sc_trace(mVcdFile, m_axi_result_ARUSER, "(port)m_axi_result_ARUSER");
    sc_trace(mVcdFile, m_axi_result_RVALID, "(port)m_axi_result_RVALID");
    sc_trace(mVcdFile, m_axi_result_RREADY, "(port)m_axi_result_RREADY");
    sc_trace(mVcdFile, m_axi_result_RDATA, "(port)m_axi_result_RDATA");
    sc_trace(mVcdFile, m_axi_result_RLAST, "(port)m_axi_result_RLAST");
    sc_trace(mVcdFile, m_axi_result_RID, "(port)m_axi_result_RID");
    sc_trace(mVcdFile, m_axi_result_RUSER, "(port)m_axi_result_RUSER");
    sc_trace(mVcdFile, m_axi_result_RRESP, "(port)m_axi_result_RRESP");
    sc_trace(mVcdFile, m_axi_result_BVALID, "(port)m_axi_result_BVALID");
    sc_trace(mVcdFile, m_axi_result_BREADY, "(port)m_axi_result_BREADY");
    sc_trace(mVcdFile, m_axi_result_BRESP, "(port)m_axi_result_BRESP");
    sc_trace(mVcdFile, m_axi_result_BID, "(port)m_axi_result_BID");
    sc_trace(mVcdFile, m_axi_result_BUSER, "(port)m_axi_result_BUSER");
    sc_trace(mVcdFile, result_offset_dout, "(port)result_offset_dout");
    sc_trace(mVcdFile, result_offset_empty_n, "(port)result_offset_empty_n");
    sc_trace(mVcdFile, result_offset_read, "(port)result_offset_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, a_batchnorm8_V_address0, "a_batchnorm8_V_address0");
    sc_trace(mVcdFile, a_batchnorm8_V_ce0, "a_batchnorm8_V_ce0");
    sc_trace(mVcdFile, a_batchnorm8_V_q0, "a_batchnorm8_V_q0");
    sc_trace(mVcdFile, b_batchnorm8_V_address0, "b_batchnorm8_V_address0");
    sc_trace(mVcdFile, b_batchnorm8_V_ce0, "b_batchnorm8_V_ce0");
    sc_trace(mVcdFile, b_batchnorm8_V_q0, "b_batchnorm8_V_q0");
    sc_trace(mVcdFile, conv8_pipe_15_V_V_blk_n, "conv8_pipe_15_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln884_reg_878, "icmp_ln884_reg_878");
    sc_trace(mVcdFile, result_blk_n_AW, "result_blk_n_AW");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln884_reg_878_pp0_iter1_reg, "icmp_ln884_reg_878_pp0_iter1_reg");
    sc_trace(mVcdFile, result_blk_n_W, "result_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, icmp_ln884_reg_878_pp0_iter2_reg, "icmp_ln884_reg_878_pp0_iter2_reg");
    sc_trace(mVcdFile, result_blk_n_B, "result_blk_n_B");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, icmp_ln884_reg_878_pp0_iter7_reg, "icmp_ln884_reg_878_pp0_iter7_reg");
    sc_trace(mVcdFile, result_offset_blk_n, "result_offset_blk_n");
    sc_trace(mVcdFile, indvar_flatten13_i_reg_258, "indvar_flatten13_i_reg_258");
    sc_trace(mVcdFile, args07_0_0_i_reg_269, "args07_0_0_i_reg_269");
    sc_trace(mVcdFile, indvar_flatten_i_reg_280, "indvar_flatten_i_reg_280");
    sc_trace(mVcdFile, args17_0_0_i_reg_291, "args17_0_0_i_reg_291");
    sc_trace(mVcdFile, args27_0_0_i_reg_302, "args27_0_0_i_reg_302");
    sc_trace(mVcdFile, zext_ln894_fu_323_p1, "zext_ln894_fu_323_p1");
    sc_trace(mVcdFile, zext_ln894_reg_873, "zext_ln894_reg_873");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, icmp_ln884_fu_327_p2, "icmp_ln884_fu_327_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln884_reg_878_pp0_iter3_reg, "icmp_ln884_reg_878_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln884_reg_878_pp0_iter4_reg, "icmp_ln884_reg_878_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln884_reg_878_pp0_iter5_reg, "icmp_ln884_reg_878_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln884_reg_878_pp0_iter6_reg, "icmp_ln884_reg_878_pp0_iter6_reg");
    sc_trace(mVcdFile, add_ln884_fu_333_p2, "add_ln884_fu_333_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln894_1_fu_359_p3, "select_ln894_1_fu_359_p3");
    sc_trace(mVcdFile, select_ln894_1_reg_887, "select_ln894_1_reg_887");
    sc_trace(mVcdFile, select_ln894_3_fu_435_p3, "select_ln894_3_fu_435_p3");
    sc_trace(mVcdFile, select_ln894_3_reg_892, "select_ln894_3_reg_892");
    sc_trace(mVcdFile, result_addr_reg_897, "result_addr_reg_897");
    sc_trace(mVcdFile, result_addr_reg_897_pp0_iter1_reg, "result_addr_reg_897_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln886_fu_488_p2, "add_ln886_fu_488_p2");
    sc_trace(mVcdFile, select_ln885_fu_500_p3, "select_ln885_fu_500_p3");
    sc_trace(mVcdFile, select_ln1495_1_fu_565_p3, "select_ln1495_1_fu_565_p3");
    sc_trace(mVcdFile, select_ln1495_1_reg_923, "select_ln1495_1_reg_923");
    sc_trace(mVcdFile, l_i_fu_591_p3, "l_i_fu_591_p3");
    sc_trace(mVcdFile, l_i_reg_932, "l_i_reg_932");
    sc_trace(mVcdFile, trunc_ln943_fu_599_p1, "trunc_ln943_fu_599_p1");
    sc_trace(mVcdFile, trunc_ln943_reg_937, "trunc_ln943_reg_937");
    sc_trace(mVcdFile, select_ln935_fu_854_p3, "select_ln935_fu_854_p3");
    sc_trace(mVcdFile, select_ln935_reg_942, "select_ln935_reg_942");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_phi_mux_args07_0_0_i_phi_fu_273_p4, "ap_phi_mux_args07_0_0_i_phi_fu_273_p4");
    sc_trace(mVcdFile, ap_phi_mux_args17_0_0_i_phi_fu_295_p4, "ap_phi_mux_args17_0_0_i_phi_fu_295_p4");
    sc_trace(mVcdFile, zext_ln892_fu_465_p1, "zext_ln892_fu_465_p1");
    sc_trace(mVcdFile, add_ln894_3_fu_477_p2, "add_ln894_3_fu_477_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, result_offset1_i_fu_313_p4, "result_offset1_i_fu_313_p4");
    sc_trace(mVcdFile, icmp_ln885_fu_345_p2, "icmp_ln885_fu_345_p2");
    sc_trace(mVcdFile, add_ln884_1_fu_339_p2, "add_ln884_1_fu_339_p2");
    sc_trace(mVcdFile, tmp_1_i_fu_367_p3, "tmp_1_i_fu_367_p3");
    sc_trace(mVcdFile, tmp_2_i_fu_379_p3, "tmp_2_i_fu_379_p3");
    sc_trace(mVcdFile, zext_ln894_2_fu_387_p1, "zext_ln894_2_fu_387_p1");
    sc_trace(mVcdFile, zext_ln894_1_fu_375_p1, "zext_ln894_1_fu_375_p1");
    sc_trace(mVcdFile, icmp_ln886_fu_403_p2, "icmp_ln886_fu_403_p2");
    sc_trace(mVcdFile, xor_ln894_fu_397_p2, "xor_ln894_fu_397_p2");
    sc_trace(mVcdFile, select_ln894_fu_351_p3, "select_ln894_fu_351_p3");
    sc_trace(mVcdFile, and_ln894_fu_409_p2, "and_ln894_fu_409_p2");
    sc_trace(mVcdFile, or_ln894_fu_421_p2, "or_ln894_fu_421_p2");
    sc_trace(mVcdFile, add_ln885_fu_415_p2, "add_ln885_fu_415_p2");
    sc_trace(mVcdFile, add_ln894_fu_391_p2, "add_ln894_fu_391_p2");
    sc_trace(mVcdFile, zext_ln894_3_fu_443_p1, "zext_ln894_3_fu_443_p1");
    sc_trace(mVcdFile, add_ln894_1_fu_447_p2, "add_ln894_1_fu_447_p2");
    sc_trace(mVcdFile, tmp_fu_453_p3, "tmp_fu_453_p3");
    sc_trace(mVcdFile, select_ln894_2_fu_427_p3, "select_ln894_2_fu_427_p3");
    sc_trace(mVcdFile, zext_ln894_4_fu_461_p1, "zext_ln894_4_fu_461_p1");
    sc_trace(mVcdFile, add_ln894_2_fu_471_p2, "add_ln894_2_fu_471_p2");
    sc_trace(mVcdFile, add_ln885_1_fu_494_p2, "add_ln885_1_fu_494_p2");
    sc_trace(mVcdFile, grp_fu_862_p3, "grp_fu_862_p3");
    sc_trace(mVcdFile, trunc_ln_i_fu_520_p4, "trunc_ln_i_fu_520_p4");
    sc_trace(mVcdFile, tmp_1_fu_529_p3, "tmp_1_fu_529_p3");
    sc_trace(mVcdFile, icmp_ln1495_fu_536_p2, "icmp_ln1495_fu_536_p2");
    sc_trace(mVcdFile, or_ln1495_fu_559_p2, "or_ln1495_fu_559_p2");
    sc_trace(mVcdFile, select_ln1495_fu_551_p3, "select_ln1495_fu_551_p3");
    sc_trace(mVcdFile, tmp_7_i_fu_542_p4, "tmp_7_i_fu_542_p4");
    sc_trace(mVcdFile, p_Result_i_fu_573_p4, "p_Result_i_fu_573_p4");
    sc_trace(mVcdFile, p_Result_7_i_fu_583_p3, "p_Result_7_i_fu_583_p3");
    sc_trace(mVcdFile, sub_ln944_fu_608_p2, "sub_ln944_fu_608_p2");
    sc_trace(mVcdFile, add_ln944_fu_617_p2, "add_ln944_fu_617_p2");
    sc_trace(mVcdFile, tmp_2_fu_623_p4, "tmp_2_fu_623_p4");
    sc_trace(mVcdFile, trunc_ln947_fu_639_p1, "trunc_ln947_fu_639_p1");
    sc_trace(mVcdFile, sub_ln947_fu_643_p2, "sub_ln947_fu_643_p2");
    sc_trace(mVcdFile, zext_ln947_fu_649_p1, "zext_ln947_fu_649_p1");
    sc_trace(mVcdFile, lshr_ln947_fu_653_p2, "lshr_ln947_fu_653_p2");
    sc_trace(mVcdFile, and_ln947_fu_659_p2, "and_ln947_fu_659_p2");
    sc_trace(mVcdFile, icmp_ln947_fu_633_p2, "icmp_ln947_fu_633_p2");
    sc_trace(mVcdFile, icmp_ln947_1_fu_664_p2, "icmp_ln947_1_fu_664_p2");
    sc_trace(mVcdFile, tmp_3_fu_676_p3, "tmp_3_fu_676_p3");
    sc_trace(mVcdFile, trunc_ln944_fu_613_p1, "trunc_ln944_fu_613_p1");
    sc_trace(mVcdFile, add_ln949_fu_690_p2, "add_ln949_fu_690_p2");
    sc_trace(mVcdFile, p_Result_3_i_fu_696_p3, "p_Result_3_i_fu_696_p3");
    sc_trace(mVcdFile, xor_ln949_fu_684_p2, "xor_ln949_fu_684_p2");
    sc_trace(mVcdFile, and_ln949_fu_703_p2, "and_ln949_fu_703_p2");
    sc_trace(mVcdFile, and_ln947_1_fu_670_p2, "and_ln947_1_fu_670_p2");
    sc_trace(mVcdFile, or_ln949_fu_709_p2, "or_ln949_fu_709_p2");
    sc_trace(mVcdFile, zext_ln958_fu_726_p1, "zext_ln958_fu_726_p1");
    sc_trace(mVcdFile, add_ln958_fu_735_p2, "add_ln958_fu_735_p2");
    sc_trace(mVcdFile, lshr_ln958_fu_741_p2, "lshr_ln958_fu_741_p2");
    sc_trace(mVcdFile, sub_ln958_fu_751_p2, "sub_ln958_fu_751_p2");
    sc_trace(mVcdFile, zext_ln957_fu_723_p1, "zext_ln957_fu_723_p1");
    sc_trace(mVcdFile, zext_ln958_2_fu_757_p1, "zext_ln958_2_fu_757_p1");
    sc_trace(mVcdFile, icmp_ln958_fu_729_p2, "icmp_ln958_fu_729_p2");
    sc_trace(mVcdFile, zext_ln958_1_fu_747_p1, "zext_ln958_1_fu_747_p1");
    sc_trace(mVcdFile, shl_ln958_fu_761_p2, "shl_ln958_fu_761_p2");
    sc_trace(mVcdFile, or_ln_i_fu_715_p3, "or_ln_i_fu_715_p3");
    sc_trace(mVcdFile, zext_ln961_fu_775_p1, "zext_ln961_fu_775_p1");
    sc_trace(mVcdFile, select_ln958_fu_767_p3, "select_ln958_fu_767_p3");
    sc_trace(mVcdFile, add_ln961_fu_779_p2, "add_ln961_fu_779_p2");
    sc_trace(mVcdFile, lshr_ln_i_fu_785_p4, "lshr_ln_i_fu_785_p4");
    sc_trace(mVcdFile, tmp_4_fu_799_p3, "tmp_4_fu_799_p3");
    sc_trace(mVcdFile, sub_ln964_fu_815_p2, "sub_ln964_fu_815_p2");
    sc_trace(mVcdFile, select_ln964_fu_807_p3, "select_ln964_fu_807_p3");
    sc_trace(mVcdFile, add_ln964_fu_820_p2, "add_ln964_fu_820_p2");
    sc_trace(mVcdFile, zext_ln962_fu_795_p1, "zext_ln962_fu_795_p1");
    sc_trace(mVcdFile, tmp_5_i_fu_826_p3, "tmp_5_i_fu_826_p3");
    sc_trace(mVcdFile, p_Result_9_i_fu_834_p5, "p_Result_9_i_fu_834_p5");
    sc_trace(mVcdFile, trunc_ln738_fu_846_p1, "trunc_ln738_fu_846_p1");
    sc_trace(mVcdFile, icmp_ln935_fu_603_p2, "icmp_ln935_fu_603_p2");
    sc_trace(mVcdFile, bitcast_ln739_fu_850_p1, "bitcast_ln739_fu_850_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

relu_bn8::~relu_bn8() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete a_batchnorm8_V_U;
    delete b_batchnorm8_V_U;
    delete test_mac_muladd_1Cee_U922;
}

void relu_bn8::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read())))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        args07_0_0_i_reg_269 = select_ln894_1_reg_887.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read())))) {
        args07_0_0_i_reg_269 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        args17_0_0_i_reg_291 = select_ln894_3_reg_892.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read())))) {
        args17_0_0_i_reg_291 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_fu_327_p2.read()))) {
        args27_0_0_i_reg_302 = add_ln886_fu_488_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read())))) {
        args27_0_0_i_reg_302 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_fu_327_p2.read()))) {
        indvar_flatten13_i_reg_258 = add_ln884_fu_333_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read())))) {
        indvar_flatten13_i_reg_258 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_fu_327_p2.read()))) {
        indvar_flatten_i_reg_280 = select_ln885_fu_500_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read())))) {
        indvar_flatten_i_reg_280 = ap_const_lv12_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln884_reg_878 = icmp_ln884_fu_327_p2.read();
        icmp_ln884_reg_878_pp0_iter1_reg = icmp_ln884_reg_878.read();
        result_addr_reg_897_pp0_iter1_reg = result_addr_reg_897.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln884_reg_878_pp0_iter2_reg = icmp_ln884_reg_878_pp0_iter1_reg.read();
        icmp_ln884_reg_878_pp0_iter3_reg = icmp_ln884_reg_878_pp0_iter2_reg.read();
        icmp_ln884_reg_878_pp0_iter4_reg = icmp_ln884_reg_878_pp0_iter3_reg.read();
        icmp_ln884_reg_878_pp0_iter5_reg = icmp_ln884_reg_878_pp0_iter4_reg.read();
        icmp_ln884_reg_878_pp0_iter6_reg = icmp_ln884_reg_878_pp0_iter5_reg.read();
        icmp_ln884_reg_878_pp0_iter7_reg = icmp_ln884_reg_878_pp0_iter6_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        l_i_reg_932 = l_i_fu_591_p3.read();
        select_ln1495_1_reg_923 = select_ln1495_1_fu_565_p3.read();
        trunc_ln943_reg_937 = trunc_ln943_fu_599_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_fu_327_p2.read()))) {
        result_addr_reg_897 =  (sc_lv<32>) (add_ln894_3_fu_477_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_fu_327_p2.read()))) {
        select_ln894_1_reg_887 = select_ln894_1_fu_359_p3.read();
        select_ln894_3_reg_892 = select_ln894_3_fu_435_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        select_ln935_reg_942 = select_ln935_fu_854_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read())))) {
        zext_ln894_reg_873 = zext_ln894_fu_323_p1.read();
    }
}

void relu_bn8::thread_a_batchnorm8_V_address0() {
    a_batchnorm8_V_address0 =  (sc_lv<6>) (zext_ln892_fu_465_p1.read());
}

void relu_bn8::thread_a_batchnorm8_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        a_batchnorm8_V_ce0 = ap_const_logic_1;
    } else {
        a_batchnorm8_V_ce0 = ap_const_logic_0;
    }
}

void relu_bn8::thread_add_ln884_1_fu_339_p2() {
    add_ln884_1_fu_339_p2 = (!ap_const_lv4_1.is_01() || !ap_phi_mux_args07_0_0_i_phi_fu_273_p4.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(ap_phi_mux_args07_0_0_i_phi_fu_273_p4.read()));
}

void relu_bn8::thread_add_ln884_fu_333_p2() {
    add_ln884_fu_333_p2 = (!indvar_flatten13_i_reg_258.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(indvar_flatten13_i_reg_258.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void relu_bn8::thread_add_ln885_1_fu_494_p2() {
    add_ln885_1_fu_494_p2 = (!ap_const_lv12_1.is_01() || !indvar_flatten_i_reg_280.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_1) + sc_biguint<12>(indvar_flatten_i_reg_280.read()));
}

void relu_bn8::thread_add_ln885_fu_415_p2() {
    add_ln885_fu_415_p2 = (!ap_const_lv5_1.is_01() || !select_ln894_fu_351_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(select_ln894_fu_351_p3.read()));
}

void relu_bn8::thread_add_ln886_fu_488_p2() {
    add_ln886_fu_488_p2 = (!ap_const_lv7_1.is_01() || !select_ln894_2_fu_427_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(select_ln894_2_fu_427_p3.read()));
}

void relu_bn8::thread_add_ln894_1_fu_447_p2() {
    add_ln894_1_fu_447_p2 = (!add_ln894_fu_391_p2.read().is_01() || !zext_ln894_3_fu_443_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(add_ln894_fu_391_p2.read()) + sc_biguint<9>(zext_ln894_3_fu_443_p1.read()));
}

void relu_bn8::thread_add_ln894_2_fu_471_p2() {
    add_ln894_2_fu_471_p2 = (!zext_ln894_4_fu_461_p1.read().is_01() || !zext_ln892_fu_465_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln894_4_fu_461_p1.read()) + sc_biguint<64>(zext_ln892_fu_465_p1.read()));
}

void relu_bn8::thread_add_ln894_3_fu_477_p2() {
    add_ln894_3_fu_477_p2 = (!zext_ln894_reg_873.read().is_01() || !add_ln894_2_fu_471_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln894_reg_873.read()) + sc_biguint<64>(add_ln894_2_fu_471_p2.read()));
}

void relu_bn8::thread_add_ln894_fu_391_p2() {
    add_ln894_fu_391_p2 = (!zext_ln894_2_fu_387_p1.read().is_01() || !zext_ln894_1_fu_375_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln894_2_fu_387_p1.read()) + sc_biguint<9>(zext_ln894_1_fu_375_p1.read()));
}

void relu_bn8::thread_add_ln944_fu_617_p2() {
    add_ln944_fu_617_p2 = (!ap_const_lv32_FFFFFFE8.is_01() || !sub_ln944_fu_608_p2.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFE8) + sc_biguint<32>(sub_ln944_fu_608_p2.read()));
}

void relu_bn8::thread_add_ln949_fu_690_p2() {
    add_ln949_fu_690_p2 = (!ap_const_lv5_8.is_01() || !trunc_ln944_fu_613_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_8) + sc_biguint<5>(trunc_ln944_fu_613_p1.read()));
}

void relu_bn8::thread_add_ln958_fu_735_p2() {
    add_ln958_fu_735_p2 = (!ap_const_lv32_FFFFFFE7.is_01() || !sub_ln944_fu_608_p2.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFE7) + sc_biguint<32>(sub_ln944_fu_608_p2.read()));
}

void relu_bn8::thread_add_ln961_fu_779_p2() {
    add_ln961_fu_779_p2 = (!zext_ln961_fu_775_p1.read().is_01() || !select_ln958_fu_767_p3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln961_fu_775_p1.read()) + sc_biguint<64>(select_ln958_fu_767_p3.read()));
}

void relu_bn8::thread_add_ln964_fu_820_p2() {
    add_ln964_fu_820_p2 = (!sub_ln964_fu_815_p2.read().is_01() || !select_ln964_fu_807_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(sub_ln964_fu_815_p2.read()) + sc_biguint<8>(select_ln964_fu_807_p3.read()));
}

void relu_bn8::thread_and_ln894_fu_409_p2() {
    and_ln894_fu_409_p2 = (icmp_ln886_fu_403_p2.read() & xor_ln894_fu_397_p2.read());
}

void relu_bn8::thread_and_ln947_1_fu_670_p2() {
    and_ln947_1_fu_670_p2 = (icmp_ln947_fu_633_p2.read() & icmp_ln947_1_fu_664_p2.read());
}

void relu_bn8::thread_and_ln947_fu_659_p2() {
    and_ln947_fu_659_p2 = (select_ln1495_1_reg_923.read() & lshr_ln947_fu_653_p2.read());
}

void relu_bn8::thread_and_ln949_fu_703_p2() {
    and_ln949_fu_703_p2 = (p_Result_3_i_fu_696_p3.read() & xor_ln949_fu_684_p2.read());
}

void relu_bn8::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void relu_bn8::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void relu_bn8::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[2];
}

void relu_bn8::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_bn8::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, conv8_pipe_15_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_result_BVALID.read())));
}

void relu_bn8::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, conv8_pipe_15_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_result_BVALID.read())));
}

void relu_bn8::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, conv8_pipe_15_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_result_BVALID.read())));
}

void relu_bn8::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read()));
}

void relu_bn8::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_result_BVALID.read()));
}

void relu_bn8::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_bn8::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()) && esl_seteq<1,1,1>(ap_const_logic_0, conv8_pipe_15_V_V_empty_n.read()));
}

void relu_bn8::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_result_AWREADY.read()));
}

void relu_bn8::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_bn8::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_result_WREADY.read()));
}

void relu_bn8::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_bn8::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_bn8::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_bn8::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_bn8::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_bn8::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln884_fu_327_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void relu_bn8::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void relu_bn8::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void relu_bn8::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void relu_bn8::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void relu_bn8::thread_ap_phi_mux_args07_0_0_i_phi_fu_273_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()))) {
        ap_phi_mux_args07_0_0_i_phi_fu_273_p4 = select_ln894_1_reg_887.read();
    } else {
        ap_phi_mux_args07_0_0_i_phi_fu_273_p4 = args07_0_0_i_reg_269.read();
    }
}

void relu_bn8::thread_ap_phi_mux_args17_0_0_i_phi_fu_295_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()))) {
        ap_phi_mux_args17_0_0_i_phi_fu_295_p4 = select_ln894_3_reg_892.read();
    } else {
        ap_phi_mux_args17_0_0_i_phi_fu_295_p4 = args17_0_0_i_reg_291.read();
    }
}

void relu_bn8::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void relu_bn8::thread_b_batchnorm8_V_address0() {
    b_batchnorm8_V_address0 =  (sc_lv<6>) (zext_ln892_fu_465_p1.read());
}

void relu_bn8::thread_b_batchnorm8_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        b_batchnorm8_V_ce0 = ap_const_logic_1;
    } else {
        b_batchnorm8_V_ce0 = ap_const_logic_0;
    }
}

void relu_bn8::thread_bitcast_ln739_fu_850_p1() {
    bitcast_ln739_fu_850_p1 = trunc_ln738_fu_846_p1.read();
}

void relu_bn8::thread_conv8_pipe_15_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()))) {
        conv8_pipe_15_V_V_blk_n = conv8_pipe_15_V_V_empty_n.read();
    } else {
        conv8_pipe_15_V_V_blk_n = ap_const_logic_1;
    }
}

void relu_bn8::thread_conv8_pipe_15_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        conv8_pipe_15_V_V_read = ap_const_logic_1;
    } else {
        conv8_pipe_15_V_V_read = ap_const_logic_0;
    }
}

void relu_bn8::thread_icmp_ln1495_fu_536_p2() {
    icmp_ln1495_fu_536_p2 = (!trunc_ln_i_fu_520_p4.read().is_01() || !ap_const_lv16_100.is_01())? sc_lv<1>(): (sc_bigint<16>(trunc_ln_i_fu_520_p4.read()) > sc_bigint<16>(ap_const_lv16_100));
}

void relu_bn8::thread_icmp_ln884_fu_327_p2() {
    icmp_ln884_fu_327_p2 = (!indvar_flatten13_i_reg_258.read().is_01() || !ap_const_lv14_3200.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten13_i_reg_258.read() == ap_const_lv14_3200);
}

void relu_bn8::thread_icmp_ln885_fu_345_p2() {
    icmp_ln885_fu_345_p2 = (!indvar_flatten_i_reg_280.read().is_01() || !ap_const_lv12_500.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_i_reg_280.read() == ap_const_lv12_500);
}

void relu_bn8::thread_icmp_ln886_fu_403_p2() {
    icmp_ln886_fu_403_p2 = (!args27_0_0_i_reg_302.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(args27_0_0_i_reg_302.read() == ap_const_lv7_40);
}

void relu_bn8::thread_icmp_ln935_fu_603_p2() {
    icmp_ln935_fu_603_p2 = (!select_ln1495_1_reg_923.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(select_ln1495_1_reg_923.read() == ap_const_lv5_0);
}

void relu_bn8::thread_icmp_ln947_1_fu_664_p2() {
    icmp_ln947_1_fu_664_p2 = (!and_ln947_fu_659_p2.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(and_ln947_fu_659_p2.read() != ap_const_lv5_0);
}

void relu_bn8::thread_icmp_ln947_fu_633_p2() {
    icmp_ln947_fu_633_p2 = (!tmp_2_fu_623_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_2_fu_623_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void relu_bn8::thread_icmp_ln958_fu_729_p2() {
    icmp_ln958_fu_729_p2 = (!add_ln944_fu_617_p2.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(add_ln944_fu_617_p2.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void relu_bn8::thread_l_i_fu_591_p3() {
    l_i_fu_591_p3 = esl_cttz<32,32>(p_Result_7_i_fu_583_p3.read());
}

void relu_bn8::thread_lshr_ln947_fu_653_p2() {
    lshr_ln947_fu_653_p2 = (!zext_ln947_fu_649_p1.read().is_01())? sc_lv<5>(): ap_const_lv5_1F >> (unsigned short)zext_ln947_fu_649_p1.read().to_uint();
}

void relu_bn8::thread_lshr_ln958_fu_741_p2() {
    lshr_ln958_fu_741_p2 = (!add_ln958_fu_735_p2.read().is_01())? sc_lv<32>(): zext_ln958_fu_726_p1.read() >> (unsigned short)add_ln958_fu_735_p2.read().to_uint();
}

void relu_bn8::thread_lshr_ln_i_fu_785_p4() {
    lshr_ln_i_fu_785_p4 = add_ln961_fu_779_p2.read().range(63, 1);
}

void relu_bn8::thread_m_axi_result_ARADDR() {
    m_axi_result_ARADDR = ap_const_lv32_0;
}

void relu_bn8::thread_m_axi_result_ARBURST() {
    m_axi_result_ARBURST = ap_const_lv2_0;
}

void relu_bn8::thread_m_axi_result_ARCACHE() {
    m_axi_result_ARCACHE = ap_const_lv4_0;
}

void relu_bn8::thread_m_axi_result_ARID() {
    m_axi_result_ARID = ap_const_lv1_0;
}

void relu_bn8::thread_m_axi_result_ARLEN() {
    m_axi_result_ARLEN = ap_const_lv32_0;
}

void relu_bn8::thread_m_axi_result_ARLOCK() {
    m_axi_result_ARLOCK = ap_const_lv2_0;
}

void relu_bn8::thread_m_axi_result_ARPROT() {
    m_axi_result_ARPROT = ap_const_lv3_0;
}

void relu_bn8::thread_m_axi_result_ARQOS() {
    m_axi_result_ARQOS = ap_const_lv4_0;
}

void relu_bn8::thread_m_axi_result_ARREGION() {
    m_axi_result_ARREGION = ap_const_lv4_0;
}

void relu_bn8::thread_m_axi_result_ARSIZE() {
    m_axi_result_ARSIZE = ap_const_lv3_0;
}

void relu_bn8::thread_m_axi_result_ARUSER() {
    m_axi_result_ARUSER = ap_const_lv1_0;
}

void relu_bn8::thread_m_axi_result_ARVALID() {
    m_axi_result_ARVALID = ap_const_logic_0;
}

void relu_bn8::thread_m_axi_result_AWADDR() {
    m_axi_result_AWADDR = result_addr_reg_897_pp0_iter1_reg.read();
}

void relu_bn8::thread_m_axi_result_AWBURST() {
    m_axi_result_AWBURST = ap_const_lv2_0;
}

void relu_bn8::thread_m_axi_result_AWCACHE() {
    m_axi_result_AWCACHE = ap_const_lv4_0;
}

void relu_bn8::thread_m_axi_result_AWID() {
    m_axi_result_AWID = ap_const_lv1_0;
}

void relu_bn8::thread_m_axi_result_AWLEN() {
    m_axi_result_AWLEN = ap_const_lv32_1;
}

void relu_bn8::thread_m_axi_result_AWLOCK() {
    m_axi_result_AWLOCK = ap_const_lv2_0;
}

void relu_bn8::thread_m_axi_result_AWPROT() {
    m_axi_result_AWPROT = ap_const_lv3_0;
}

void relu_bn8::thread_m_axi_result_AWQOS() {
    m_axi_result_AWQOS = ap_const_lv4_0;
}

void relu_bn8::thread_m_axi_result_AWREGION() {
    m_axi_result_AWREGION = ap_const_lv4_0;
}

void relu_bn8::thread_m_axi_result_AWSIZE() {
    m_axi_result_AWSIZE = ap_const_lv3_0;
}

void relu_bn8::thread_m_axi_result_AWUSER() {
    m_axi_result_AWUSER = ap_const_lv1_0;
}

void relu_bn8::thread_m_axi_result_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_result_AWVALID = ap_const_logic_1;
    } else {
        m_axi_result_AWVALID = ap_const_logic_0;
    }
}

void relu_bn8::thread_m_axi_result_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter7_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_result_BREADY = ap_const_logic_1;
    } else {
        m_axi_result_BREADY = ap_const_logic_0;
    }
}

void relu_bn8::thread_m_axi_result_RREADY() {
    m_axi_result_RREADY = ap_const_logic_0;
}

void relu_bn8::thread_m_axi_result_WDATA() {
    m_axi_result_WDATA = select_ln935_reg_942.read();
}

void relu_bn8::thread_m_axi_result_WID() {
    m_axi_result_WID = ap_const_lv1_0;
}

void relu_bn8::thread_m_axi_result_WLAST() {
    m_axi_result_WLAST = ap_const_logic_0;
}

void relu_bn8::thread_m_axi_result_WSTRB() {
    m_axi_result_WSTRB = ap_const_lv4_F;
}

void relu_bn8::thread_m_axi_result_WUSER() {
    m_axi_result_WUSER = ap_const_lv1_0;
}

void relu_bn8::thread_m_axi_result_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_result_WVALID = ap_const_logic_1;
    } else {
        m_axi_result_WVALID = ap_const_logic_0;
    }
}

void relu_bn8::thread_or_ln1495_fu_559_p2() {
    or_ln1495_fu_559_p2 = (tmp_1_fu_529_p3.read() | icmp_ln1495_fu_536_p2.read());
}

void relu_bn8::thread_or_ln894_fu_421_p2() {
    or_ln894_fu_421_p2 = (and_ln894_fu_409_p2.read() | icmp_ln885_fu_345_p2.read());
}

void relu_bn8::thread_or_ln949_fu_709_p2() {
    or_ln949_fu_709_p2 = (and_ln949_fu_703_p2.read() | and_ln947_1_fu_670_p2.read());
}

void relu_bn8::thread_or_ln_i_fu_715_p3() {
    or_ln_i_fu_715_p3 = esl_concat<31,1>(ap_const_lv31_0, or_ln949_fu_709_p2.read());
}

void relu_bn8::thread_p_Result_3_i_fu_696_p3() {
    p_Result_3_i_fu_696_p3 = (!add_ln949_fu_690_p2.read().is_01() || sc_biguint<5>(add_ln949_fu_690_p2.read()).to_uint() >= 5)? sc_lv<1>(): select_ln1495_1_reg_923.read().range(sc_biguint<5>(add_ln949_fu_690_p2.read()).to_uint(), sc_biguint<5>(add_ln949_fu_690_p2.read()).to_uint());
}

void relu_bn8::thread_p_Result_7_i_fu_583_p3() {
    p_Result_7_i_fu_583_p3 = esl_concat<27,5>(ap_const_lv27_7FFFFFF, p_Result_i_fu_573_p4.read());
}

void relu_bn8::thread_p_Result_9_i_fu_834_p5() {
    p_Result_9_i_fu_834_p5 = esl_partset<64,64,9,32,32>(zext_ln962_fu_795_p1.read(), tmp_5_i_fu_826_p3.read(), ap_const_lv32_17, ap_const_lv32_1F);
}

void relu_bn8::thread_p_Result_i_fu_573_p4() {
    p_Result_i_fu_573_p4 = select_ln1495_1_fu_565_p3.read().range(0, 4);
}

void relu_bn8::thread_result_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter1_reg.read()))) {
        result_blk_n_AW = m_axi_result_AWREADY.read();
    } else {
        result_blk_n_AW = ap_const_logic_1;
    }
}

void relu_bn8::thread_result_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter7_reg.read()))) {
        result_blk_n_B = m_axi_result_BVALID.read();
    } else {
        result_blk_n_B = ap_const_logic_1;
    }
}

void relu_bn8::thread_result_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln884_reg_878_pp0_iter2_reg.read()))) {
        result_blk_n_W = m_axi_result_WREADY.read();
    } else {
        result_blk_n_W = ap_const_logic_1;
    }
}

void relu_bn8::thread_result_offset1_i_fu_313_p4() {
    result_offset1_i_fu_313_p4 = result_offset_dout.read().range(31, 2);
}

void relu_bn8::thread_result_offset_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        result_offset_blk_n = result_offset_empty_n.read();
    } else {
        result_offset_blk_n = ap_const_logic_1;
    }
}

void relu_bn8::thread_result_offset_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read())))) {
        result_offset_read = ap_const_logic_1;
    } else {
        result_offset_read = ap_const_logic_0;
    }
}

void relu_bn8::thread_select_ln1495_1_fu_565_p3() {
    select_ln1495_1_fu_565_p3 = (!or_ln1495_fu_559_p2.read()[0].is_01())? sc_lv<5>(): ((or_ln1495_fu_559_p2.read()[0].to_bool())? select_ln1495_fu_551_p3.read(): tmp_7_i_fu_542_p4.read());
}

void relu_bn8::thread_select_ln1495_fu_551_p3() {
    select_ln1495_fu_551_p3 = (!tmp_1_fu_529_p3.read()[0].is_01())? sc_lv<5>(): ((tmp_1_fu_529_p3.read()[0].to_bool())? ap_const_lv5_0: ap_const_lv5_10);
}

void relu_bn8::thread_select_ln885_fu_500_p3() {
    select_ln885_fu_500_p3 = (!icmp_ln885_fu_345_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln885_fu_345_p2.read()[0].to_bool())? ap_const_lv12_1: add_ln885_1_fu_494_p2.read());
}

void relu_bn8::thread_select_ln894_1_fu_359_p3() {
    select_ln894_1_fu_359_p3 = (!icmp_ln885_fu_345_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln885_fu_345_p2.read()[0].to_bool())? add_ln884_1_fu_339_p2.read(): ap_phi_mux_args07_0_0_i_phi_fu_273_p4.read());
}

void relu_bn8::thread_select_ln894_2_fu_427_p3() {
    select_ln894_2_fu_427_p3 = (!or_ln894_fu_421_p2.read()[0].is_01())? sc_lv<7>(): ((or_ln894_fu_421_p2.read()[0].to_bool())? ap_const_lv7_0: args27_0_0_i_reg_302.read());
}

void relu_bn8::thread_select_ln894_3_fu_435_p3() {
    select_ln894_3_fu_435_p3 = (!and_ln894_fu_409_p2.read()[0].is_01())? sc_lv<5>(): ((and_ln894_fu_409_p2.read()[0].to_bool())? add_ln885_fu_415_p2.read(): select_ln894_fu_351_p3.read());
}

void relu_bn8::thread_select_ln894_fu_351_p3() {
    select_ln894_fu_351_p3 = (!icmp_ln885_fu_345_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln885_fu_345_p2.read()[0].to_bool())? ap_const_lv5_0: ap_phi_mux_args17_0_0_i_phi_fu_295_p4.read());
}

void relu_bn8::thread_select_ln935_fu_854_p3() {
    select_ln935_fu_854_p3 = (!icmp_ln935_fu_603_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln935_fu_603_p2.read()[0].to_bool())? ap_const_lv32_0: bitcast_ln739_fu_850_p1.read());
}

void relu_bn8::thread_select_ln958_fu_767_p3() {
    select_ln958_fu_767_p3 = (!icmp_ln958_fu_729_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln958_fu_729_p2.read()[0].to_bool())? zext_ln958_1_fu_747_p1.read(): shl_ln958_fu_761_p2.read());
}

void relu_bn8::thread_select_ln964_fu_807_p3() {
    select_ln964_fu_807_p3 = (!tmp_4_fu_799_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_4_fu_799_p3.read()[0].to_bool())? ap_const_lv8_7F: ap_const_lv8_7E);
}

void relu_bn8::thread_shl_ln958_fu_761_p2() {
    shl_ln958_fu_761_p2 = (!zext_ln958_2_fu_757_p1.read().is_01())? sc_lv<64>(): zext_ln957_fu_723_p1.read() << (unsigned short)zext_ln958_2_fu_757_p1.read().to_uint();
}

void relu_bn8::thread_sub_ln944_fu_608_p2() {
    sub_ln944_fu_608_p2 = (!ap_const_lv32_5.is_01() || !l_i_reg_932.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_5) - sc_biguint<32>(l_i_reg_932.read()));
}

void relu_bn8::thread_sub_ln947_fu_643_p2() {
    sub_ln947_fu_643_p2 = (!ap_const_lv3_6.is_01() || !trunc_ln947_fu_639_p1.read().is_01())? sc_lv<3>(): (sc_bigint<3>(ap_const_lv3_6) - sc_biguint<3>(trunc_ln947_fu_639_p1.read()));
}

void relu_bn8::thread_sub_ln958_fu_751_p2() {
    sub_ln958_fu_751_p2 = (!ap_const_lv32_19.is_01() || !sub_ln944_fu_608_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_19) - sc_biguint<32>(sub_ln944_fu_608_p2.read()));
}

void relu_bn8::thread_sub_ln964_fu_815_p2() {
    sub_ln964_fu_815_p2 = (!ap_const_lv8_1.is_01() || !trunc_ln943_reg_937.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) - sc_biguint<8>(trunc_ln943_reg_937.read()));
}

void relu_bn8::thread_tmp_1_fu_529_p3() {
    tmp_1_fu_529_p3 = grp_fu_862_p3.read().range(25, 25);
}

void relu_bn8::thread_tmp_1_i_fu_367_p3() {
    tmp_1_i_fu_367_p3 = esl_concat<4,4>(select_ln894_1_fu_359_p3.read(), ap_const_lv4_0);
}

void relu_bn8::thread_tmp_2_fu_623_p4() {
    tmp_2_fu_623_p4 = add_ln944_fu_617_p2.read().range(31, 1);
}

void relu_bn8::thread_tmp_2_i_fu_379_p3() {
    tmp_2_i_fu_379_p3 = esl_concat<4,2>(select_ln894_1_fu_359_p3.read(), ap_const_lv2_0);
}

void relu_bn8::thread_tmp_3_fu_676_p3() {
    tmp_3_fu_676_p3 = add_ln944_fu_617_p2.read().range(31, 31);
}

void relu_bn8::thread_tmp_4_fu_799_p3() {
    tmp_4_fu_799_p3 = add_ln961_fu_779_p2.read().range(25, 25);
}

void relu_bn8::thread_tmp_5_i_fu_826_p3() {
    tmp_5_i_fu_826_p3 = esl_concat<1,8>(ap_const_lv1_0, add_ln964_fu_820_p2.read());
}

void relu_bn8::thread_tmp_7_i_fu_542_p4() {
    tmp_7_i_fu_542_p4 = grp_fu_862_p3.read().range(18, 14);
}

void relu_bn8::thread_tmp_fu_453_p3() {
    tmp_fu_453_p3 = esl_concat<9,6>(add_ln894_1_fu_447_p2.read(), ap_const_lv6_0);
}

void relu_bn8::thread_trunc_ln738_fu_846_p1() {
    trunc_ln738_fu_846_p1 = p_Result_9_i_fu_834_p5.read().range(32-1, 0);
}

void relu_bn8::thread_trunc_ln943_fu_599_p1() {
    trunc_ln943_fu_599_p1 = l_i_fu_591_p3.read().range(8-1, 0);
}

void relu_bn8::thread_trunc_ln944_fu_613_p1() {
    trunc_ln944_fu_613_p1 = sub_ln944_fu_608_p2.read().range(5-1, 0);
}

void relu_bn8::thread_trunc_ln947_fu_639_p1() {
    trunc_ln947_fu_639_p1 = sub_ln944_fu_608_p2.read().range(3-1, 0);
}

void relu_bn8::thread_trunc_ln_i_fu_520_p4() {
    trunc_ln_i_fu_520_p4 = grp_fu_862_p3.read().range(25, 10);
}

void relu_bn8::thread_xor_ln894_fu_397_p2() {
    xor_ln894_fu_397_p2 = (icmp_ln885_fu_345_p2.read() ^ ap_const_lv1_1);
}

void relu_bn8::thread_xor_ln949_fu_684_p2() {
    xor_ln949_fu_684_p2 = (tmp_3_fu_676_p3.read() ^ ap_const_lv1_1);
}

void relu_bn8::thread_zext_ln892_fu_465_p1() {
    zext_ln892_fu_465_p1 = esl_zext<64,7>(select_ln894_2_fu_427_p3.read());
}

void relu_bn8::thread_zext_ln894_1_fu_375_p1() {
    zext_ln894_1_fu_375_p1 = esl_zext<9,8>(tmp_1_i_fu_367_p3.read());
}

void relu_bn8::thread_zext_ln894_2_fu_387_p1() {
    zext_ln894_2_fu_387_p1 = esl_zext<9,6>(tmp_2_i_fu_379_p3.read());
}

void relu_bn8::thread_zext_ln894_3_fu_443_p1() {
    zext_ln894_3_fu_443_p1 = esl_zext<9,5>(select_ln894_3_fu_435_p3.read());
}

void relu_bn8::thread_zext_ln894_4_fu_461_p1() {
    zext_ln894_4_fu_461_p1 = esl_zext<64,15>(tmp_fu_453_p3.read());
}

void relu_bn8::thread_zext_ln894_fu_323_p1() {
    zext_ln894_fu_323_p1 = esl_zext<64,30>(result_offset1_i_fu_313_p4.read());
}

void relu_bn8::thread_zext_ln947_fu_649_p1() {
    zext_ln947_fu_649_p1 = esl_zext<5,3>(sub_ln947_fu_643_p2.read());
}

void relu_bn8::thread_zext_ln957_fu_723_p1() {
    zext_ln957_fu_723_p1 = esl_zext<64,5>(select_ln1495_1_reg_923.read());
}

void relu_bn8::thread_zext_ln958_1_fu_747_p1() {
    zext_ln958_1_fu_747_p1 = esl_zext<64,32>(lshr_ln958_fu_741_p2.read());
}

void relu_bn8::thread_zext_ln958_2_fu_757_p1() {
    zext_ln958_2_fu_757_p1 = esl_zext<64,32>(sub_ln958_fu_751_p2.read());
}

void relu_bn8::thread_zext_ln958_fu_726_p1() {
    zext_ln958_fu_726_p1 = esl_zext<32,5>(select_ln1495_1_reg_923.read());
}

void relu_bn8::thread_zext_ln961_fu_775_p1() {
    zext_ln961_fu_775_p1 = esl_zext<64,32>(or_ln_i_fu_715_p3.read());
}

void relu_bn8::thread_zext_ln962_fu_795_p1() {
    zext_ln962_fu_795_p1 = esl_zext<64,63>(lshr_ln_i_fu_785_p4.read());
}

void relu_bn8::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, result_offset_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln884_fu_327_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln884_fu_327_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

