// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _test_HH_
#define _test_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv113.h"
#include "relu_bn1.h"
#include "maxpool1.h"
#include "conv2.h"
#include "relu_bn2.h"
#include "maxpool2.h"
#include "conv3.h"
#include "relu_bn3.h"
#include "maxpool3.h"
#include "conv4.h"
#include "relu_bn4.h"
#include "maxpool4.h"
#include "conv5.h"
#include "relu_bn5.h"
#include "conv6.h"
#include "relu_bn6.h"
#include "conv7.h"
#include "relu_bn7.h"
#include "conv8.h"
#include "relu_bn8.h"
#include "fifo_w16_d128_A.h"
#include "fifo_w32_d20_A.h"
#include "fifo_w5_d128_A.h"
#include "start_for_relu_bnCfe.h"
#include "start_for_relu_bnCge.h"
#include "start_for_maxpoolChe.h"
#include "start_for_conv2_U0.h"
#include "start_for_relu_bnCie.h"
#include "start_for_maxpoolCje.h"
#include "start_for_conv3_U0.h"
#include "start_for_relu_bnCke.h"
#include "start_for_maxpoolCle.h"
#include "start_for_conv4_U0.h"
#include "start_for_relu_bnCme.h"
#include "start_for_maxpoolCne.h"
#include "start_for_conv5_U0.h"
#include "start_for_relu_bnCoe.h"
#include "start_for_conv6_U0.h"
#include "start_for_relu_bnCpe.h"
#include "start_for_conv7_U0.h"
#include "start_for_relu_bnCqe.h"
#include "start_for_conv8_U0.h"
#include "test_control_s_axi.h"
#include "test_gmem_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_BUSER_WIDTH = 1>
struct test : public sc_module {
    // Port declarations 65
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > interrupt;
    sc_out< sc_logic > m_axi_gmem_AWVALID;
    sc_in< sc_logic > m_axi_gmem_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_AWUSER_WIDTH> > m_axi_gmem_AWUSER;
    sc_out< sc_logic > m_axi_gmem_WVALID;
    sc_in< sc_logic > m_axi_gmem_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH/8> > m_axi_gmem_WSTRB;
    sc_out< sc_logic > m_axi_gmem_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_WUSER_WIDTH> > m_axi_gmem_WUSER;
    sc_out< sc_logic > m_axi_gmem_ARVALID;
    sc_in< sc_logic > m_axi_gmem_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_ARUSER_WIDTH> > m_axi_gmem_ARUSER;
    sc_in< sc_logic > m_axi_gmem_RVALID;
    sc_out< sc_logic > m_axi_gmem_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_RDATA;
    sc_in< sc_logic > m_axi_gmem_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_RUSER_WIDTH> > m_axi_gmem_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_RRESP;
    sc_in< sc_logic > m_axi_gmem_BVALID;
    sc_out< sc_logic > m_axi_gmem_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_BUSER_WIDTH> > m_axi_gmem_BUSER;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<2> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const4;


    // Module declarations
    test(sc_module_name name);
    SC_HAS_PROCESS(test);

    ~test();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    test_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* test_control_s_axi_U;
    test_gmem_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>* test_gmem_m_axi_U;
    conv113* conv113_U0;
    relu_bn1* relu_bn1_U0;
    maxpool1* maxpool1_U0;
    conv2* conv2_U0;
    relu_bn2* relu_bn2_U0;
    maxpool2* maxpool2_U0;
    conv3* conv3_U0;
    relu_bn3* relu_bn3_U0;
    maxpool3* maxpool3_U0;
    conv4* conv4_U0;
    relu_bn4* relu_bn4_U0;
    maxpool4* maxpool4_U0;
    conv5* conv5_U0;
    relu_bn5* relu_bn5_U0;
    conv6* conv6_U0;
    relu_bn6* relu_bn6_U0;
    conv7* conv7_U0;
    relu_bn7* relu_bn7_U0;
    conv8* conv8_U0;
    relu_bn8* relu_bn8_U0;
    fifo_w16_d128_A* conv1_pipe_1_V_V_U;
    fifo_w32_d20_A* result_c_U;
    fifo_w5_d128_A* relu1_pipe_2_V_V_U;
    fifo_w5_d128_A* pool1_pipe_2_V_V_U;
    fifo_w16_d128_A* conv2_pipe_3_V_V_U;
    fifo_w5_d128_A* relu2_pipe_4_V_V_U;
    fifo_w5_d128_A* pool2_pipe_4_V_V_U;
    fifo_w16_d128_A* conv3_pipe_5_V_V_U;
    fifo_w5_d128_A* relu3_pipe_6_V_V_U;
    fifo_w5_d128_A* pool3_pipe_6_V_V_U;
    fifo_w16_d128_A* conv4_pipe_7_V_V_U;
    fifo_w5_d128_A* relu4_pipe_8_V_V_U;
    fifo_w5_d128_A* pool4_pipe_8_V_V_U;
    fifo_w16_d128_A* conv5_pipe_9_V_V_U;
    fifo_w5_d128_A* relu5_pipe_10_V_V_U;
    fifo_w16_d128_A* conv6_pipe_11_V_V_U;
    fifo_w5_d128_A* relu6_pipe_12_V_V_U;
    fifo_w16_d128_A* conv7_pipe_13_V_V_U;
    fifo_w5_d128_A* relu7_pipe_14_V_V_U;
    fifo_w16_d128_A* conv8_pipe_15_V_V_U;
    start_for_relu_bnCfe* start_for_relu_bnCfe_U;
    start_for_relu_bnCge* start_for_relu_bnCge_U;
    start_for_maxpoolChe* start_for_maxpoolChe_U;
    start_for_conv2_U0* start_for_conv2_U0_U;
    start_for_relu_bnCie* start_for_relu_bnCie_U;
    start_for_maxpoolCje* start_for_maxpoolCje_U;
    start_for_conv3_U0* start_for_conv3_U0_U;
    start_for_relu_bnCke* start_for_relu_bnCke_U;
    start_for_maxpoolCle* start_for_maxpoolCle_U;
    start_for_conv4_U0* start_for_conv4_U0_U;
    start_for_relu_bnCme* start_for_relu_bnCme_U;
    start_for_maxpoolCne* start_for_maxpoolCne_U;
    start_for_conv5_U0* start_for_conv5_U0_U;
    start_for_relu_bnCoe* start_for_relu_bnCoe_U;
    start_for_conv6_U0* start_for_conv6_U0_U;
    start_for_relu_bnCpe* start_for_relu_bnCpe_U;
    start_for_conv7_U0* start_for_conv7_U0_U;
    start_for_relu_bnCqe* start_for_relu_bnCqe_U;
    start_for_conv8_U0* start_for_conv8_U0_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<32> > input_image;
    sc_signal< sc_lv<32> > result;
    sc_signal< sc_logic > gmem_AWREADY;
    sc_signal< sc_logic > gmem_WREADY;
    sc_signal< sc_logic > gmem_ARREADY;
    sc_signal< sc_logic > gmem_RVALID;
    sc_signal< sc_lv<32> > gmem_RDATA;
    sc_signal< sc_logic > gmem_RLAST;
    sc_signal< sc_lv<1> > gmem_RID;
    sc_signal< sc_lv<1> > gmem_RUSER;
    sc_signal< sc_lv<2> > gmem_RRESP;
    sc_signal< sc_logic > gmem_BVALID;
    sc_signal< sc_lv<2> > gmem_BRESP;
    sc_signal< sc_lv<1> > gmem_BID;
    sc_signal< sc_lv<1> > gmem_BUSER;
    sc_signal< sc_logic > conv113_U0_ap_start;
    sc_signal< sc_logic > conv113_U0_start_full_n;
    sc_signal< sc_logic > conv113_U0_ap_done;
    sc_signal< sc_logic > conv113_U0_ap_continue;
    sc_signal< sc_logic > conv113_U0_ap_idle;
    sc_signal< sc_logic > conv113_U0_ap_ready;
    sc_signal< sc_logic > conv113_U0_start_out;
    sc_signal< sc_logic > conv113_U0_start_write;
    sc_signal< sc_logic > conv113_U0_m_axi_input_image_AWVALID;
    sc_signal< sc_lv<32> > conv113_U0_m_axi_input_image_AWADDR;
    sc_signal< sc_lv<1> > conv113_U0_m_axi_input_image_AWID;
    sc_signal< sc_lv<32> > conv113_U0_m_axi_input_image_AWLEN;
    sc_signal< sc_lv<3> > conv113_U0_m_axi_input_image_AWSIZE;
    sc_signal< sc_lv<2> > conv113_U0_m_axi_input_image_AWBURST;
    sc_signal< sc_lv<2> > conv113_U0_m_axi_input_image_AWLOCK;
    sc_signal< sc_lv<4> > conv113_U0_m_axi_input_image_AWCACHE;
    sc_signal< sc_lv<3> > conv113_U0_m_axi_input_image_AWPROT;
    sc_signal< sc_lv<4> > conv113_U0_m_axi_input_image_AWQOS;
    sc_signal< sc_lv<4> > conv113_U0_m_axi_input_image_AWREGION;
    sc_signal< sc_lv<1> > conv113_U0_m_axi_input_image_AWUSER;
    sc_signal< sc_logic > conv113_U0_m_axi_input_image_WVALID;
    sc_signal< sc_lv<32> > conv113_U0_m_axi_input_image_WDATA;
    sc_signal< sc_lv<4> > conv113_U0_m_axi_input_image_WSTRB;
    sc_signal< sc_logic > conv113_U0_m_axi_input_image_WLAST;
    sc_signal< sc_lv<1> > conv113_U0_m_axi_input_image_WID;
    sc_signal< sc_lv<1> > conv113_U0_m_axi_input_image_WUSER;
    sc_signal< sc_logic > conv113_U0_m_axi_input_image_ARVALID;
    sc_signal< sc_lv<32> > conv113_U0_m_axi_input_image_ARADDR;
    sc_signal< sc_lv<1> > conv113_U0_m_axi_input_image_ARID;
    sc_signal< sc_lv<32> > conv113_U0_m_axi_input_image_ARLEN;
    sc_signal< sc_lv<3> > conv113_U0_m_axi_input_image_ARSIZE;
    sc_signal< sc_lv<2> > conv113_U0_m_axi_input_image_ARBURST;
    sc_signal< sc_lv<2> > conv113_U0_m_axi_input_image_ARLOCK;
    sc_signal< sc_lv<4> > conv113_U0_m_axi_input_image_ARCACHE;
    sc_signal< sc_lv<3> > conv113_U0_m_axi_input_image_ARPROT;
    sc_signal< sc_lv<4> > conv113_U0_m_axi_input_image_ARQOS;
    sc_signal< sc_lv<4> > conv113_U0_m_axi_input_image_ARREGION;
    sc_signal< sc_lv<1> > conv113_U0_m_axi_input_image_ARUSER;
    sc_signal< sc_logic > conv113_U0_m_axi_input_image_RREADY;
    sc_signal< sc_logic > conv113_U0_m_axi_input_image_BREADY;
    sc_signal< sc_lv<16> > conv113_U0_conv1_pipe_1_V_V_din;
    sc_signal< sc_logic > conv113_U0_conv1_pipe_1_V_V_write;
    sc_signal< sc_lv<32> > conv113_U0_result_out_din;
    sc_signal< sc_logic > conv113_U0_result_out_write;
    sc_signal< sc_logic > relu_bn1_U0_ap_start;
    sc_signal< sc_logic > relu_bn1_U0_ap_done;
    sc_signal< sc_logic > relu_bn1_U0_ap_continue;
    sc_signal< sc_logic > relu_bn1_U0_ap_idle;
    sc_signal< sc_logic > relu_bn1_U0_ap_ready;
    sc_signal< sc_logic > relu_bn1_U0_start_out;
    sc_signal< sc_logic > relu_bn1_U0_start_write;
    sc_signal< sc_logic > relu_bn1_U0_conv1_pipe_1_V_V_read;
    sc_signal< sc_lv<5> > relu_bn1_U0_relu1_pipe_2_V_V_din;
    sc_signal< sc_logic > relu_bn1_U0_relu1_pipe_2_V_V_write;
    sc_signal< sc_logic > maxpool1_U0_ap_start;
    sc_signal< sc_logic > maxpool1_U0_ap_done;
    sc_signal< sc_logic > maxpool1_U0_ap_continue;
    sc_signal< sc_logic > maxpool1_U0_ap_idle;
    sc_signal< sc_logic > maxpool1_U0_ap_ready;
    sc_signal< sc_logic > maxpool1_U0_start_out;
    sc_signal< sc_logic > maxpool1_U0_start_write;
    sc_signal< sc_logic > maxpool1_U0_relu1_pipe_2_V_V_read;
    sc_signal< sc_lv<5> > maxpool1_U0_pool1_pipe_2_V_V_din;
    sc_signal< sc_logic > maxpool1_U0_pool1_pipe_2_V_V_write;
    sc_signal< sc_logic > conv2_U0_ap_start;
    sc_signal< sc_logic > conv2_U0_ap_done;
    sc_signal< sc_logic > conv2_U0_ap_continue;
    sc_signal< sc_logic > conv2_U0_ap_idle;
    sc_signal< sc_logic > conv2_U0_ap_ready;
    sc_signal< sc_logic > conv2_U0_start_out;
    sc_signal< sc_logic > conv2_U0_start_write;
    sc_signal< sc_logic > conv2_U0_pool1_pipe_2_V_V_read;
    sc_signal< sc_lv<16> > conv2_U0_conv2_pipe_3_V_V_din;
    sc_signal< sc_logic > conv2_U0_conv2_pipe_3_V_V_write;
    sc_signal< sc_logic > relu_bn2_U0_ap_start;
    sc_signal< sc_logic > relu_bn2_U0_ap_done;
    sc_signal< sc_logic > relu_bn2_U0_ap_continue;
    sc_signal< sc_logic > relu_bn2_U0_ap_idle;
    sc_signal< sc_logic > relu_bn2_U0_ap_ready;
    sc_signal< sc_logic > relu_bn2_U0_start_out;
    sc_signal< sc_logic > relu_bn2_U0_start_write;
    sc_signal< sc_logic > relu_bn2_U0_conv2_pipe_3_V_V_read;
    sc_signal< sc_lv<5> > relu_bn2_U0_relu2_pipe_4_V_V_din;
    sc_signal< sc_logic > relu_bn2_U0_relu2_pipe_4_V_V_write;
    sc_signal< sc_logic > maxpool2_U0_ap_start;
    sc_signal< sc_logic > maxpool2_U0_ap_done;
    sc_signal< sc_logic > maxpool2_U0_ap_continue;
    sc_signal< sc_logic > maxpool2_U0_ap_idle;
    sc_signal< sc_logic > maxpool2_U0_ap_ready;
    sc_signal< sc_logic > maxpool2_U0_start_out;
    sc_signal< sc_logic > maxpool2_U0_start_write;
    sc_signal< sc_logic > maxpool2_U0_relu2_pipe_4_V_V_read;
    sc_signal< sc_lv<5> > maxpool2_U0_pool2_pipe_4_V_V_din;
    sc_signal< sc_logic > maxpool2_U0_pool2_pipe_4_V_V_write;
    sc_signal< sc_logic > conv3_U0_ap_start;
    sc_signal< sc_logic > conv3_U0_ap_done;
    sc_signal< sc_logic > conv3_U0_ap_continue;
    sc_signal< sc_logic > conv3_U0_ap_idle;
    sc_signal< sc_logic > conv3_U0_ap_ready;
    sc_signal< sc_logic > conv3_U0_start_out;
    sc_signal< sc_logic > conv3_U0_start_write;
    sc_signal< sc_logic > conv3_U0_pool2_pipe_4_V_V_read;
    sc_signal< sc_lv<16> > conv3_U0_conv3_pipe_5_V_V_din;
    sc_signal< sc_logic > conv3_U0_conv3_pipe_5_V_V_write;
    sc_signal< sc_logic > relu_bn3_U0_ap_start;
    sc_signal< sc_logic > relu_bn3_U0_ap_done;
    sc_signal< sc_logic > relu_bn3_U0_ap_continue;
    sc_signal< sc_logic > relu_bn3_U0_ap_idle;
    sc_signal< sc_logic > relu_bn3_U0_ap_ready;
    sc_signal< sc_logic > relu_bn3_U0_start_out;
    sc_signal< sc_logic > relu_bn3_U0_start_write;
    sc_signal< sc_logic > relu_bn3_U0_conv3_pipe_5_V_V_read;
    sc_signal< sc_lv<5> > relu_bn3_U0_relu3_pipe_6_V_V_din;
    sc_signal< sc_logic > relu_bn3_U0_relu3_pipe_6_V_V_write;
    sc_signal< sc_logic > maxpool3_U0_ap_start;
    sc_signal< sc_logic > maxpool3_U0_ap_done;
    sc_signal< sc_logic > maxpool3_U0_ap_continue;
    sc_signal< sc_logic > maxpool3_U0_ap_idle;
    sc_signal< sc_logic > maxpool3_U0_ap_ready;
    sc_signal< sc_logic > maxpool3_U0_start_out;
    sc_signal< sc_logic > maxpool3_U0_start_write;
    sc_signal< sc_logic > maxpool3_U0_relu3_pipe_6_V_V_read;
    sc_signal< sc_lv<5> > maxpool3_U0_pool3_pipe_6_V_V_din;
    sc_signal< sc_logic > maxpool3_U0_pool3_pipe_6_V_V_write;
    sc_signal< sc_logic > conv4_U0_ap_start;
    sc_signal< sc_logic > conv4_U0_ap_done;
    sc_signal< sc_logic > conv4_U0_ap_continue;
    sc_signal< sc_logic > conv4_U0_ap_idle;
    sc_signal< sc_logic > conv4_U0_ap_ready;
    sc_signal< sc_logic > conv4_U0_start_out;
    sc_signal< sc_logic > conv4_U0_start_write;
    sc_signal< sc_logic > conv4_U0_pool3_pipe_6_V_V_read;
    sc_signal< sc_lv<16> > conv4_U0_conv4_pipe_7_V_V_din;
    sc_signal< sc_logic > conv4_U0_conv4_pipe_7_V_V_write;
    sc_signal< sc_logic > relu_bn4_U0_ap_start;
    sc_signal< sc_logic > relu_bn4_U0_ap_done;
    sc_signal< sc_logic > relu_bn4_U0_ap_continue;
    sc_signal< sc_logic > relu_bn4_U0_ap_idle;
    sc_signal< sc_logic > relu_bn4_U0_ap_ready;
    sc_signal< sc_logic > relu_bn4_U0_start_out;
    sc_signal< sc_logic > relu_bn4_U0_start_write;
    sc_signal< sc_logic > relu_bn4_U0_conv4_pipe_7_V_V_read;
    sc_signal< sc_lv<5> > relu_bn4_U0_relu4_pipe_8_V_V_din;
    sc_signal< sc_logic > relu_bn4_U0_relu4_pipe_8_V_V_write;
    sc_signal< sc_logic > maxpool4_U0_ap_start;
    sc_signal< sc_logic > maxpool4_U0_ap_done;
    sc_signal< sc_logic > maxpool4_U0_ap_continue;
    sc_signal< sc_logic > maxpool4_U0_ap_idle;
    sc_signal< sc_logic > maxpool4_U0_ap_ready;
    sc_signal< sc_logic > maxpool4_U0_start_out;
    sc_signal< sc_logic > maxpool4_U0_start_write;
    sc_signal< sc_logic > maxpool4_U0_relu4_pipe_8_V_V_read;
    sc_signal< sc_lv<5> > maxpool4_U0_pool4_pipe_8_V_V_din;
    sc_signal< sc_logic > maxpool4_U0_pool4_pipe_8_V_V_write;
    sc_signal< sc_logic > conv5_U0_ap_start;
    sc_signal< sc_logic > conv5_U0_ap_done;
    sc_signal< sc_logic > conv5_U0_ap_continue;
    sc_signal< sc_logic > conv5_U0_ap_idle;
    sc_signal< sc_logic > conv5_U0_ap_ready;
    sc_signal< sc_logic > conv5_U0_start_out;
    sc_signal< sc_logic > conv5_U0_start_write;
    sc_signal< sc_logic > conv5_U0_pool4_pipe_8_V_V_read;
    sc_signal< sc_lv<16> > conv5_U0_conv5_pipe_9_V_V_din;
    sc_signal< sc_logic > conv5_U0_conv5_pipe_9_V_V_write;
    sc_signal< sc_logic > relu_bn5_U0_ap_start;
    sc_signal< sc_logic > relu_bn5_U0_ap_done;
    sc_signal< sc_logic > relu_bn5_U0_ap_continue;
    sc_signal< sc_logic > relu_bn5_U0_ap_idle;
    sc_signal< sc_logic > relu_bn5_U0_ap_ready;
    sc_signal< sc_logic > relu_bn5_U0_start_out;
    sc_signal< sc_logic > relu_bn5_U0_start_write;
    sc_signal< sc_logic > relu_bn5_U0_conv5_pipe_9_V_V_read;
    sc_signal< sc_lv<5> > relu_bn5_U0_relu5_pipe_10_V_V_din;
    sc_signal< sc_logic > relu_bn5_U0_relu5_pipe_10_V_V_write;
    sc_signal< sc_logic > conv6_U0_ap_start;
    sc_signal< sc_logic > conv6_U0_ap_done;
    sc_signal< sc_logic > conv6_U0_ap_continue;
    sc_signal< sc_logic > conv6_U0_ap_idle;
    sc_signal< sc_logic > conv6_U0_ap_ready;
    sc_signal< sc_logic > conv6_U0_start_out;
    sc_signal< sc_logic > conv6_U0_start_write;
    sc_signal< sc_logic > conv6_U0_relu5_pipe_10_V_V_read;
    sc_signal< sc_lv<16> > conv6_U0_conv6_pipe_11_V_V_din;
    sc_signal< sc_logic > conv6_U0_conv6_pipe_11_V_V_write;
    sc_signal< sc_logic > relu_bn6_U0_ap_start;
    sc_signal< sc_logic > relu_bn6_U0_ap_done;
    sc_signal< sc_logic > relu_bn6_U0_ap_continue;
    sc_signal< sc_logic > relu_bn6_U0_ap_idle;
    sc_signal< sc_logic > relu_bn6_U0_ap_ready;
    sc_signal< sc_logic > relu_bn6_U0_start_out;
    sc_signal< sc_logic > relu_bn6_U0_start_write;
    sc_signal< sc_logic > relu_bn6_U0_conv6_pipe_11_V_V_read;
    sc_signal< sc_lv<5> > relu_bn6_U0_relu6_pipe_12_V_V_din;
    sc_signal< sc_logic > relu_bn6_U0_relu6_pipe_12_V_V_write;
    sc_signal< sc_logic > conv7_U0_ap_start;
    sc_signal< sc_logic > conv7_U0_ap_done;
    sc_signal< sc_logic > conv7_U0_ap_continue;
    sc_signal< sc_logic > conv7_U0_ap_idle;
    sc_signal< sc_logic > conv7_U0_ap_ready;
    sc_signal< sc_logic > conv7_U0_start_out;
    sc_signal< sc_logic > conv7_U0_start_write;
    sc_signal< sc_logic > conv7_U0_relu6_pipe_12_V_V_read;
    sc_signal< sc_lv<16> > conv7_U0_conv7_pipe_13_V_V_din;
    sc_signal< sc_logic > conv7_U0_conv7_pipe_13_V_V_write;
    sc_signal< sc_logic > relu_bn7_U0_ap_start;
    sc_signal< sc_logic > relu_bn7_U0_ap_done;
    sc_signal< sc_logic > relu_bn7_U0_ap_continue;
    sc_signal< sc_logic > relu_bn7_U0_ap_idle;
    sc_signal< sc_logic > relu_bn7_U0_ap_ready;
    sc_signal< sc_logic > relu_bn7_U0_start_out;
    sc_signal< sc_logic > relu_bn7_U0_start_write;
    sc_signal< sc_logic > relu_bn7_U0_conv7_pipe_13_V_V_read;
    sc_signal< sc_lv<5> > relu_bn7_U0_relu7_pipe_14_V_V_din;
    sc_signal< sc_logic > relu_bn7_U0_relu7_pipe_14_V_V_write;
    sc_signal< sc_logic > conv8_U0_ap_start;
    sc_signal< sc_logic > conv8_U0_ap_done;
    sc_signal< sc_logic > conv8_U0_ap_continue;
    sc_signal< sc_logic > conv8_U0_ap_idle;
    sc_signal< sc_logic > conv8_U0_ap_ready;
    sc_signal< sc_logic > conv8_U0_relu7_pipe_14_V_V_read;
    sc_signal< sc_lv<16> > conv8_U0_conv8_pipe_15_V_V_din;
    sc_signal< sc_logic > conv8_U0_conv8_pipe_15_V_V_write;
    sc_signal< sc_logic > relu_bn8_U0_ap_start;
    sc_signal< sc_logic > relu_bn8_U0_ap_done;
    sc_signal< sc_logic > relu_bn8_U0_ap_continue;
    sc_signal< sc_logic > relu_bn8_U0_ap_idle;
    sc_signal< sc_logic > relu_bn8_U0_ap_ready;
    sc_signal< sc_logic > relu_bn8_U0_conv8_pipe_15_V_V_read;
    sc_signal< sc_logic > relu_bn8_U0_m_axi_result_AWVALID;
    sc_signal< sc_lv<32> > relu_bn8_U0_m_axi_result_AWADDR;
    sc_signal< sc_lv<1> > relu_bn8_U0_m_axi_result_AWID;
    sc_signal< sc_lv<32> > relu_bn8_U0_m_axi_result_AWLEN;
    sc_signal< sc_lv<3> > relu_bn8_U0_m_axi_result_AWSIZE;
    sc_signal< sc_lv<2> > relu_bn8_U0_m_axi_result_AWBURST;
    sc_signal< sc_lv<2> > relu_bn8_U0_m_axi_result_AWLOCK;
    sc_signal< sc_lv<4> > relu_bn8_U0_m_axi_result_AWCACHE;
    sc_signal< sc_lv<3> > relu_bn8_U0_m_axi_result_AWPROT;
    sc_signal< sc_lv<4> > relu_bn8_U0_m_axi_result_AWQOS;
    sc_signal< sc_lv<4> > relu_bn8_U0_m_axi_result_AWREGION;
    sc_signal< sc_lv<1> > relu_bn8_U0_m_axi_result_AWUSER;
    sc_signal< sc_logic > relu_bn8_U0_m_axi_result_WVALID;
    sc_signal< sc_lv<32> > relu_bn8_U0_m_axi_result_WDATA;
    sc_signal< sc_lv<4> > relu_bn8_U0_m_axi_result_WSTRB;
    sc_signal< sc_logic > relu_bn8_U0_m_axi_result_WLAST;
    sc_signal< sc_lv<1> > relu_bn8_U0_m_axi_result_WID;
    sc_signal< sc_lv<1> > relu_bn8_U0_m_axi_result_WUSER;
    sc_signal< sc_logic > relu_bn8_U0_m_axi_result_ARVALID;
    sc_signal< sc_lv<32> > relu_bn8_U0_m_axi_result_ARADDR;
    sc_signal< sc_lv<1> > relu_bn8_U0_m_axi_result_ARID;
    sc_signal< sc_lv<32> > relu_bn8_U0_m_axi_result_ARLEN;
    sc_signal< sc_lv<3> > relu_bn8_U0_m_axi_result_ARSIZE;
    sc_signal< sc_lv<2> > relu_bn8_U0_m_axi_result_ARBURST;
    sc_signal< sc_lv<2> > relu_bn8_U0_m_axi_result_ARLOCK;
    sc_signal< sc_lv<4> > relu_bn8_U0_m_axi_result_ARCACHE;
    sc_signal< sc_lv<3> > relu_bn8_U0_m_axi_result_ARPROT;
    sc_signal< sc_lv<4> > relu_bn8_U0_m_axi_result_ARQOS;
    sc_signal< sc_lv<4> > relu_bn8_U0_m_axi_result_ARREGION;
    sc_signal< sc_lv<1> > relu_bn8_U0_m_axi_result_ARUSER;
    sc_signal< sc_logic > relu_bn8_U0_m_axi_result_RREADY;
    sc_signal< sc_logic > relu_bn8_U0_m_axi_result_BREADY;
    sc_signal< sc_logic > relu_bn8_U0_result_offset_read;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > conv1_pipe_1_V_V_full_n;
    sc_signal< sc_lv<16> > conv1_pipe_1_V_V_dout;
    sc_signal< sc_logic > conv1_pipe_1_V_V_empty_n;
    sc_signal< sc_logic > result_c_full_n;
    sc_signal< sc_lv<32> > result_c_dout;
    sc_signal< sc_logic > result_c_empty_n;
    sc_signal< sc_logic > relu1_pipe_2_V_V_full_n;
    sc_signal< sc_lv<5> > relu1_pipe_2_V_V_dout;
    sc_signal< sc_logic > relu1_pipe_2_V_V_empty_n;
    sc_signal< sc_logic > pool1_pipe_2_V_V_full_n;
    sc_signal< sc_lv<5> > pool1_pipe_2_V_V_dout;
    sc_signal< sc_logic > pool1_pipe_2_V_V_empty_n;
    sc_signal< sc_logic > conv2_pipe_3_V_V_full_n;
    sc_signal< sc_lv<16> > conv2_pipe_3_V_V_dout;
    sc_signal< sc_logic > conv2_pipe_3_V_V_empty_n;
    sc_signal< sc_logic > relu2_pipe_4_V_V_full_n;
    sc_signal< sc_lv<5> > relu2_pipe_4_V_V_dout;
    sc_signal< sc_logic > relu2_pipe_4_V_V_empty_n;
    sc_signal< sc_logic > pool2_pipe_4_V_V_full_n;
    sc_signal< sc_lv<5> > pool2_pipe_4_V_V_dout;
    sc_signal< sc_logic > pool2_pipe_4_V_V_empty_n;
    sc_signal< sc_logic > conv3_pipe_5_V_V_full_n;
    sc_signal< sc_lv<16> > conv3_pipe_5_V_V_dout;
    sc_signal< sc_logic > conv3_pipe_5_V_V_empty_n;
    sc_signal< sc_logic > relu3_pipe_6_V_V_full_n;
    sc_signal< sc_lv<5> > relu3_pipe_6_V_V_dout;
    sc_signal< sc_logic > relu3_pipe_6_V_V_empty_n;
    sc_signal< sc_logic > pool3_pipe_6_V_V_full_n;
    sc_signal< sc_lv<5> > pool3_pipe_6_V_V_dout;
    sc_signal< sc_logic > pool3_pipe_6_V_V_empty_n;
    sc_signal< sc_logic > conv4_pipe_7_V_V_full_n;
    sc_signal< sc_lv<16> > conv4_pipe_7_V_V_dout;
    sc_signal< sc_logic > conv4_pipe_7_V_V_empty_n;
    sc_signal< sc_logic > relu4_pipe_8_V_V_full_n;
    sc_signal< sc_lv<5> > relu4_pipe_8_V_V_dout;
    sc_signal< sc_logic > relu4_pipe_8_V_V_empty_n;
    sc_signal< sc_logic > pool4_pipe_8_V_V_full_n;
    sc_signal< sc_lv<5> > pool4_pipe_8_V_V_dout;
    sc_signal< sc_logic > pool4_pipe_8_V_V_empty_n;
    sc_signal< sc_logic > conv5_pipe_9_V_V_full_n;
    sc_signal< sc_lv<16> > conv5_pipe_9_V_V_dout;
    sc_signal< sc_logic > conv5_pipe_9_V_V_empty_n;
    sc_signal< sc_logic > relu5_pipe_10_V_V_full_n;
    sc_signal< sc_lv<5> > relu5_pipe_10_V_V_dout;
    sc_signal< sc_logic > relu5_pipe_10_V_V_empty_n;
    sc_signal< sc_logic > conv6_pipe_11_V_V_full_n;
    sc_signal< sc_lv<16> > conv6_pipe_11_V_V_dout;
    sc_signal< sc_logic > conv6_pipe_11_V_V_empty_n;
    sc_signal< sc_logic > relu6_pipe_12_V_V_full_n;
    sc_signal< sc_lv<5> > relu6_pipe_12_V_V_dout;
    sc_signal< sc_logic > relu6_pipe_12_V_V_empty_n;
    sc_signal< sc_logic > conv7_pipe_13_V_V_full_n;
    sc_signal< sc_lv<16> > conv7_pipe_13_V_V_dout;
    sc_signal< sc_logic > conv7_pipe_13_V_V_empty_n;
    sc_signal< sc_logic > relu7_pipe_14_V_V_full_n;
    sc_signal< sc_lv<5> > relu7_pipe_14_V_V_dout;
    sc_signal< sc_logic > relu7_pipe_14_V_V_empty_n;
    sc_signal< sc_logic > conv8_pipe_15_V_V_full_n;
    sc_signal< sc_lv<16> > conv8_pipe_15_V_V_dout;
    sc_signal< sc_logic > conv8_pipe_15_V_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_relu_bn1_U0_din;
    sc_signal< sc_logic > start_for_relu_bn1_U0_full_n;
    sc_signal< sc_lv<1> > start_for_relu_bn1_U0_dout;
    sc_signal< sc_logic > start_for_relu_bn1_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_relu_bn8_U0_din;
    sc_signal< sc_logic > start_for_relu_bn8_U0_full_n;
    sc_signal< sc_lv<1> > start_for_relu_bn8_U0_dout;
    sc_signal< sc_logic > start_for_relu_bn8_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_maxpool1_U0_din;
    sc_signal< sc_logic > start_for_maxpool1_U0_full_n;
    sc_signal< sc_lv<1> > start_for_maxpool1_U0_dout;
    sc_signal< sc_logic > start_for_maxpool1_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_conv2_U0_din;
    sc_signal< sc_logic > start_for_conv2_U0_full_n;
    sc_signal< sc_lv<1> > start_for_conv2_U0_dout;
    sc_signal< sc_logic > start_for_conv2_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_relu_bn2_U0_din;
    sc_signal< sc_logic > start_for_relu_bn2_U0_full_n;
    sc_signal< sc_lv<1> > start_for_relu_bn2_U0_dout;
    sc_signal< sc_logic > start_for_relu_bn2_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_maxpool2_U0_din;
    sc_signal< sc_logic > start_for_maxpool2_U0_full_n;
    sc_signal< sc_lv<1> > start_for_maxpool2_U0_dout;
    sc_signal< sc_logic > start_for_maxpool2_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_conv3_U0_din;
    sc_signal< sc_logic > start_for_conv3_U0_full_n;
    sc_signal< sc_lv<1> > start_for_conv3_U0_dout;
    sc_signal< sc_logic > start_for_conv3_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_relu_bn3_U0_din;
    sc_signal< sc_logic > start_for_relu_bn3_U0_full_n;
    sc_signal< sc_lv<1> > start_for_relu_bn3_U0_dout;
    sc_signal< sc_logic > start_for_relu_bn3_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_maxpool3_U0_din;
    sc_signal< sc_logic > start_for_maxpool3_U0_full_n;
    sc_signal< sc_lv<1> > start_for_maxpool3_U0_dout;
    sc_signal< sc_logic > start_for_maxpool3_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_conv4_U0_din;
    sc_signal< sc_logic > start_for_conv4_U0_full_n;
    sc_signal< sc_lv<1> > start_for_conv4_U0_dout;
    sc_signal< sc_logic > start_for_conv4_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_relu_bn4_U0_din;
    sc_signal< sc_logic > start_for_relu_bn4_U0_full_n;
    sc_signal< sc_lv<1> > start_for_relu_bn4_U0_dout;
    sc_signal< sc_logic > start_for_relu_bn4_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_maxpool4_U0_din;
    sc_signal< sc_logic > start_for_maxpool4_U0_full_n;
    sc_signal< sc_lv<1> > start_for_maxpool4_U0_dout;
    sc_signal< sc_logic > start_for_maxpool4_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_conv5_U0_din;
    sc_signal< sc_logic > start_for_conv5_U0_full_n;
    sc_signal< sc_lv<1> > start_for_conv5_U0_dout;
    sc_signal< sc_logic > start_for_conv5_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_relu_bn5_U0_din;
    sc_signal< sc_logic > start_for_relu_bn5_U0_full_n;
    sc_signal< sc_lv<1> > start_for_relu_bn5_U0_dout;
    sc_signal< sc_logic > start_for_relu_bn5_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_conv6_U0_din;
    sc_signal< sc_logic > start_for_conv6_U0_full_n;
    sc_signal< sc_lv<1> > start_for_conv6_U0_dout;
    sc_signal< sc_logic > start_for_conv6_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_relu_bn6_U0_din;
    sc_signal< sc_logic > start_for_relu_bn6_U0_full_n;
    sc_signal< sc_lv<1> > start_for_relu_bn6_U0_dout;
    sc_signal< sc_logic > start_for_relu_bn6_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_conv7_U0_din;
    sc_signal< sc_logic > start_for_conv7_U0_full_n;
    sc_signal< sc_lv<1> > start_for_conv7_U0_dout;
    sc_signal< sc_logic > start_for_conv7_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_relu_bn7_U0_din;
    sc_signal< sc_logic > start_for_relu_bn7_U0_full_n;
    sc_signal< sc_lv<1> > start_for_relu_bn7_U0_dout;
    sc_signal< sc_logic > start_for_relu_bn7_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_conv8_U0_din;
    sc_signal< sc_logic > start_for_conv8_U0_full_n;
    sc_signal< sc_lv<1> > start_for_conv8_U0_dout;
    sc_signal< sc_logic > start_for_conv8_U0_empty_n;
    sc_signal< sc_logic > conv8_U0_start_full_n;
    sc_signal< sc_logic > conv8_U0_start_write;
    sc_signal< sc_logic > relu_bn8_U0_start_full_n;
    sc_signal< sc_logic > relu_bn8_U0_start_write;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_S_AXI_WSTRB_WIDTH;
    static const int C_S_AXI_ADDR_WIDTH;
    static const sc_logic ap_const_logic_1;
    static const int C_M_AXI_GMEM_USER_VALUE;
    static const int C_M_AXI_GMEM_PROT_VALUE;
    static const int C_M_AXI_GMEM_CACHE_VALUE;
    static const int C_M_AXI_ID_WIDTH;
    static const int C_M_AXI_ADDR_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_WSTRB_WIDTH;
    static const int C_M_AXI_AWUSER_WIDTH;
    static const int C_M_AXI_ARUSER_WIDTH;
    static const int C_M_AXI_WUSER_WIDTH;
    static const int C_M_AXI_RUSER_WIDTH;
    static const int C_M_AXI_BUSER_WIDTH;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_conv113_U0_ap_continue();
    void thread_conv113_U0_ap_start();
    void thread_conv113_U0_start_full_n();
    void thread_conv2_U0_ap_continue();
    void thread_conv2_U0_ap_start();
    void thread_conv3_U0_ap_continue();
    void thread_conv3_U0_ap_start();
    void thread_conv4_U0_ap_continue();
    void thread_conv4_U0_ap_start();
    void thread_conv5_U0_ap_continue();
    void thread_conv5_U0_ap_start();
    void thread_conv6_U0_ap_continue();
    void thread_conv6_U0_ap_start();
    void thread_conv7_U0_ap_continue();
    void thread_conv7_U0_ap_start();
    void thread_conv8_U0_ap_continue();
    void thread_conv8_U0_ap_start();
    void thread_conv8_U0_start_full_n();
    void thread_conv8_U0_start_write();
    void thread_maxpool1_U0_ap_continue();
    void thread_maxpool1_U0_ap_start();
    void thread_maxpool2_U0_ap_continue();
    void thread_maxpool2_U0_ap_start();
    void thread_maxpool3_U0_ap_continue();
    void thread_maxpool3_U0_ap_start();
    void thread_maxpool4_U0_ap_continue();
    void thread_maxpool4_U0_ap_start();
    void thread_relu_bn1_U0_ap_continue();
    void thread_relu_bn1_U0_ap_start();
    void thread_relu_bn2_U0_ap_continue();
    void thread_relu_bn2_U0_ap_start();
    void thread_relu_bn3_U0_ap_continue();
    void thread_relu_bn3_U0_ap_start();
    void thread_relu_bn4_U0_ap_continue();
    void thread_relu_bn4_U0_ap_start();
    void thread_relu_bn5_U0_ap_continue();
    void thread_relu_bn5_U0_ap_start();
    void thread_relu_bn6_U0_ap_continue();
    void thread_relu_bn6_U0_ap_start();
    void thread_relu_bn7_U0_ap_continue();
    void thread_relu_bn7_U0_ap_start();
    void thread_relu_bn8_U0_ap_continue();
    void thread_relu_bn8_U0_ap_start();
    void thread_relu_bn8_U0_start_full_n();
    void thread_relu_bn8_U0_start_write();
    void thread_start_for_conv2_U0_din();
    void thread_start_for_conv3_U0_din();
    void thread_start_for_conv4_U0_din();
    void thread_start_for_conv5_U0_din();
    void thread_start_for_conv6_U0_din();
    void thread_start_for_conv7_U0_din();
    void thread_start_for_conv8_U0_din();
    void thread_start_for_maxpool1_U0_din();
    void thread_start_for_maxpool2_U0_din();
    void thread_start_for_maxpool3_U0_din();
    void thread_start_for_maxpool4_U0_din();
    void thread_start_for_relu_bn1_U0_din();
    void thread_start_for_relu_bn2_U0_din();
    void thread_start_for_relu_bn3_U0_din();
    void thread_start_for_relu_bn4_U0_din();
    void thread_start_for_relu_bn5_U0_din();
    void thread_start_for_relu_bn6_U0_din();
    void thread_start_for_relu_bn7_U0_din();
    void thread_start_for_relu_bn8_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
