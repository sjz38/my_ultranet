// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module maxpool2 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        relu2_pipe_4_V_V_dout,
        relu2_pipe_4_V_V_empty_n,
        relu2_pipe_4_V_V_read,
        pool2_pipe_4_V_V_din,
        pool2_pipe_4_V_V_full_n,
        pool2_pipe_4_V_V_write
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_pp0_stage0 = 40'd4;
parameter    ap_ST_fsm_pp0_stage1 = 40'd8;
parameter    ap_ST_fsm_pp0_stage2 = 40'd16;
parameter    ap_ST_fsm_pp0_stage3 = 40'd32;
parameter    ap_ST_fsm_pp0_stage4 = 40'd64;
parameter    ap_ST_fsm_pp0_stage5 = 40'd128;
parameter    ap_ST_fsm_pp0_stage6 = 40'd256;
parameter    ap_ST_fsm_pp0_stage7 = 40'd512;
parameter    ap_ST_fsm_pp0_stage8 = 40'd1024;
parameter    ap_ST_fsm_pp0_stage9 = 40'd2048;
parameter    ap_ST_fsm_pp0_stage10 = 40'd4096;
parameter    ap_ST_fsm_pp0_stage11 = 40'd8192;
parameter    ap_ST_fsm_pp0_stage12 = 40'd16384;
parameter    ap_ST_fsm_pp0_stage13 = 40'd32768;
parameter    ap_ST_fsm_pp0_stage14 = 40'd65536;
parameter    ap_ST_fsm_pp0_stage15 = 40'd131072;
parameter    ap_ST_fsm_pp0_stage16 = 40'd262144;
parameter    ap_ST_fsm_pp0_stage17 = 40'd524288;
parameter    ap_ST_fsm_pp0_stage18 = 40'd1048576;
parameter    ap_ST_fsm_pp0_stage19 = 40'd2097152;
parameter    ap_ST_fsm_pp0_stage20 = 40'd4194304;
parameter    ap_ST_fsm_pp0_stage21 = 40'd8388608;
parameter    ap_ST_fsm_pp0_stage22 = 40'd16777216;
parameter    ap_ST_fsm_pp0_stage23 = 40'd33554432;
parameter    ap_ST_fsm_pp0_stage24 = 40'd67108864;
parameter    ap_ST_fsm_pp0_stage25 = 40'd134217728;
parameter    ap_ST_fsm_pp0_stage26 = 40'd268435456;
parameter    ap_ST_fsm_pp0_stage27 = 40'd536870912;
parameter    ap_ST_fsm_pp0_stage28 = 40'd1073741824;
parameter    ap_ST_fsm_pp0_stage29 = 40'd2147483648;
parameter    ap_ST_fsm_pp0_stage30 = 40'd4294967296;
parameter    ap_ST_fsm_pp0_stage31 = 40'd8589934592;
parameter    ap_ST_fsm_state36 = 40'd17179869184;
parameter    ap_ST_fsm_pp1_stage0 = 40'd34359738368;
parameter    ap_ST_fsm_pp1_stage1 = 40'd68719476736;
parameter    ap_ST_fsm_pp1_stage2 = 40'd137438953472;
parameter    ap_ST_fsm_pp1_stage3 = 40'd274877906944;
parameter    ap_ST_fsm_state42 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [4:0] relu2_pipe_4_V_V_dout;
input   relu2_pipe_4_V_V_empty_n;
output   relu2_pipe_4_V_V_read;
output  [4:0] pool2_pipe_4_V_V_din;
input   pool2_pipe_4_V_V_full_n;
output   pool2_pipe_4_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg relu2_pipe_4_V_V_read;
reg pool2_pipe_4_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    relu2_pipe_4_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln322_reg_1164;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    pool2_pipe_4_V_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln331_reg_1226;
reg   [8:0] indvar_flatten_reg_500;
reg   [1:0] line_row_0_0_reg_511;
reg   [7:0] line_col_0_0_reg_522;
reg   [11:0] indvar_flatten7_reg_533;
reg   [7:0] block_0_0_reg_544;
reg   [5:0] c_0_0_reg_555;
wire   [0:0] icmp_ln320_fu_572_p2;
wire    ap_CS_fsm_state2;
wire   [5:0] add_ln320_fu_578_p2;
reg   [5:0] add_ln320_reg_1159;
wire   [0:0] icmp_ln322_fu_584_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state35_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] add_ln322_1_fu_590_p2;
reg   [8:0] add_ln322_1_reg_1168;
wire   [7:0] select_ln326_fu_608_p3;
reg   [7:0] select_ln326_reg_1173;
wire   [1:0] select_ln326_1_fu_616_p3;
reg   [1:0] select_ln326_1_reg_1179;
wire   [14:0] tmp_12_fu_661_p3;
reg   [14:0] tmp_12_reg_1186;
reg    ap_block_state4_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
wire   [7:0] add_ln323_fu_974_p2;
reg   [7:0] add_ln323_reg_1221;
reg    ap_block_state34_pp0_stage31_iter0;
reg    ap_block_pp0_stage31_11001;
wire   [0:0] icmp_ln331_fu_989_p2;
wire    ap_block_state37_pp1_stage0_iter0;
reg    ap_block_state41_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [11:0] add_ln331_1_fu_995_p2;
reg   [11:0] add_ln331_1_reg_1230;
reg    ap_enable_reg_pp1_iter0;
wire   [5:0] select_ln337_fu_1013_p3;
reg   [5:0] select_ln337_reg_1235;
wire   [7:0] select_ln337_1_fu_1021_p3;
reg   [7:0] select_ln337_1_reg_1240;
wire   [13:0] add_ln356_16_fu_1075_p2;
reg   [13:0] add_ln356_16_reg_1245;
wire   [13:0] add_ln356_17_fu_1086_p2;
reg   [13:0] add_ln356_17_reg_1255;
wire   [13:0] add_ln356_18_fu_1097_p2;
reg   [13:0] add_ln356_18_reg_1265;
wire   [13:0] add_ln356_19_fu_1103_p2;
reg   [13:0] add_ln356_19_reg_1271;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state38_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
wire   [13:0] select_ln251_fu_1113_p3;
reg   [13:0] select_ln251_reg_1282;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state39_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [13:0] select_ln251_1_fu_1128_p3;
reg   [13:0] select_ln251_1_reg_1297;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_state40_pp1_stage3_iter0;
wire    ap_block_pp1_stage3_11001;
wire   [5:0] add_ln332_fu_1150_p2;
reg   [5:0] add_ln332_reg_1312;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_block_pp0_stage31_subdone;
wire    ap_CS_fsm_state36;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state37;
wire    ap_block_pp1_stage3_subdone;
reg   [13:0] pool2_line_buffer_V_address0;
reg    pool2_line_buffer_V_ce0;
reg    pool2_line_buffer_V_we0;
wire   [4:0] pool2_line_buffer_V_q0;
reg   [13:0] pool2_line_buffer_V_address1;
reg    pool2_line_buffer_V_ce1;
wire   [4:0] pool2_line_buffer_V_q1;
reg   [5:0] h1_0_0_reg_489;
reg    ap_block_state1;
wire    ap_CS_fsm_state42;
reg   [8:0] ap_phi_mux_indvar_flatten_phi_fu_504_p4;
reg   [1:0] ap_phi_mux_line_row_0_0_phi_fu_515_p4;
reg   [7:0] ap_phi_mux_line_col_0_0_phi_fu_526_p4;
reg   [11:0] ap_phi_mux_indvar_flatten7_phi_fu_537_p4;
reg   [7:0] ap_phi_mux_block_0_0_phi_fu_548_p4;
reg   [5:0] ap_phi_mux_c_0_0_phi_fu_559_p4;
wire   [63:0] zext_ln356_23_fu_669_p1;
wire   [63:0] zext_ln356_24_fu_679_p1;
wire   [63:0] zext_ln356_25_fu_689_p1;
wire   [63:0] zext_ln356_26_fu_699_p1;
wire   [63:0] zext_ln356_27_fu_709_p1;
wire   [63:0] zext_ln356_28_fu_719_p1;
wire   [63:0] zext_ln356_29_fu_729_p1;
wire   [63:0] zext_ln356_30_fu_739_p1;
wire   [63:0] zext_ln356_31_fu_749_p1;
wire   [63:0] zext_ln356_32_fu_759_p1;
wire   [63:0] zext_ln356_33_fu_769_p1;
wire   [63:0] zext_ln356_34_fu_779_p1;
wire   [63:0] zext_ln356_35_fu_789_p1;
wire   [63:0] zext_ln356_36_fu_799_p1;
wire   [63:0] zext_ln356_37_fu_809_p1;
wire   [63:0] zext_ln356_38_fu_819_p1;
wire   [63:0] zext_ln356_39_fu_829_p1;
wire   [63:0] zext_ln356_40_fu_839_p1;
wire   [63:0] zext_ln356_41_fu_849_p1;
wire   [63:0] zext_ln356_42_fu_859_p1;
wire   [63:0] zext_ln356_43_fu_869_p1;
wire   [63:0] zext_ln356_44_fu_879_p1;
wire   [63:0] zext_ln356_45_fu_889_p1;
wire   [63:0] zext_ln356_46_fu_899_p1;
wire   [63:0] zext_ln356_47_fu_909_p1;
wire   [63:0] zext_ln356_48_fu_919_p1;
wire   [63:0] zext_ln356_49_fu_929_p1;
wire   [63:0] zext_ln356_50_fu_939_p1;
wire   [63:0] zext_ln356_51_fu_949_p1;
wire   [63:0] zext_ln356_52_fu_959_p1;
wire   [63:0] zext_ln356_53_fu_969_p1;
wire   [63:0] zext_ln356_54_fu_984_p1;
wire   [63:0] zext_ln356_58_fu_1081_p1;
wire   [63:0] zext_ln356_59_fu_1092_p1;
wire   [63:0] zext_ln356_60_fu_1109_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln251_fu_1119_p1;
wire   [63:0] zext_ln356_61_fu_1124_p1;
wire    ap_block_pp1_stage2;
wire   [63:0] zext_ln251_1_fu_1134_p1;
wire   [63:0] zext_ln251_2_fu_1145_p1;
wire    ap_block_pp1_stage3;
reg    ap_block_state5_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_state6_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state7_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state8_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_state9_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state10_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_state11_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state12_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state13_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state14_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state15_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state16_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state17_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_state18_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_state19_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_state20_pp0_stage17_iter0;
reg    ap_block_pp0_stage17_11001;
reg    ap_block_state21_pp0_stage18_iter0;
reg    ap_block_pp0_stage18_11001;
reg    ap_block_state22_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_11001;
reg    ap_block_state23_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_11001;
reg    ap_block_state24_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
reg    ap_block_state25_pp0_stage22_iter0;
reg    ap_block_pp0_stage22_11001;
reg    ap_block_state26_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
reg    ap_block_state27_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
reg    ap_block_state28_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_11001;
reg    ap_block_state29_pp0_stage26_iter0;
reg    ap_block_pp0_stage26_11001;
reg    ap_block_state30_pp0_stage27_iter0;
reg    ap_block_pp0_stage27_11001;
reg    ap_block_state31_pp0_stage28_iter0;
reg    ap_block_pp0_stage28_11001;
reg    ap_block_state32_pp0_stage29_iter0;
reg    ap_block_pp0_stage29_11001;
reg    ap_block_state33_pp0_stage30_iter0;
reg    ap_block_pp0_stage30_11001;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln323_fu_602_p2;
wire   [1:0] add_ln322_fu_596_p2;
wire   [8:0] tmp_19_fu_624_p3;
wire   [6:0] tmp_20_fu_635_p3;
wire   [9:0] zext_ln356_21_fu_642_p1;
wire   [9:0] zext_ln356_fu_631_p1;
wire   [9:0] add_ln356_fu_646_p2;
wire   [9:0] zext_ln356_22_fu_652_p1;
wire   [9:0] add_ln356_13_fu_655_p2;
wire   [14:0] or_ln356_fu_674_p2;
wire   [14:0] or_ln356_1_fu_684_p2;
wire   [14:0] or_ln356_2_fu_694_p2;
wire   [14:0] or_ln356_3_fu_704_p2;
wire   [14:0] or_ln356_4_fu_714_p2;
wire   [14:0] or_ln356_5_fu_724_p2;
wire   [14:0] or_ln356_6_fu_734_p2;
wire   [14:0] or_ln356_7_fu_744_p2;
wire   [14:0] or_ln356_8_fu_754_p2;
wire   [14:0] or_ln356_9_fu_764_p2;
wire   [14:0] or_ln356_10_fu_774_p2;
wire   [14:0] or_ln356_11_fu_784_p2;
wire   [14:0] or_ln356_12_fu_794_p2;
wire   [14:0] or_ln356_13_fu_804_p2;
wire   [14:0] or_ln356_14_fu_814_p2;
wire   [14:0] or_ln356_15_fu_824_p2;
wire   [14:0] or_ln356_16_fu_834_p2;
wire   [14:0] or_ln356_17_fu_844_p2;
wire   [14:0] or_ln356_18_fu_854_p2;
wire   [14:0] or_ln356_19_fu_864_p2;
wire   [14:0] or_ln356_20_fu_874_p2;
wire   [14:0] or_ln356_21_fu_884_p2;
wire   [14:0] or_ln356_22_fu_894_p2;
wire   [14:0] or_ln356_23_fu_904_p2;
wire   [14:0] or_ln356_24_fu_914_p2;
wire   [14:0] or_ln356_25_fu_924_p2;
wire   [14:0] or_ln356_26_fu_934_p2;
wire   [14:0] or_ln356_27_fu_944_p2;
wire   [14:0] or_ln356_28_fu_954_p2;
wire   [14:0] or_ln356_29_fu_964_p2;
wire   [14:0] or_ln356_30_fu_979_p2;
wire   [0:0] icmp_ln332_fu_1007_p2;
wire   [7:0] add_ln331_fu_1001_p2;
wire   [12:0] tmp_21_fu_1029_p3;
wire   [13:0] zext_ln356_55_fu_1037_p1;
wire   [7:0] or_ln337_fu_1047_p2;
wire   [12:0] tmp_22_fu_1053_p3;
wire   [13:0] zext_ln356_56_fu_1061_p1;
wire   [13:0] zext_ln356_57_fu_1071_p1;
wire   [13:0] add_ln356_14_fu_1041_p2;
wire   [13:0] add_ln356_15_fu_1065_p2;
wire   [0:0] grp_fu_566_p2;
wire   [13:0] select_ln251_2_fu_1139_p3;
reg   [39:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 40'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
end

maxpool1_pool1_li1iI #(
    .DataWidth( 5 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
pool2_line_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool2_line_buffer_V_address0),
    .ce0(pool2_line_buffer_V_ce0),
    .we0(pool2_line_buffer_V_we0),
    .d0(relu2_pipe_4_V_V_dout),
    .q0(pool2_line_buffer_V_q0),
    .address1(pool2_line_buffer_V_address1),
    .ce1(pool2_line_buffer_V_ce1),
    .q1(pool2_line_buffer_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln320_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln320_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage31_subdone) & (1'b1 == ap_CS_fsm_pp0_stage31)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln320_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state37) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state36)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state36)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        block_0_0_reg_544 <= 8'd0;
    end else if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        block_0_0_reg_544 <= select_ln337_1_reg_1240;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        c_0_0_reg_555 <= 6'd0;
    end else if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c_0_0_reg_555 <= add_ln332_reg_1312;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        h1_0_0_reg_489 <= add_ln320_reg_1159;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        h1_0_0_reg_489 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        indvar_flatten7_reg_533 <= 12'd0;
    end else if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten7_reg_533 <= add_ln331_1_reg_1230;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_500 <= add_ln322_1_reg_1168;
    end else if (((icmp_ln320_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_500 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_col_0_0_reg_522 <= add_ln323_reg_1221;
    end else if (((icmp_ln320_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        line_col_0_0_reg_522 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_row_0_0_reg_511 <= select_ln326_1_reg_1179;
    end else if (((icmp_ln320_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        line_row_0_0_reg_511 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln320_reg_1159 <= add_ln320_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln322_1_reg_1168 <= add_ln322_1_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        add_ln323_reg_1221 <= add_ln323_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln331_1_reg_1230 <= add_ln331_1_fu_995_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln332_reg_1312 <= add_ln332_fu_1150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_fu_989_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln356_16_reg_1245 <= add_ln356_16_fu_1075_p2;
        add_ln356_17_reg_1255 <= add_ln356_17_fu_1086_p2;
        add_ln356_18_reg_1265 <= add_ln356_18_fu_1097_p2;
        add_ln356_19_reg_1271 <= add_ln356_19_fu_1103_p2;
        select_ln337_reg_1235 <= select_ln337_fu_1013_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln322_reg_1164 <= icmp_ln322_fu_584_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln331_reg_1226 <= icmp_ln331_fu_989_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        select_ln251_1_reg_1297 <= select_ln251_1_fu_1128_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        select_ln251_reg_1282 <= select_ln251_fu_1113_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_fu_584_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln326_1_reg_1179 <= select_ln326_1_fu_616_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_fu_584_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln326_reg_1173 <= select_ln326_fu_608_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_fu_989_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln337_1_reg_1240 <= select_ln337_1_fu_1021_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_12_reg_1186[14 : 5] <= tmp_12_fu_661_p3[14 : 5];
    end
end

always @ (*) begin
    if ((icmp_ln322_fu_584_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln331_fu_989_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state37 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state37 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln320_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_block_0_0_phi_fu_548_p4 = select_ln337_1_reg_1240;
    end else begin
        ap_phi_mux_block_0_0_phi_fu_548_p4 = block_0_0_reg_544;
    end
end

always @ (*) begin
    if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_c_0_0_phi_fu_559_p4 = add_ln332_reg_1312;
    end else begin
        ap_phi_mux_c_0_0_phi_fu_559_p4 = c_0_0_reg_555;
    end
end

always @ (*) begin
    if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten7_phi_fu_537_p4 = add_ln331_1_reg_1230;
    end else begin
        ap_phi_mux_indvar_flatten7_phi_fu_537_p4 = indvar_flatten7_reg_533;
    end
end

always @ (*) begin
    if (((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_504_p4 = add_ln322_1_reg_1168;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_504_p4 = indvar_flatten_reg_500;
    end
end

always @ (*) begin
    if (((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_line_col_0_0_phi_fu_526_p4 = add_ln323_reg_1221;
    end else begin
        ap_phi_mux_line_col_0_0_phi_fu_526_p4 = line_col_0_0_reg_522;
    end
end

always @ (*) begin
    if (((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_line_row_0_0_phi_fu_515_p4 = select_ln326_1_reg_1179;
    end else begin
        ap_phi_mux_line_row_0_0_phi_fu_515_p4 = line_row_0_0_reg_511;
    end
end

always @ (*) begin
    if (((icmp_ln320_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        pool2_line_buffer_V_address0 = zext_ln251_1_fu_1134_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        pool2_line_buffer_V_address0 = zext_ln251_fu_1119_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        pool2_line_buffer_V_address0 = zext_ln356_58_fu_1081_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pool2_line_buffer_V_address0 = zext_ln356_54_fu_984_p1;
    end else if (((1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        pool2_line_buffer_V_address0 = zext_ln356_53_fu_969_p1;
    end else if (((1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        pool2_line_buffer_V_address0 = zext_ln356_52_fu_959_p1;
    end else if (((1'b0 == ap_block_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29))) begin
        pool2_line_buffer_V_address0 = zext_ln356_51_fu_949_p1;
    end else if (((1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        pool2_line_buffer_V_address0 = zext_ln356_50_fu_939_p1;
    end else if (((1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        pool2_line_buffer_V_address0 = zext_ln356_49_fu_929_p1;
    end else if (((1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
        pool2_line_buffer_V_address0 = zext_ln356_48_fu_919_p1;
    end else if (((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        pool2_line_buffer_V_address0 = zext_ln356_47_fu_909_p1;
    end else if (((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        pool2_line_buffer_V_address0 = zext_ln356_46_fu_899_p1;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        pool2_line_buffer_V_address0 = zext_ln356_45_fu_889_p1;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        pool2_line_buffer_V_address0 = zext_ln356_44_fu_879_p1;
    end else if (((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        pool2_line_buffer_V_address0 = zext_ln356_43_fu_869_p1;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        pool2_line_buffer_V_address0 = zext_ln356_42_fu_859_p1;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        pool2_line_buffer_V_address0 = zext_ln356_41_fu_849_p1;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        pool2_line_buffer_V_address0 = zext_ln356_40_fu_839_p1;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        pool2_line_buffer_V_address0 = zext_ln356_39_fu_829_p1;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        pool2_line_buffer_V_address0 = zext_ln356_38_fu_819_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        pool2_line_buffer_V_address0 = zext_ln356_37_fu_809_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        pool2_line_buffer_V_address0 = zext_ln356_36_fu_799_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        pool2_line_buffer_V_address0 = zext_ln356_35_fu_789_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        pool2_line_buffer_V_address0 = zext_ln356_34_fu_779_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        pool2_line_buffer_V_address0 = zext_ln356_33_fu_769_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        pool2_line_buffer_V_address0 = zext_ln356_32_fu_759_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        pool2_line_buffer_V_address0 = zext_ln356_31_fu_749_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        pool2_line_buffer_V_address0 = zext_ln356_30_fu_739_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        pool2_line_buffer_V_address0 = zext_ln356_29_fu_729_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        pool2_line_buffer_V_address0 = zext_ln356_28_fu_719_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        pool2_line_buffer_V_address0 = zext_ln356_27_fu_709_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        pool2_line_buffer_V_address0 = zext_ln356_26_fu_699_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        pool2_line_buffer_V_address0 = zext_ln356_25_fu_689_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        pool2_line_buffer_V_address0 = zext_ln356_24_fu_679_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pool2_line_buffer_V_address0 = zext_ln356_23_fu_669_p1;
    end else begin
        pool2_line_buffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            pool2_line_buffer_V_address1 = zext_ln251_2_fu_1145_p1;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            pool2_line_buffer_V_address1 = zext_ln356_61_fu_1124_p1;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            pool2_line_buffer_V_address1 = zext_ln356_60_fu_1109_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            pool2_line_buffer_V_address1 = zext_ln356_59_fu_1092_p1;
        end else begin
            pool2_line_buffer_V_address1 = 'bx;
        end
    end else begin
        pool2_line_buffer_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        pool2_line_buffer_V_ce0 = 1'b1;
    end else begin
        pool2_line_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        pool2_line_buffer_V_ce1 = 1'b1;
    end else begin
        pool2_line_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        pool2_line_buffer_V_we0 = 1'b1;
    end else begin
        pool2_line_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        pool2_pipe_4_V_V_blk_n = pool2_pipe_4_V_V_full_n;
    end else begin
        pool2_pipe_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln331_reg_1226 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        pool2_pipe_4_V_V_write = 1'b1;
    end else begin
        pool2_pipe_4_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        relu2_pipe_4_V_V_blk_n = relu2_pipe_4_V_V_empty_n;
    end else begin
        relu2_pipe_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln322_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln322_reg_1164 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        relu2_pipe_4_V_V_read = 1'b1;
    end else begin
        relu2_pipe_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln320_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln322_fu_584_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln322_fu_584_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln331_fu_989_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln331_fu_989_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln320_fu_578_p2 = (h1_0_0_reg_489 + 6'd1);

assign add_ln322_1_fu_590_p2 = (ap_phi_mux_indvar_flatten_phi_fu_504_p4 + 9'd1);

assign add_ln322_fu_596_p2 = (ap_phi_mux_line_row_0_0_phi_fu_515_p4 + 2'd1);

assign add_ln323_fu_974_p2 = (select_ln326_reg_1173 + 8'd1);

assign add_ln331_1_fu_995_p2 = (ap_phi_mux_indvar_flatten7_phi_fu_537_p4 + 12'd1);

assign add_ln331_fu_1001_p2 = (ap_phi_mux_block_0_0_phi_fu_548_p4 + 8'd2);

assign add_ln332_fu_1150_p2 = (select_ln337_reg_1235 + 6'd1);

assign add_ln356_13_fu_655_p2 = (add_ln356_fu_646_p2 + zext_ln356_22_fu_652_p1);

assign add_ln356_14_fu_1041_p2 = (zext_ln356_55_fu_1037_p1 + 14'd5120);

assign add_ln356_15_fu_1065_p2 = (zext_ln356_56_fu_1061_p1 + 14'd5120);

assign add_ln356_16_fu_1075_p2 = (zext_ln356_57_fu_1071_p1 + zext_ln356_55_fu_1037_p1);

assign add_ln356_17_fu_1086_p2 = (zext_ln356_57_fu_1071_p1 + zext_ln356_56_fu_1061_p1);

assign add_ln356_18_fu_1097_p2 = (zext_ln356_57_fu_1071_p1 + add_ln356_14_fu_1041_p2);

assign add_ln356_19_fu_1103_p2 = (zext_ln356_57_fu_1071_p1 + add_ln356_15_fu_1065_p2);

assign add_ln356_fu_646_p2 = (zext_ln356_21_fu_642_p1 + zext_ln356_fu_631_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd39];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((icmp_ln331_reg_1226 == 1'd0) & (pool2_pipe_4_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln331_reg_1226 == 1'd0) & (pool2_pipe_4_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln331_reg_1226 == 1'd0) & (pool2_pipe_4_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage7_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage8_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage9_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage10_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage11_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage12_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage13_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage14_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage15_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage16_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp0_stage17_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage18_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage19_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage20_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage21_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage22_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage23_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state27_pp0_stage24_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp0_stage25_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp0_stage26_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state30_pp0_stage27_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp0_stage28_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state32_pp0_stage29_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state33_pp0_stage30_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state34_pp0_stage31_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state35_pp0_stage0_iter1 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

assign ap_block_state37_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state41_pp1_stage0_iter1 = ((icmp_ln331_reg_1226 == 1'd0) & (pool2_pipe_4_V_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage1_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage2_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage3_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage4_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage5_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage6_iter0 = ((icmp_ln322_reg_1164 == 1'd0) & (relu2_pipe_4_V_V_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_fu_566_p2 = ((pool2_line_buffer_V_q1 > pool2_line_buffer_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln320_fu_572_p2 = ((h1_0_0_reg_489 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln322_fu_584_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_504_p4 == 9'd320) ? 1'b1 : 1'b0);

assign icmp_ln323_fu_602_p2 = ((ap_phi_mux_line_col_0_0_phi_fu_526_p4 == 8'd160) ? 1'b1 : 1'b0);

assign icmp_ln331_fu_989_p2 = ((ap_phi_mux_indvar_flatten7_phi_fu_537_p4 == 12'd2560) ? 1'b1 : 1'b0);

assign icmp_ln332_fu_1007_p2 = ((ap_phi_mux_c_0_0_phi_fu_559_p4 == 6'd32) ? 1'b1 : 1'b0);

assign or_ln337_fu_1047_p2 = (select_ln337_1_fu_1021_p3 | 8'd1);

assign or_ln356_10_fu_774_p2 = (tmp_12_reg_1186 | 15'd11);

assign or_ln356_11_fu_784_p2 = (tmp_12_reg_1186 | 15'd12);

assign or_ln356_12_fu_794_p2 = (tmp_12_reg_1186 | 15'd13);

assign or_ln356_13_fu_804_p2 = (tmp_12_reg_1186 | 15'd14);

assign or_ln356_14_fu_814_p2 = (tmp_12_reg_1186 | 15'd15);

assign or_ln356_15_fu_824_p2 = (tmp_12_reg_1186 | 15'd16);

assign or_ln356_16_fu_834_p2 = (tmp_12_reg_1186 | 15'd17);

assign or_ln356_17_fu_844_p2 = (tmp_12_reg_1186 | 15'd18);

assign or_ln356_18_fu_854_p2 = (tmp_12_reg_1186 | 15'd19);

assign or_ln356_19_fu_864_p2 = (tmp_12_reg_1186 | 15'd20);

assign or_ln356_1_fu_684_p2 = (tmp_12_reg_1186 | 15'd2);

assign or_ln356_20_fu_874_p2 = (tmp_12_reg_1186 | 15'd21);

assign or_ln356_21_fu_884_p2 = (tmp_12_reg_1186 | 15'd22);

assign or_ln356_22_fu_894_p2 = (tmp_12_reg_1186 | 15'd23);

assign or_ln356_23_fu_904_p2 = (tmp_12_reg_1186 | 15'd24);

assign or_ln356_24_fu_914_p2 = (tmp_12_reg_1186 | 15'd25);

assign or_ln356_25_fu_924_p2 = (tmp_12_reg_1186 | 15'd26);

assign or_ln356_26_fu_934_p2 = (tmp_12_reg_1186 | 15'd27);

assign or_ln356_27_fu_944_p2 = (tmp_12_reg_1186 | 15'd28);

assign or_ln356_28_fu_954_p2 = (tmp_12_reg_1186 | 15'd29);

assign or_ln356_29_fu_964_p2 = (tmp_12_reg_1186 | 15'd30);

assign or_ln356_2_fu_694_p2 = (tmp_12_reg_1186 | 15'd3);

assign or_ln356_30_fu_979_p2 = (tmp_12_reg_1186 | 15'd31);

assign or_ln356_3_fu_704_p2 = (tmp_12_reg_1186 | 15'd4);

assign or_ln356_4_fu_714_p2 = (tmp_12_reg_1186 | 15'd5);

assign or_ln356_5_fu_724_p2 = (tmp_12_reg_1186 | 15'd6);

assign or_ln356_6_fu_734_p2 = (tmp_12_reg_1186 | 15'd7);

assign or_ln356_7_fu_744_p2 = (tmp_12_reg_1186 | 15'd8);

assign or_ln356_8_fu_754_p2 = (tmp_12_reg_1186 | 15'd9);

assign or_ln356_9_fu_764_p2 = (tmp_12_reg_1186 | 15'd10);

assign or_ln356_fu_674_p2 = (tmp_12_reg_1186 | 15'd1);

assign pool2_pipe_4_V_V_din = pool2_line_buffer_V_q1;

assign select_ln251_1_fu_1128_p3 = ((grp_fu_566_p2[0:0] === 1'b1) ? add_ln356_18_reg_1265 : select_ln251_reg_1282);

assign select_ln251_2_fu_1139_p3 = ((grp_fu_566_p2[0:0] === 1'b1) ? add_ln356_19_reg_1271 : select_ln251_1_reg_1297);

assign select_ln251_fu_1113_p3 = ((grp_fu_566_p2[0:0] === 1'b1) ? add_ln356_17_reg_1255 : add_ln356_16_reg_1245);

assign select_ln326_1_fu_616_p3 = ((icmp_ln323_fu_602_p2[0:0] === 1'b1) ? add_ln322_fu_596_p2 : ap_phi_mux_line_row_0_0_phi_fu_515_p4);

assign select_ln326_fu_608_p3 = ((icmp_ln323_fu_602_p2[0:0] === 1'b1) ? 8'd0 : ap_phi_mux_line_col_0_0_phi_fu_526_p4);

assign select_ln337_1_fu_1021_p3 = ((icmp_ln332_fu_1007_p2[0:0] === 1'b1) ? add_ln331_fu_1001_p2 : ap_phi_mux_block_0_0_phi_fu_548_p4);

assign select_ln337_fu_1013_p3 = ((icmp_ln332_fu_1007_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_c_0_0_phi_fu_559_p4);

assign start_out = real_start;

assign tmp_12_fu_661_p3 = {{add_ln356_13_fu_655_p2}, {5'd0}};

assign tmp_19_fu_624_p3 = {{select_ln326_1_reg_1179}, {7'd0}};

assign tmp_20_fu_635_p3 = {{select_ln326_1_reg_1179}, {5'd0}};

assign tmp_21_fu_1029_p3 = {{select_ln337_1_fu_1021_p3}, {5'd0}};

assign tmp_22_fu_1053_p3 = {{or_ln337_fu_1047_p2}, {5'd0}};

assign zext_ln251_1_fu_1134_p1 = select_ln251_1_fu_1128_p3;

assign zext_ln251_2_fu_1145_p1 = select_ln251_2_fu_1139_p3;

assign zext_ln251_fu_1119_p1 = select_ln251_fu_1113_p3;

assign zext_ln356_21_fu_642_p1 = tmp_20_fu_635_p3;

assign zext_ln356_22_fu_652_p1 = select_ln326_reg_1173;

assign zext_ln356_23_fu_669_p1 = tmp_12_fu_661_p3;

assign zext_ln356_24_fu_679_p1 = or_ln356_fu_674_p2;

assign zext_ln356_25_fu_689_p1 = or_ln356_1_fu_684_p2;

assign zext_ln356_26_fu_699_p1 = or_ln356_2_fu_694_p2;

assign zext_ln356_27_fu_709_p1 = or_ln356_3_fu_704_p2;

assign zext_ln356_28_fu_719_p1 = or_ln356_4_fu_714_p2;

assign zext_ln356_29_fu_729_p1 = or_ln356_5_fu_724_p2;

assign zext_ln356_30_fu_739_p1 = or_ln356_6_fu_734_p2;

assign zext_ln356_31_fu_749_p1 = or_ln356_7_fu_744_p2;

assign zext_ln356_32_fu_759_p1 = or_ln356_8_fu_754_p2;

assign zext_ln356_33_fu_769_p1 = or_ln356_9_fu_764_p2;

assign zext_ln356_34_fu_779_p1 = or_ln356_10_fu_774_p2;

assign zext_ln356_35_fu_789_p1 = or_ln356_11_fu_784_p2;

assign zext_ln356_36_fu_799_p1 = or_ln356_12_fu_794_p2;

assign zext_ln356_37_fu_809_p1 = or_ln356_13_fu_804_p2;

assign zext_ln356_38_fu_819_p1 = or_ln356_14_fu_814_p2;

assign zext_ln356_39_fu_829_p1 = or_ln356_15_fu_824_p2;

assign zext_ln356_40_fu_839_p1 = or_ln356_16_fu_834_p2;

assign zext_ln356_41_fu_849_p1 = or_ln356_17_fu_844_p2;

assign zext_ln356_42_fu_859_p1 = or_ln356_18_fu_854_p2;

assign zext_ln356_43_fu_869_p1 = or_ln356_19_fu_864_p2;

assign zext_ln356_44_fu_879_p1 = or_ln356_20_fu_874_p2;

assign zext_ln356_45_fu_889_p1 = or_ln356_21_fu_884_p2;

assign zext_ln356_46_fu_899_p1 = or_ln356_22_fu_894_p2;

assign zext_ln356_47_fu_909_p1 = or_ln356_23_fu_904_p2;

assign zext_ln356_48_fu_919_p1 = or_ln356_24_fu_914_p2;

assign zext_ln356_49_fu_929_p1 = or_ln356_25_fu_924_p2;

assign zext_ln356_50_fu_939_p1 = or_ln356_26_fu_934_p2;

assign zext_ln356_51_fu_949_p1 = or_ln356_27_fu_944_p2;

assign zext_ln356_52_fu_959_p1 = or_ln356_28_fu_954_p2;

assign zext_ln356_53_fu_969_p1 = or_ln356_29_fu_964_p2;

assign zext_ln356_54_fu_984_p1 = or_ln356_30_fu_979_p2;

assign zext_ln356_55_fu_1037_p1 = tmp_21_fu_1029_p3;

assign zext_ln356_56_fu_1061_p1 = tmp_22_fu_1053_p3;

assign zext_ln356_57_fu_1071_p1 = select_ln337_fu_1013_p3;

assign zext_ln356_58_fu_1081_p1 = add_ln356_16_fu_1075_p2;

assign zext_ln356_59_fu_1092_p1 = add_ln356_17_fu_1086_p2;

assign zext_ln356_60_fu_1109_p1 = add_ln356_18_reg_1265;

assign zext_ln356_61_fu_1124_p1 = add_ln356_19_reg_1271;

assign zext_ln356_fu_631_p1 = tmp_19_fu_624_p3;

always @ (posedge ap_clk) begin
    tmp_12_reg_1186[4:0] <= 5'b00000;
end

endmodule //maxpool2
