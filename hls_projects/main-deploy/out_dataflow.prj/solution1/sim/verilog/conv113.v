// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv113 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        m_axi_input_image_AWVALID,
        m_axi_input_image_AWREADY,
        m_axi_input_image_AWADDR,
        m_axi_input_image_AWID,
        m_axi_input_image_AWLEN,
        m_axi_input_image_AWSIZE,
        m_axi_input_image_AWBURST,
        m_axi_input_image_AWLOCK,
        m_axi_input_image_AWCACHE,
        m_axi_input_image_AWPROT,
        m_axi_input_image_AWQOS,
        m_axi_input_image_AWREGION,
        m_axi_input_image_AWUSER,
        m_axi_input_image_WVALID,
        m_axi_input_image_WREADY,
        m_axi_input_image_WDATA,
        m_axi_input_image_WSTRB,
        m_axi_input_image_WLAST,
        m_axi_input_image_WID,
        m_axi_input_image_WUSER,
        m_axi_input_image_ARVALID,
        m_axi_input_image_ARREADY,
        m_axi_input_image_ARADDR,
        m_axi_input_image_ARID,
        m_axi_input_image_ARLEN,
        m_axi_input_image_ARSIZE,
        m_axi_input_image_ARBURST,
        m_axi_input_image_ARLOCK,
        m_axi_input_image_ARCACHE,
        m_axi_input_image_ARPROT,
        m_axi_input_image_ARQOS,
        m_axi_input_image_ARREGION,
        m_axi_input_image_ARUSER,
        m_axi_input_image_RVALID,
        m_axi_input_image_RREADY,
        m_axi_input_image_RDATA,
        m_axi_input_image_RLAST,
        m_axi_input_image_RID,
        m_axi_input_image_RUSER,
        m_axi_input_image_RRESP,
        m_axi_input_image_BVALID,
        m_axi_input_image_BREADY,
        m_axi_input_image_BRESP,
        m_axi_input_image_BID,
        m_axi_input_image_BUSER,
        input_image_offset,
        conv1_pipe_1_V_V_din,
        conv1_pipe_1_V_V_full_n,
        conv1_pipe_1_V_V_write,
        result,
        result_out_din,
        result_out_full_n,
        result_out_write
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_pp0_stage0 = 14'd4;
parameter    ap_ST_fsm_pp0_stage1 = 14'd8;
parameter    ap_ST_fsm_pp0_stage2 = 14'd16;
parameter    ap_ST_fsm_state43 = 14'd32;
parameter    ap_ST_fsm_state44 = 14'd64;
parameter    ap_ST_fsm_state45 = 14'd128;
parameter    ap_ST_fsm_pp1_stage0 = 14'd256;
parameter    ap_ST_fsm_state48 = 14'd512;
parameter    ap_ST_fsm_state49 = 14'd1024;
parameter    ap_ST_fsm_state50 = 14'd2048;
parameter    ap_ST_fsm_pp2_stage0 = 14'd4096;
parameter    ap_ST_fsm_state56 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output   m_axi_input_image_AWVALID;
input   m_axi_input_image_AWREADY;
output  [31:0] m_axi_input_image_AWADDR;
output  [0:0] m_axi_input_image_AWID;
output  [31:0] m_axi_input_image_AWLEN;
output  [2:0] m_axi_input_image_AWSIZE;
output  [1:0] m_axi_input_image_AWBURST;
output  [1:0] m_axi_input_image_AWLOCK;
output  [3:0] m_axi_input_image_AWCACHE;
output  [2:0] m_axi_input_image_AWPROT;
output  [3:0] m_axi_input_image_AWQOS;
output  [3:0] m_axi_input_image_AWREGION;
output  [0:0] m_axi_input_image_AWUSER;
output   m_axi_input_image_WVALID;
input   m_axi_input_image_WREADY;
output  [31:0] m_axi_input_image_WDATA;
output  [3:0] m_axi_input_image_WSTRB;
output   m_axi_input_image_WLAST;
output  [0:0] m_axi_input_image_WID;
output  [0:0] m_axi_input_image_WUSER;
output   m_axi_input_image_ARVALID;
input   m_axi_input_image_ARREADY;
output  [31:0] m_axi_input_image_ARADDR;
output  [0:0] m_axi_input_image_ARID;
output  [31:0] m_axi_input_image_ARLEN;
output  [2:0] m_axi_input_image_ARSIZE;
output  [1:0] m_axi_input_image_ARBURST;
output  [1:0] m_axi_input_image_ARLOCK;
output  [3:0] m_axi_input_image_ARCACHE;
output  [2:0] m_axi_input_image_ARPROT;
output  [3:0] m_axi_input_image_ARQOS;
output  [3:0] m_axi_input_image_ARREGION;
output  [0:0] m_axi_input_image_ARUSER;
input   m_axi_input_image_RVALID;
output   m_axi_input_image_RREADY;
input  [31:0] m_axi_input_image_RDATA;
input   m_axi_input_image_RLAST;
input  [0:0] m_axi_input_image_RID;
input  [0:0] m_axi_input_image_RUSER;
input  [1:0] m_axi_input_image_RRESP;
input   m_axi_input_image_BVALID;
output   m_axi_input_image_BREADY;
input  [1:0] m_axi_input_image_BRESP;
input  [0:0] m_axi_input_image_BID;
input  [0:0] m_axi_input_image_BUSER;
input  [31:0] input_image_offset;
output  [15:0] conv1_pipe_1_V_V_din;
input   conv1_pipe_1_V_V_full_n;
output   conv1_pipe_1_V_V_write;
input  [31:0] result;
output  [31:0] result_out_din;
input   result_out_full_n;
output   result_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg m_axi_input_image_ARVALID;
reg[31:0] m_axi_input_image_ARADDR;
reg m_axi_input_image_RREADY;
reg conv1_pipe_1_V_V_write;
reg result_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [3:0] weight_conv1_V_0_0_0_address0;
reg    weight_conv1_V_0_0_0_ce0;
wire   [4:0] weight_conv1_V_0_0_0_q0;
wire   [3:0] weight_conv1_V_0_1_0_address0;
reg    weight_conv1_V_0_1_0_ce0;
wire   [4:0] weight_conv1_V_0_1_0_q0;
wire   [3:0] weight_conv1_V_0_2_0_address0;
reg    weight_conv1_V_0_2_0_ce0;
wire   [4:0] weight_conv1_V_0_2_0_q0;
wire   [3:0] weight_conv1_V_1_0_0_address0;
reg    weight_conv1_V_1_0_0_ce0;
wire   [4:0] weight_conv1_V_1_0_0_q0;
wire   [3:0] weight_conv1_V_1_1_0_address0;
reg    weight_conv1_V_1_1_0_ce0;
wire   [4:0] weight_conv1_V_1_1_0_q0;
wire   [3:0] weight_conv1_V_1_2_0_address0;
reg    weight_conv1_V_1_2_0_ce0;
wire   [4:0] weight_conv1_V_1_2_0_q0;
wire   [3:0] weight_conv1_V_2_0_0_address0;
reg    weight_conv1_V_2_0_0_ce0;
wire   [4:0] weight_conv1_V_2_0_0_q0;
wire   [3:0] weight_conv1_V_2_1_0_address0;
reg    weight_conv1_V_2_1_0_ce0;
wire   [4:0] weight_conv1_V_2_1_0_q0;
wire   [3:0] weight_conv1_V_2_2_0_address0;
reg    weight_conv1_V_2_2_0_ce0;
wire   [4:0] weight_conv1_V_2_2_0_q0;
wire   [3:0] weight_conv1_V_0_0_1_address0;
reg    weight_conv1_V_0_0_1_ce0;
wire   [3:0] weight_conv1_V_0_0_1_q0;
wire   [3:0] weight_conv1_V_0_1_1_address0;
reg    weight_conv1_V_0_1_1_ce0;
wire   [4:0] weight_conv1_V_0_1_1_q0;
wire   [3:0] weight_conv1_V_0_2_1_address0;
reg    weight_conv1_V_0_2_1_ce0;
wire   [4:0] weight_conv1_V_0_2_1_q0;
wire   [3:0] weight_conv1_V_1_0_1_address0;
reg    weight_conv1_V_1_0_1_ce0;
wire   [4:0] weight_conv1_V_1_0_1_q0;
wire   [3:0] weight_conv1_V_1_1_1_address0;
reg    weight_conv1_V_1_1_1_ce0;
wire   [4:0] weight_conv1_V_1_1_1_q0;
wire   [3:0] weight_conv1_V_1_2_1_address0;
reg    weight_conv1_V_1_2_1_ce0;
wire   [3:0] weight_conv1_V_1_2_1_q0;
wire   [3:0] weight_conv1_V_2_0_1_address0;
reg    weight_conv1_V_2_0_1_ce0;
wire   [3:0] weight_conv1_V_2_0_1_q0;
wire   [3:0] weight_conv1_V_2_1_1_address0;
reg    weight_conv1_V_2_1_1_ce0;
wire   [4:0] weight_conv1_V_2_1_1_q0;
wire   [3:0] weight_conv1_V_2_2_1_address0;
reg    weight_conv1_V_2_2_1_ce0;
wire   [4:0] weight_conv1_V_2_2_1_q0;
wire   [3:0] weight_conv1_V_0_0_2_address0;
reg    weight_conv1_V_0_0_2_ce0;
wire   [4:0] weight_conv1_V_0_0_2_q0;
wire   [3:0] weight_conv1_V_0_1_2_address0;
reg    weight_conv1_V_0_1_2_ce0;
wire   [4:0] weight_conv1_V_0_1_2_q0;
wire   [3:0] weight_conv1_V_0_2_2_address0;
reg    weight_conv1_V_0_2_2_ce0;
wire   [3:0] weight_conv1_V_0_2_2_q0;
wire   [3:0] weight_conv1_V_1_0_2_address0;
reg    weight_conv1_V_1_0_2_ce0;
wire   [4:0] weight_conv1_V_1_0_2_q0;
wire   [3:0] weight_conv1_V_1_1_2_address0;
reg    weight_conv1_V_1_1_2_ce0;
wire   [4:0] weight_conv1_V_1_1_2_q0;
wire   [3:0] weight_conv1_V_1_2_2_address0;
reg    weight_conv1_V_1_2_2_ce0;
wire   [4:0] weight_conv1_V_1_2_2_q0;
wire   [3:0] weight_conv1_V_2_0_2_address0;
reg    weight_conv1_V_2_0_2_ce0;
wire   [4:0] weight_conv1_V_2_0_2_q0;
wire   [3:0] weight_conv1_V_2_1_2_address0;
reg    weight_conv1_V_2_1_2_ce0;
wire   [3:0] weight_conv1_V_2_1_2_q0;
wire   [3:0] weight_conv1_V_2_2_2_address0;
reg    weight_conv1_V_2_2_2_ce0;
wire   [4:0] weight_conv1_V_2_2_2_q0;
reg    input_image_blk_n_AR;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter9;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln128_reg_4350;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter8_reg;
reg   [0:0] and_ln134_2_reg_4402;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter8_reg;
reg    input_image_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter11;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter11_reg;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter11_reg;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter9_reg;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter9_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    ap_enable_reg_pp0_iter12;
reg    conv1_pipe_1_V_V_blk_n;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln150_reg_4750;
reg    result_out_blk_n;
reg   [8:0] conv1_pad_1_0_0_i_i_reg_1362;
reg   [1:0] conv1_line_buffer_0_s_reg_1454;
reg   [4:0] ff_0_0_i_i_reg_1465;
reg    ap_block_state1;
wire   [63:0] zext_ln134_fu_1489_p1;
reg   [63:0] zext_ln134_reg_4319;
wire   [0:0] icmp_ln127_fu_1493_p2;
wire    ap_CS_fsm_state2;
wire   [7:0] add_ln127_fu_1499_p2;
reg   [7:0] add_ln127_reg_4330;
wire   [0:0] icmp_ln134_fu_1505_p2;
reg   [0:0] icmp_ln134_reg_4335;
wire   [0:0] icmp_ln134_1_fu_1511_p2;
reg   [0:0] icmp_ln134_1_reg_4340;
wire   [16:0] zext_ln128_fu_1543_p1;
reg   [16:0] zext_ln128_reg_4345;
wire   [0:0] icmp_ln128_fu_1547_p2;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state12_pp0_stage0_iter3;
wire    ap_block_state15_pp0_stage0_iter4;
wire    ap_block_state18_pp0_stage0_iter5;
wire    ap_block_state21_pp0_stage0_iter6;
wire    ap_block_state24_pp0_stage0_iter7;
wire    ap_block_state27_pp0_stage0_iter8;
wire    ap_block_state30_pp0_stage0_iter9;
reg    ap_predicate_op270_readreq_state30;
reg    ap_block_state30_io;
wire    ap_block_state33_pp0_stage0_iter10;
wire    ap_block_state36_pp0_stage0_iter11;
reg    ap_predicate_op336_read_state39;
reg    ap_block_state39_pp0_stage0_iter12;
wire    ap_block_state42_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter1_reg;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter2_reg;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter3_reg;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter4_reg;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter5_reg;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter6_reg;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter7_reg;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter10_reg;
reg   [0:0] icmp_ln128_reg_4350_pp0_iter12_reg;
wire   [8:0] add_ln128_fu_1553_p2;
reg   [8:0] add_ln128_reg_4354;
reg    ap_enable_reg_pp0_iter0;
wire   [9:0] zext_ln128_1_fu_1559_p1;
reg   [9:0] zext_ln128_1_reg_4359;
reg   [9:0] zext_ln128_1_reg_4359_pp0_iter1_reg;
reg   [9:0] zext_ln128_1_reg_4359_pp0_iter2_reg;
reg   [9:0] zext_ln128_1_reg_4359_pp0_iter3_reg;
wire   [63:0] zext_ln132_fu_1563_p1;
reg   [63:0] zext_ln132_reg_4364;
reg   [8:0] conv1_line_buffer_1_6_reg_4371;
reg   [8:0] conv1_line_buffer_1_7_reg_4376;
reg   [8:0] conv1_line_buffer_1_8_reg_4381;
reg   [8:0] conv1_line_buffer_2_6_reg_4386;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter1_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter2_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter3_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter4_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter5_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter6_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter7_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter8_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter9_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter10_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter11_reg;
reg   [8:0] conv1_line_buffer_2_6_reg_4386_pp0_iter12_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter1_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter2_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter3_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter4_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter5_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter6_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter7_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter8_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter9_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter10_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter11_reg;
reg   [8:0] conv1_line_buffer_2_7_reg_4391_pp0_iter12_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter1_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter2_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter3_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter4_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter5_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter6_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter7_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter8_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter9_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter10_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter11_reg;
reg   [8:0] conv1_line_buffer_2_8_reg_4396_pp0_iter12_reg;
wire   [0:0] and_ln134_2_fu_1595_p2;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter1_reg;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter2_reg;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter3_reg;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter4_reg;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter5_reg;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter6_reg;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter7_reg;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter10_reg;
reg   [0:0] and_ln134_2_reg_4402_pp0_iter12_reg;
wire   [9:0] add_ln134_2_fu_1613_p2;
reg   [9:0] add_ln134_2_reg_4411;
wire  signed [9:0] grp_fu_1607_p2;
reg  signed [9:0] srem_ln134_reg_4416;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state13_pp0_stage1_iter3;
wire    ap_block_state16_pp0_stage1_iter4;
wire    ap_block_state19_pp0_stage1_iter5;
wire    ap_block_state22_pp0_stage1_iter6;
wire    ap_block_state25_pp0_stage1_iter7;
wire    ap_block_state28_pp0_stage1_iter8;
wire    ap_block_state31_pp0_stage1_iter9;
reg    ap_predicate_op272_readreq_state31;
reg    ap_block_state31_io;
wire    ap_block_state34_pp0_stage1_iter10;
reg    ap_predicate_op288_read_state37;
reg    ap_block_state37_pp0_stage1_iter11;
wire    ap_block_state40_pp0_stage1_iter12;
reg    ap_block_pp0_stage1_11001;
reg  signed [9:0] srem_ln134_reg_4416_pp0_iter5_reg;
reg  signed [9:0] srem_ln134_reg_4416_pp0_iter6_reg;
reg  signed [9:0] srem_ln134_reg_4416_pp0_iter7_reg;
reg  signed [9:0] srem_ln134_reg_4416_pp0_iter8_reg;
wire  signed [37:0] sext_ln134_4_fu_1640_p1;
reg  signed [37:0] sext_ln134_4_reg_4421;
reg  signed [37:0] sext_ln134_4_reg_4421_pp0_iter5_reg;
reg  signed [37:0] sext_ln134_4_reg_4421_pp0_iter6_reg;
reg  signed [37:0] sext_ln134_4_reg_4421_pp0_iter7_reg;
wire   [0:0] tmp_57_fu_1653_p3;
reg   [0:0] tmp_57_reg_4426;
reg   [0:0] tmp_57_reg_4426_pp0_iter5_reg;
reg   [0:0] tmp_57_reg_4426_pp0_iter6_reg;
reg   [0:0] tmp_57_reg_4426_pp0_iter7_reg;
wire   [8:0] select_ln134_1_fu_1710_p3;
reg   [8:0] select_ln134_1_reg_4432;
wire   [17:0] select_ln134_3_fu_1772_p3;
reg   [17:0] select_ln134_3_reg_4437;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state14_pp0_stage2_iter3;
wire    ap_block_state17_pp0_stage2_iter4;
wire    ap_block_state20_pp0_stage2_iter5;
wire    ap_block_state23_pp0_stage2_iter6;
wire    ap_block_state26_pp0_stage2_iter7;
wire    ap_block_state29_pp0_stage2_iter8;
wire    ap_block_state32_pp0_stage2_iter9;
reg    ap_predicate_op275_readreq_state32;
reg    ap_block_state32_io;
wire    ap_block_state35_pp0_stage2_iter10;
reg    ap_predicate_op292_read_state38;
reg    ap_block_state38_pp0_stage2_iter11;
wire    ap_block_state41_pp0_stage2_iter12;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] input_image_addr_reg_4443;
reg   [31:0] input_image_addr_1_reg_4449;
reg   [31:0] input_image_addr_2_reg_4455;
reg   [31:0] input_image_addr_rea_reg_4461;
reg   [31:0] input_image_addr_1_r_reg_4467;
wire   [0:0] icmp_ln571_fu_1977_p2;
reg   [0:0] icmp_ln571_reg_4473;
wire   [0:0] icmp_ln581_fu_1999_p2;
reg   [0:0] icmp_ln581_reg_4477;
wire   [0:0] icmp_ln582_fu_2033_p2;
reg   [0:0] icmp_ln582_reg_4481;
wire   [0:0] icmp_ln603_fu_2053_p2;
wire   [7:0] shl_ln604_fu_2059_p2;
wire   [0:0] icmp_ln585_fu_2065_p2;
reg   [0:0] icmp_ln585_reg_4494;
wire   [7:0] select_ln588_fu_2082_p3;
wire   [7:0] trunc_ln586_fu_2100_p1;
reg   [7:0] trunc_ln586_reg_4503;
wire   [7:0] trunc_ln583_fu_2104_p1;
reg   [31:0] input_image_addr_2_r_reg_4513;
wire   [0:0] icmp_ln571_1_fu_2168_p2;
reg   [0:0] icmp_ln571_1_reg_4519;
wire   [0:0] icmp_ln581_1_fu_2190_p2;
reg   [0:0] icmp_ln581_1_reg_4523;
wire   [0:0] icmp_ln582_1_fu_2224_p2;
reg   [0:0] icmp_ln582_1_reg_4527;
wire   [0:0] icmp_ln603_1_fu_2244_p2;
wire   [7:0] shl_ln604_1_fu_2250_p2;
wire   [0:0] icmp_ln585_1_fu_2256_p2;
reg   [0:0] icmp_ln585_1_reg_4540;
wire   [7:0] select_ln588_1_fu_2273_p3;
wire   [7:0] trunc_ln586_1_fu_2291_p1;
reg   [7:0] trunc_ln586_1_reg_4549;
wire   [7:0] trunc_ln583_1_fu_2295_p1;
wire   [0:0] icmp_ln571_2_fu_2359_p2;
reg   [0:0] icmp_ln571_2_reg_4559;
wire   [0:0] icmp_ln581_2_fu_2381_p2;
reg   [0:0] icmp_ln581_2_reg_4563;
wire   [0:0] icmp_ln582_2_fu_2415_p2;
reg   [0:0] icmp_ln582_2_reg_4567;
wire   [0:0] icmp_ln603_2_fu_2435_p2;
wire   [7:0] shl_ln604_2_fu_2441_p2;
wire   [0:0] icmp_ln585_2_fu_2447_p2;
reg   [0:0] icmp_ln585_2_reg_4580;
wire   [7:0] select_ln588_2_fu_2464_p3;
wire   [7:0] trunc_ln586_2_fu_2482_p1;
reg   [7:0] trunc_ln586_2_reg_4589;
wire   [7:0] trunc_ln583_2_fu_2486_p1;
wire   [0:0] icmp_ln138_fu_2500_p2;
reg   [0:0] icmp_ln138_reg_4599;
wire    ap_CS_fsm_state43;
wire   [8:0] add_ln137_fu_2512_p2;
reg   [8:0] add_ln137_reg_4606;
wire    ap_CS_fsm_state44;
wire   [0:0] icmp_ln137_fu_2506_p2;
wire   [7:0] conv1_line_buffer_0_217_q0;
reg   [7:0] conv1_line_buffer_0_9_reg_4656;
wire    ap_CS_fsm_state45;
wire   [7:0] conv1_line_buffer_0_1_q0;
reg   [7:0] conv1_line_buffer_0_10_reg_4661;
wire   [7:0] conv1_line_buffer_0_2_q0;
reg   [7:0] conv1_line_buffer_0_11_reg_4666;
wire   [7:0] conv1_line_buffer_1_q0;
reg   [7:0] conv1_line_buffer_1_13_reg_4671;
wire   [7:0] conv1_line_buffer_1_1_q0;
reg   [7:0] conv1_line_buffer_1_14_reg_4676;
wire   [7:0] conv1_line_buffer_1_2_q0;
reg   [7:0] conv1_line_buffer_1_15_reg_4681;
wire   [7:0] conv1_line_buffer_2_q0;
reg   [7:0] conv1_line_buffer_2_13_reg_4686;
wire   [7:0] conv1_line_buffer_2_1_q0;
reg   [7:0] conv1_line_buffer_2_14_reg_4691;
wire   [7:0] conv1_line_buffer_2_2_q0;
reg   [7:0] conv1_line_buffer_2_15_reg_4696;
wire   [0:0] icmp_ln139_fu_2531_p2;
reg   [0:0] icmp_ln139_reg_4701;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state46_pp1_stage0_iter0;
wire    ap_block_state47_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [1:0] add_ln139_fu_2537_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln143_fu_2543_p1;
reg   [63:0] zext_ln143_reg_4710;
reg   [1:0] conv1_window_buffer_63_reg_4717;
reg   [1:0] conv1_window_buffer_68_reg_4728;
reg   [1:0] conv1_window_buffer_73_reg_4739;
wire   [0:0] icmp_ln150_fu_2593_p2;
wire    ap_CS_fsm_state48;
wire   [7:0] conv1_window_buffer_s_q0;
reg   [7:0] conv1_window_buffer_36_reg_4754;
wire    ap_CS_fsm_state49;
wire   [7:0] conv1_window_buffer_1_q0;
reg   [7:0] conv1_window_buffer_37_reg_4759;
wire   [7:0] conv1_window_buffer_2_q0;
reg   [7:0] conv1_window_buffer_38_reg_4764;
wire   [7:0] conv1_window_buffer_3_q0;
reg   [7:0] conv1_window_buffer_39_reg_4769;
wire   [7:0] conv1_window_buffer_4_q0;
reg   [7:0] conv1_window_buffer_40_reg_4774;
wire   [7:0] conv1_window_buffer_5_q0;
reg   [7:0] conv1_window_buffer_41_reg_4779;
wire   [7:0] conv1_window_buffer_6_q0;
reg   [7:0] conv1_window_buffer_42_reg_4784;
wire   [7:0] conv1_window_buffer_7_q0;
reg   [7:0] conv1_window_buffer_43_reg_4789;
wire   [7:0] conv1_window_buffer_8_q0;
reg   [7:0] conv1_window_buffer_44_reg_4794;
wire   [16:0] zext_ln1118_fu_2599_p1;
reg   [16:0] zext_ln1118_reg_4799;
wire    ap_CS_fsm_state50;
wire   [16:0] zext_ln1118_1_fu_2602_p1;
reg   [16:0] zext_ln1118_1_reg_4804;
wire   [16:0] zext_ln1118_2_fu_2605_p1;
reg   [16:0] zext_ln1118_2_reg_4809;
wire   [16:0] zext_ln1118_3_fu_2608_p1;
reg   [16:0] zext_ln1118_3_reg_4814;
wire   [16:0] zext_ln1118_4_fu_2611_p1;
reg   [16:0] zext_ln1118_4_reg_4819;
wire   [16:0] zext_ln1118_5_fu_2614_p1;
reg   [16:0] zext_ln1118_5_reg_4824;
wire   [16:0] zext_ln1118_6_fu_2617_p1;
reg   [16:0] zext_ln1118_6_reg_4829;
wire   [16:0] zext_ln1118_7_fu_2620_p1;
reg   [16:0] zext_ln1118_7_reg_4834;
wire   [16:0] zext_ln1118_8_fu_2623_p1;
reg   [16:0] zext_ln1118_8_reg_4839;
wire   [15:0] zext_ln1265_fu_2626_p1;
reg   [15:0] zext_ln1265_reg_4844;
wire   [16:0] zext_ln1118_9_fu_2630_p1;
reg   [16:0] zext_ln1118_9_reg_4849;
wire   [16:0] zext_ln1118_10_fu_2634_p1;
reg   [16:0] zext_ln1118_10_reg_4854;
wire   [16:0] zext_ln1118_11_fu_2638_p1;
reg   [16:0] zext_ln1118_11_reg_4859;
wire   [16:0] zext_ln1118_12_fu_2642_p1;
reg   [16:0] zext_ln1118_12_reg_4864;
wire   [15:0] zext_ln1265_76_fu_2646_p1;
reg   [15:0] zext_ln1265_76_reg_4869;
wire   [15:0] zext_ln1265_77_fu_2650_p1;
reg   [15:0] zext_ln1265_77_reg_4874;
wire   [16:0] zext_ln1118_13_fu_2654_p1;
reg   [16:0] zext_ln1118_13_reg_4879;
wire   [16:0] zext_ln1118_14_fu_2658_p1;
reg   [16:0] zext_ln1118_14_reg_4884;
wire   [16:0] zext_ln1118_15_fu_2662_p1;
reg   [16:0] zext_ln1118_15_reg_4889;
wire   [16:0] zext_ln1118_16_fu_2666_p1;
reg   [16:0] zext_ln1118_16_reg_4894;
wire   [15:0] zext_ln1265_78_fu_2670_p1;
reg   [15:0] zext_ln1265_78_reg_4899;
wire   [16:0] zext_ln1118_17_fu_2674_p1;
reg   [16:0] zext_ln1118_17_reg_4904;
wire   [16:0] zext_ln1118_18_fu_2678_p1;
reg   [16:0] zext_ln1118_18_reg_4909;
wire   [16:0] zext_ln1118_19_fu_2682_p1;
reg   [16:0] zext_ln1118_19_reg_4914;
wire   [16:0] zext_ln1118_20_fu_2686_p1;
reg   [16:0] zext_ln1118_20_reg_4919;
wire   [15:0] zext_ln1265_79_fu_2690_p1;
reg   [15:0] zext_ln1265_79_reg_4924;
wire   [16:0] zext_ln1118_21_fu_2694_p1;
reg   [16:0] zext_ln1118_21_reg_4929;
wire   [0:0] icmp_ln148_fu_2698_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state51_pp2_stage0_iter0;
wire    ap_block_state52_pp2_stage0_iter1;
wire    ap_block_state53_pp2_stage0_iter2;
wire    ap_block_state54_pp2_stage0_iter3;
reg    ap_block_state55_pp2_stage0_iter4;
reg    ap_block_pp2_stage0_11001;
wire   [4:0] add_ln148_fu_2704_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] zext_ln158_fu_2710_p1;
reg   [63:0] zext_ln158_reg_4943;
reg   [12:0] trunc_ln708_5_i_i_reg_5010;
reg   [15:0] tmp_79_i_i_reg_5015;
reg   [12:0] trunc_ln708_6_i_i_reg_5020;
reg   [4:0] weight_conv1_V_2_2_0_2_reg_5025;
reg   [11:0] trunc_ln708_13_i_i_reg_5120;
reg   [15:0] tmp_87_i_i_reg_5125;
reg   [11:0] trunc_ln708_14_i_i_reg_5130;
reg   [4:0] weight_conv1_V_2_1_1_2_reg_5135;
reg   [4:0] weight_conv1_V_2_2_1_2_reg_5140;
reg   [4:0] weight_conv1_V_0_0_2_2_reg_5145;
reg   [4:0] weight_conv1_V_0_1_2_2_reg_5150;
reg   [3:0] weight_conv1_V_0_2_2_2_reg_5155;
reg   [4:0] weight_conv1_V_1_0_2_2_reg_5160;
reg   [4:0] weight_conv1_V_1_1_2_2_reg_5165;
reg   [4:0] weight_conv1_V_1_2_2_2_reg_5170;
reg   [4:0] weight_conv1_V_1_2_2_2_reg_5170_pp2_iter3_reg;
reg   [4:0] weight_conv1_V_2_0_2_2_reg_5175;
reg   [4:0] weight_conv1_V_2_0_2_2_reg_5175_pp2_iter3_reg;
reg   [3:0] weight_conv1_V_2_1_2_2_reg_5180;
reg   [3:0] weight_conv1_V_2_1_2_2_reg_5180_pp2_iter3_reg;
reg   [4:0] weight_conv1_V_2_2_2_2_reg_5185;
reg   [4:0] weight_conv1_V_2_2_2_2_reg_5185_pp2_iter3_reg;
reg   [12:0] trunc_ln708_21_i_i_reg_5190;
reg   [15:0] tmp_95_i_i_reg_5195;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter13;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state46;
reg    ap_enable_reg_pp1_iter1;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state51;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg   [8:0] conv1_line_buffer_0_217_address0;
reg    conv1_line_buffer_0_217_ce0;
reg    conv1_line_buffer_0_217_we0;
reg   [8:0] conv1_line_buffer_0_1_address0;
reg    conv1_line_buffer_0_1_ce0;
reg    conv1_line_buffer_0_1_we0;
reg   [8:0] conv1_line_buffer_0_2_address0;
reg    conv1_line_buffer_0_2_ce0;
reg    conv1_line_buffer_0_2_we0;
reg   [8:0] conv1_line_buffer_1_address0;
reg    conv1_line_buffer_1_ce0;
reg    conv1_line_buffer_1_we0;
reg   [8:0] conv1_line_buffer_1_1_address0;
reg    conv1_line_buffer_1_1_ce0;
reg    conv1_line_buffer_1_1_we0;
reg   [8:0] conv1_line_buffer_1_2_address0;
reg    conv1_line_buffer_1_2_ce0;
reg    conv1_line_buffer_1_2_we0;
reg   [8:0] conv1_line_buffer_2_address0;
reg    conv1_line_buffer_2_ce0;
reg    conv1_line_buffer_2_we0;
reg   [7:0] conv1_line_buffer_2_d0;
reg   [8:0] conv1_line_buffer_2_1_address0;
reg    conv1_line_buffer_2_1_ce0;
reg    conv1_line_buffer_2_1_we0;
reg   [8:0] conv1_line_buffer_2_2_address0;
reg    conv1_line_buffer_2_2_ce0;
reg    conv1_line_buffer_2_2_ce1;
reg    conv1_line_buffer_2_2_we1;
reg   [1:0] conv1_window_buffer_s_address0;
reg    conv1_window_buffer_s_ce0;
reg    conv1_window_buffer_s_we0;
wire   [1:0] conv1_window_buffer_s_address1;
reg    conv1_window_buffer_s_ce1;
wire   [7:0] conv1_window_buffer_s_q1;
reg   [1:0] conv1_window_buffer_1_address0;
reg    conv1_window_buffer_1_ce0;
reg   [1:0] conv1_window_buffer_1_address1;
reg    conv1_window_buffer_1_ce1;
reg    conv1_window_buffer_1_we1;
wire   [7:0] conv1_window_buffer_1_q1;
reg   [1:0] conv1_window_buffer_2_address0;
reg    conv1_window_buffer_2_ce0;
reg    conv1_window_buffer_2_we0;
wire   [1:0] conv1_window_buffer_2_address1;
reg    conv1_window_buffer_2_ce1;
wire   [7:0] conv1_window_buffer_2_q1;
reg   [1:0] conv1_window_buffer_3_address0;
reg    conv1_window_buffer_3_ce0;
reg    conv1_window_buffer_3_we0;
wire   [1:0] conv1_window_buffer_3_address1;
reg    conv1_window_buffer_3_ce1;
wire   [7:0] conv1_window_buffer_3_q1;
reg   [1:0] conv1_window_buffer_4_address0;
reg    conv1_window_buffer_4_ce0;
reg   [1:0] conv1_window_buffer_4_address1;
reg    conv1_window_buffer_4_ce1;
reg    conv1_window_buffer_4_we1;
wire   [7:0] conv1_window_buffer_4_q1;
reg   [1:0] conv1_window_buffer_5_address0;
reg    conv1_window_buffer_5_ce0;
reg    conv1_window_buffer_5_we0;
wire   [1:0] conv1_window_buffer_5_address1;
reg    conv1_window_buffer_5_ce1;
wire   [7:0] conv1_window_buffer_5_q1;
reg   [1:0] conv1_window_buffer_6_address0;
reg    conv1_window_buffer_6_ce0;
reg    conv1_window_buffer_6_we0;
wire   [1:0] conv1_window_buffer_6_address1;
reg    conv1_window_buffer_6_ce1;
wire   [7:0] conv1_window_buffer_6_q1;
reg   [1:0] conv1_window_buffer_7_address0;
reg    conv1_window_buffer_7_ce0;
reg   [1:0] conv1_window_buffer_7_address1;
reg    conv1_window_buffer_7_ce1;
reg    conv1_window_buffer_7_we1;
wire   [7:0] conv1_window_buffer_7_q1;
reg   [1:0] conv1_window_buffer_8_address0;
reg    conv1_window_buffer_8_ce0;
reg    conv1_window_buffer_8_we0;
wire   [1:0] conv1_window_buffer_8_address1;
reg    conv1_window_buffer_8_ce1;
wire   [7:0] conv1_window_buffer_8_q1;
reg   [7:0] yy_reuse_0_0_i_i_reg_1350;
reg   [8:0] ap_phi_mux_conv1_pad_1_0_0_i_i_phi_fu_1366_p4;
reg   [7:0] ap_phi_mux_p_0127_0_0_0_i_i_phi_fu_1377_p12;
wire   [7:0] ap_phi_reg_pp0_iter0_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter2_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter3_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter4_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter5_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter6_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter7_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter8_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter9_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter10_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter11_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_reg_pp0_iter12_p_0127_0_0_0_i_i_reg_1373;
reg   [7:0] ap_phi_mux_p_0127_0_0_1_i_i_phi_fu_1398_p14;
wire   [7:0] ap_phi_reg_pp0_iter11_p_0127_0_0_1_i_i_reg_1394;
reg   [7:0] ap_phi_reg_pp0_iter12_p_0127_0_0_1_i_i_reg_1394;
reg   [7:0] ap_phi_mux_p_0127_0_0_2_i_i_phi_fu_1422_p14;
wire   [7:0] ap_phi_reg_pp0_iter12_p_0127_0_0_2_i_i_reg_1418;
reg   [7:0] ap_phi_reg_pp0_iter13_p_0127_0_0_2_i_i_reg_1418;
reg   [8:0] xx_reuse_0_0_i_i_reg_1442;
wire    ap_CS_fsm_state56;
wire   [63:0] zext_ln145_fu_2518_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] add_ln134_8_fu_1872_p2;
wire   [63:0] add_ln134_10_fu_1889_p2;
wire   [63:0] add_ln134_12_fu_1906_p2;
reg    ap_block_pp2_stage0_01001;
wire   [7:0] tmp_46_i_i_fu_2553_p5;
wire   [7:0] tmp_47_i_i_fu_2563_p5;
wire   [7:0] tmp_48_i_i_fu_2573_p5;
reg   [31:0] grp_fu_1476_p0;
wire   [29:0] input_image_offset1_s_fu_1479_p4;
wire   [13:0] shl_ln134_1_i_i_fu_1525_p3;
wire   [15:0] zext_ln134_1_fu_1533_p1;
wire   [15:0] shl_ln_i_i_fu_1517_p3;
wire   [15:0] add_ln134_fu_1537_p2;
wire   [0:0] icmp_ln134_2_fu_1573_p2;
wire   [0:0] icmp_ln134_3_fu_1579_p2;
wire   [0:0] and_ln134_1_fu_1590_p2;
wire   [0:0] and_ln134_fu_1585_p2;
wire   [9:0] grp_fu_1607_p0;
wire  signed [16:0] sext_ln134_2_fu_1622_p1;
wire   [16:0] add_ln134_3_fu_1625_p2;
wire  signed [17:0] sext_ln134_3_fu_1630_p1;
wire  signed [17:0] sext_ln134_fu_1618_p1;
wire  signed [17:0] sub_ln134_fu_1634_p2;
wire  signed [37:0] mul_ln134_fu_4169_p2;
wire   [35:0] trunc_ln134_fu_1644_p1;
wire   [35:0] sub_ln134_1_fu_1647_p2;
wire   [8:0] tmp_58_fu_1661_p4;
wire   [10:0] tmp_59_fu_1675_p4;
wire  signed [18:0] sext_ln134_5_fu_1671_p1;
wire  signed [18:0] sext_ln134_6_fu_1684_p1;
wire   [18:0] select_ln134_fu_1688_p3;
wire   [8:0] trunc_ln134_1_fu_1696_p1;
wire   [8:0] sub_ln134_2_fu_1700_p2;
wire   [8:0] trunc_ln134_2_fu_1706_p1;
wire  signed [37:0] mul_ln134_1_fu_4177_p2;
wire   [35:0] trunc_ln134_3_fu_1723_p1;
wire   [35:0] sub_ln134_3_fu_1726_p2;
wire   [1:0] tmp_60_fu_1732_p4;
wire   [3:0] tmp_61_fu_1746_p4;
wire  signed [17:0] sext_ln134_8_fu_1742_p1;
wire  signed [17:0] sext_ln134_9_fu_1755_p1;
wire   [17:0] select_ln134_2_fu_1759_p3;
wire   [17:0] sub_ln134_4_fu_1766_p2;
wire   [8:0] grp_fu_1718_p2;
wire   [24:0] tmp_69_i_i_fu_1786_p3;
wire   [22:0] tmp_70_i_i_fu_1797_p3;
wire   [25:0] zext_ln134_3_fu_1804_p1;
wire   [25:0] zext_ln134_2_fu_1793_p1;
wire   [25:0] add_ln134_4_fu_1808_p2;
wire   [26:0] zext_ln134_4_fu_1814_p1;
wire  signed [26:0] sext_ln134_7_fu_1782_p1;
wire   [26:0] add_ln134_5_fu_1818_p2;
wire   [34:0] tmp_62_fu_1824_p3;
wire   [32:0] tmp_63_fu_1836_p3;
wire  signed [63:0] sext_ln134_11_fu_1844_p1;
wire  signed [63:0] sext_ln134_10_fu_1832_p1;
wire   [63:0] add_ln134_6_fu_1848_p2;
wire  signed [63:0] sext_ln134_1_fu_1779_p1;
wire   [63:0] add_ln134_7_fu_1854_p2;
wire   [63:0] shl_ln134_fu_1860_p2;
wire   [63:0] sub_ln134_5_fu_1866_p2;
wire   [63:0] add_ln134_9_fu_1883_p2;
wire   [63:0] add_ln134_11_fu_1900_p2;
wire   [63:0] grp_fu_1476_p1;
wire   [63:0] bitcast_ln696_fu_1917_p1;
wire   [10:0] p_Result_i_i_fu_1933_p4;
wire   [51:0] trunc_ln565_fu_1947_p1;
wire   [52:0] tmp_56_i_i_fu_1951_p3;
wire   [53:0] zext_ln569_fu_1959_p1;
wire   [0:0] tmp_64_fu_1925_p3;
wire   [53:0] sub_ln461_fu_1963_p2;
wire   [62:0] trunc_ln557_fu_1921_p1;
wire   [11:0] zext_ln461_fu_1943_p1;
wire   [11:0] sub_ln575_fu_1983_p2;
wire   [8:0] tmp_65_fu_1989_p4;
wire   [11:0] add_ln581_fu_2005_p2;
wire   [11:0] sub_ln581_fu_2011_p2;
wire  signed [11:0] select_ln581_fu_2017_p3;
wire   [53:0] select_ln570_fu_1969_p3;
wire   [8:0] tmp_66_fu_2043_p4;
wire   [7:0] trunc_ln602_fu_2039_p1;
wire   [7:0] trunc_ln581_fu_2025_p1;
wire   [31:0] bitcast_ln696_1_fu_2071_p1;
wire   [0:0] tmp_68_fu_2074_p3;
wire  signed [31:0] sext_ln581_fu_2029_p1;
wire   [53:0] zext_ln586_fu_2090_p1;
wire   [53:0] ashr_ln586_fu_2094_p2;
wire   [63:0] bitcast_ln696_2_fu_2108_p1;
wire   [10:0] p_Result_0_1_i_i_fu_2124_p4;
wire   [51:0] trunc_ln565_1_fu_2138_p1;
wire   [52:0] tmp_63_i_i_fu_2142_p3;
wire   [53:0] zext_ln569_1_fu_2150_p1;
wire   [0:0] tmp_69_fu_2116_p3;
wire   [53:0] sub_ln461_1_fu_2154_p2;
wire   [62:0] trunc_ln557_1_fu_2112_p1;
wire   [11:0] zext_ln461_1_fu_2134_p1;
wire   [11:0] sub_ln575_1_fu_2174_p2;
wire   [8:0] tmp_70_fu_2180_p4;
wire   [11:0] add_ln581_1_fu_2196_p2;
wire   [11:0] sub_ln581_1_fu_2202_p2;
wire  signed [11:0] select_ln581_1_fu_2208_p3;
wire   [53:0] select_ln570_1_fu_2160_p3;
wire   [8:0] tmp_74_fu_2234_p4;
wire   [7:0] trunc_ln602_1_fu_2230_p1;
wire   [7:0] trunc_ln581_1_fu_2216_p1;
wire   [31:0] bitcast_ln696_3_fu_2262_p1;
wire   [0:0] tmp_75_fu_2265_p3;
wire  signed [31:0] sext_ln581_1_fu_2220_p1;
wire   [53:0] zext_ln586_1_fu_2281_p1;
wire   [53:0] ashr_ln586_1_fu_2285_p2;
wire   [63:0] bitcast_ln696_4_fu_2299_p1;
wire   [10:0] p_Result_0_2_i_i_fu_2315_p4;
wire   [51:0] trunc_ln565_2_fu_2329_p1;
wire   [52:0] tmp_65_i_i_fu_2333_p3;
wire   [53:0] zext_ln569_2_fu_2341_p1;
wire   [0:0] tmp_76_fu_2307_p3;
wire   [53:0] sub_ln461_2_fu_2345_p2;
wire   [62:0] trunc_ln557_2_fu_2303_p1;
wire   [11:0] zext_ln461_2_fu_2325_p1;
wire   [11:0] sub_ln575_2_fu_2365_p2;
wire   [8:0] tmp_77_fu_2371_p4;
wire   [11:0] add_ln581_2_fu_2387_p2;
wire   [11:0] sub_ln581_2_fu_2393_p2;
wire  signed [11:0] select_ln581_2_fu_2399_p3;
wire   [53:0] select_ln570_2_fu_2351_p3;
wire   [8:0] tmp_78_fu_2425_p4;
wire   [7:0] trunc_ln602_2_fu_2421_p1;
wire   [7:0] trunc_ln581_2_fu_2407_p1;
wire   [31:0] bitcast_ln696_5_fu_2453_p1;
wire   [0:0] tmp_79_fu_2456_p3;
wire  signed [31:0] sext_ln581_2_fu_2411_p1;
wire   [53:0] zext_ln586_2_fu_2472_p1;
wire   [53:0] ashr_ln586_2_fu_2476_p2;
wire   [6:0] tmp_fu_2490_p4;
wire   [7:0] tmp_67_fu_2583_p4;
wire   [8:0] shl_ln1_i_i_fu_2723_p3;
wire   [7:0] mul_ln1118_fu_2735_p0;
wire  signed [8:0] mul_ln1118_fu_2735_p1;
wire   [16:0] mul_ln1118_fu_2735_p2;
wire   [8:0] shl_ln728_i_i_fu_2750_p3;
wire   [7:0] mul_ln1118_1_fu_2762_p0;
wire  signed [8:0] mul_ln1118_1_fu_2762_p1;
wire   [10:0] trunc_ln10_i_i_fu_2740_p4;
wire   [12:0] tmp_74_i_i_fu_2767_p3;
wire   [16:0] mul_ln1118_1_fu_2762_p2;
wire   [12:0] tmp_71_fu_2779_p4;
wire  signed [13:0] sext_ln1192_fu_2789_p1;
wire  signed [13:0] sext_ln703_fu_2775_p1;
wire   [8:0] shl_ln728_435_i_i_fu_2799_p3;
wire   [7:0] mul_ln1118_2_fu_2811_p0;
wire  signed [8:0] mul_ln1118_2_fu_2811_p1;
wire   [16:0] mul_ln1118_2_fu_2811_p2;
wire   [13:0] add_ln1192_fu_2793_p2;
wire   [11:0] tmp_72_fu_2826_p4;
wire   [13:0] tmp_73_fu_2836_p3;
wire   [12:0] trunc_ln708_1_i_i_fu_2816_p4;
wire  signed [17:0] sext_ln703_634_fu_2848_p1;
wire  signed [17:0] sext_ln728_304_fu_2844_p1;
wire   [8:0] shl_ln728_437_i_i_fu_2858_p3;
wire   [7:0] mul_ln1118_3_fu_2870_p0;
wire  signed [8:0] mul_ln1118_3_fu_2870_p1;
wire   [16:0] mul_ln1118_3_fu_2870_p2;
wire   [17:0] add_ln1192_1_fu_2852_p2;
wire   [15:0] tmp_76_i_i_fu_2885_p4;
wire   [12:0] trunc_ln708_2_i_i_fu_2875_p4;
wire  signed [17:0] sext_ln703_635_fu_2903_p1;
wire   [17:0] shl_ln728_438_i_i_fu_2895_p3;
wire   [8:0] shl_ln728_439_i_i_fu_2913_p3;
wire   [7:0] mul_ln1118_4_fu_2925_p0;
wire  signed [8:0] mul_ln1118_4_fu_2925_p1;
wire   [16:0] mul_ln1118_4_fu_2925_p2;
wire   [17:0] add_ln1192_2_fu_2907_p2;
wire   [15:0] tmp_77_i_i_fu_2940_p4;
wire   [12:0] trunc_ln708_3_i_i_fu_2930_p4;
wire  signed [17:0] sext_ln703_636_fu_2958_p1;
wire   [17:0] shl_ln728_440_i_i_fu_2950_p3;
wire   [8:0] shl_ln728_441_i_i_fu_2968_p3;
wire   [7:0] mul_ln1118_5_fu_2980_p0;
wire  signed [8:0] mul_ln1118_5_fu_2980_p1;
wire   [16:0] mul_ln1118_5_fu_2980_p2;
wire   [17:0] add_ln1192_3_fu_2962_p2;
wire   [15:0] tmp_78_i_i_fu_2995_p4;
wire   [12:0] trunc_ln708_4_i_i_fu_2985_p4;
wire  signed [17:0] sext_ln703_637_fu_3013_p1;
wire   [17:0] shl_ln728_442_i_i_fu_3005_p3;
wire   [8:0] shl_ln728_443_i_i_fu_3023_p3;
wire   [7:0] mul_ln1118_6_fu_3035_p0;
wire  signed [8:0] mul_ln1118_6_fu_3035_p1;
wire   [16:0] mul_ln1118_6_fu_3035_p2;
wire   [17:0] add_ln1192_4_fu_3017_p2;
wire   [8:0] shl_ln728_445_i_i_fu_3060_p3;
wire   [7:0] mul_ln1118_7_fu_3072_p0;
wire  signed [8:0] mul_ln1118_7_fu_3072_p1;
wire   [16:0] mul_ln1118_7_fu_3072_p2;
wire  signed [17:0] sext_ln703_638_fu_3094_p1;
wire   [17:0] shl_ln728_444_i_i_fu_3087_p3;
wire   [17:0] add_ln1192_5_fu_3097_p2;
wire   [15:0] tmp_80_i_i_fu_3103_p4;
wire  signed [17:0] sext_ln703_639_fu_3121_p1;
wire   [17:0] shl_ln728_446_i_i_fu_3113_p3;
wire   [8:0] shl_ln728_447_i_i_fu_3130_p3;
wire   [7:0] mul_ln1118_8_fu_3141_p0;
wire  signed [8:0] mul_ln1118_8_fu_3141_p1;
wire   [16:0] mul_ln1118_8_fu_3141_p2;
wire   [17:0] add_ln1192_6_fu_3124_p2;
wire   [15:0] tmp_81_i_i_fu_3156_p4;
wire   [12:0] trunc_ln708_7_i_i_fu_3146_p4;
wire  signed [17:0] sext_ln703_640_fu_3174_p1;
wire   [17:0] shl_ln728_448_i_i_fu_3166_p3;
wire   [7:0] shl_ln728_449_i_i_fu_3184_p3;
wire  signed [7:0] mul_ln1118_9_fu_3196_p0;
wire   [7:0] mul_ln1118_9_fu_3196_p1;
wire   [15:0] mul_ln1118_9_fu_3196_p2;
wire   [17:0] add_ln1192_7_fu_3178_p2;
wire   [15:0] tmp_82_i_i_fu_3211_p4;
wire   [11:0] trunc_ln708_8_i_i_fu_3201_p4;
wire  signed [17:0] sext_ln703_641_fu_3229_p1;
wire   [17:0] shl_ln728_450_i_i_fu_3221_p3;
wire   [8:0] shl_ln728_451_i_i_fu_3239_p3;
wire   [7:0] mul_ln1118_10_fu_3251_p0;
wire  signed [8:0] mul_ln1118_10_fu_3251_p1;
wire   [16:0] mul_ln1118_10_fu_3251_p2;
wire   [17:0] add_ln1192_8_fu_3233_p2;
wire   [15:0] tmp_83_i_i_fu_3266_p4;
wire   [12:0] trunc_ln708_9_i_i_fu_3256_p4;
wire  signed [17:0] sext_ln703_642_fu_3284_p1;
wire   [17:0] shl_ln728_452_i_i_fu_3276_p3;
wire   [8:0] shl_ln728_453_i_i_fu_3294_p3;
wire   [7:0] mul_ln1118_11_fu_3306_p0;
wire  signed [8:0] mul_ln1118_11_fu_3306_p1;
wire   [16:0] mul_ln1118_11_fu_3306_p2;
wire   [17:0] add_ln1192_9_fu_3288_p2;
wire   [15:0] tmp_84_i_i_fu_3321_p4;
wire   [12:0] trunc_ln708_10_i_i_fu_3311_p4;
wire  signed [17:0] sext_ln703_643_fu_3339_p1;
wire   [17:0] shl_ln728_454_i_i_fu_3331_p3;
wire   [8:0] shl_ln728_455_i_i_fu_3349_p3;
wire   [7:0] mul_ln1118_12_fu_3361_p0;
wire  signed [8:0] mul_ln1118_12_fu_3361_p1;
wire   [16:0] mul_ln1118_12_fu_3361_p2;
wire   [17:0] add_ln1192_10_fu_3343_p2;
wire   [15:0] tmp_85_i_i_fu_3376_p4;
wire   [12:0] trunc_ln708_11_i_i_fu_3366_p4;
wire  signed [17:0] sext_ln703_644_fu_3394_p1;
wire   [17:0] shl_ln728_456_i_i_fu_3386_p3;
wire   [8:0] shl_ln728_457_i_i_fu_3404_p3;
wire   [7:0] mul_ln1118_13_fu_3416_p0;
wire  signed [8:0] mul_ln1118_13_fu_3416_p1;
wire   [16:0] mul_ln1118_13_fu_3416_p2;
wire   [17:0] add_ln1192_11_fu_3398_p2;
wire   [15:0] tmp_86_i_i_fu_3431_p4;
wire   [12:0] trunc_ln708_12_i_i_fu_3421_p4;
wire  signed [17:0] sext_ln703_645_fu_3449_p1;
wire   [17:0] shl_ln728_458_i_i_fu_3441_p3;
wire   [7:0] shl_ln728_459_i_i_fu_3459_p3;
wire  signed [7:0] mul_ln1118_14_fu_3471_p0;
wire   [7:0] mul_ln1118_14_fu_3471_p1;
wire   [15:0] mul_ln1118_14_fu_3471_p2;
wire   [17:0] add_ln1192_12_fu_3453_p2;
wire   [7:0] shl_ln728_461_i_i_fu_3496_p3;
wire  signed [7:0] mul_ln1118_15_fu_3508_p0;
wire   [7:0] mul_ln1118_15_fu_3508_p1;
wire   [15:0] mul_ln1118_15_fu_3508_p2;
wire  signed [17:0] sext_ln703_646_fu_3530_p1;
wire   [17:0] shl_ln728_460_i_i_fu_3523_p3;
wire   [17:0] add_ln1192_13_fu_3533_p2;
wire   [15:0] tmp_88_i_i_fu_3539_p4;
wire  signed [17:0] sext_ln703_647_fu_3557_p1;
wire   [17:0] shl_ln728_462_i_i_fu_3549_p3;
wire   [8:0] shl_ln728_463_i_i_fu_3566_p3;
wire   [7:0] mul_ln1118_16_fu_3577_p0;
wire  signed [8:0] mul_ln1118_16_fu_3577_p1;
wire   [16:0] mul_ln1118_16_fu_3577_p2;
wire   [17:0] add_ln1192_14_fu_3560_p2;
wire   [15:0] tmp_89_i_i_fu_3592_p4;
wire   [12:0] trunc_ln708_15_i_i_fu_3582_p4;
wire  signed [17:0] sext_ln703_648_fu_3610_p1;
wire   [17:0] shl_ln728_464_i_i_fu_3602_p3;
wire   [8:0] shl_ln728_465_i_i_fu_3620_p3;
wire   [7:0] mul_ln1118_17_fu_3631_p0;
wire  signed [8:0] mul_ln1118_17_fu_3631_p1;
wire   [16:0] mul_ln1118_17_fu_3631_p2;
wire   [17:0] add_ln1192_15_fu_3614_p2;
wire   [15:0] tmp_90_i_i_fu_3646_p4;
wire   [12:0] trunc_ln708_16_i_i_fu_3636_p4;
wire  signed [17:0] sext_ln703_649_fu_3664_p1;
wire   [17:0] shl_ln728_466_i_i_fu_3656_p3;
wire   [8:0] shl_ln728_467_i_i_fu_3674_p3;
wire   [7:0] mul_ln1118_18_fu_3685_p0;
wire  signed [8:0] mul_ln1118_18_fu_3685_p1;
wire   [16:0] mul_ln1118_18_fu_3685_p2;
wire   [17:0] add_ln1192_16_fu_3668_p2;
wire   [15:0] tmp_91_i_i_fu_3700_p4;
wire   [12:0] trunc_ln708_17_i_i_fu_3690_p4;
wire  signed [17:0] sext_ln703_650_fu_3718_p1;
wire   [17:0] shl_ln728_468_i_i_fu_3710_p3;
wire   [8:0] shl_ln728_469_i_i_fu_3728_p3;
wire   [7:0] mul_ln1118_19_fu_3739_p0;
wire  signed [8:0] mul_ln1118_19_fu_3739_p1;
wire   [16:0] mul_ln1118_19_fu_3739_p2;
wire   [17:0] add_ln1192_17_fu_3722_p2;
wire   [15:0] tmp_92_i_i_fu_3754_p4;
wire   [12:0] trunc_ln708_18_i_i_fu_3744_p4;
wire  signed [17:0] sext_ln703_651_fu_3772_p1;
wire   [17:0] shl_ln728_470_i_i_fu_3764_p3;
wire   [7:0] shl_ln728_471_i_i_fu_3782_p3;
wire  signed [7:0] mul_ln1118_20_fu_3793_p0;
wire   [7:0] mul_ln1118_20_fu_3793_p1;
wire   [15:0] mul_ln1118_20_fu_3793_p2;
wire   [17:0] add_ln1192_18_fu_3776_p2;
wire   [15:0] tmp_93_i_i_fu_3808_p4;
wire   [11:0] trunc_ln708_19_i_i_fu_3798_p4;
wire  signed [17:0] sext_ln703_652_fu_3826_p1;
wire   [17:0] shl_ln728_472_i_i_fu_3818_p3;
wire   [8:0] shl_ln728_473_i_i_fu_3836_p3;
wire   [7:0] mul_ln1118_21_fu_3847_p0;
wire  signed [8:0] mul_ln1118_21_fu_3847_p1;
wire   [16:0] mul_ln1118_21_fu_3847_p2;
wire   [17:0] add_ln1192_19_fu_3830_p2;
wire   [15:0] tmp_94_i_i_fu_3862_p4;
wire   [12:0] trunc_ln708_20_i_i_fu_3852_p4;
wire  signed [17:0] sext_ln703_653_fu_3880_p1;
wire   [17:0] shl_ln728_474_i_i_fu_3872_p3;
wire   [8:0] shl_ln728_475_i_i_fu_3890_p3;
wire   [7:0] mul_ln1118_22_fu_3901_p0;
wire  signed [8:0] mul_ln1118_22_fu_3901_p1;
wire   [16:0] mul_ln1118_22_fu_3901_p2;
wire   [17:0] add_ln1192_20_fu_3884_p2;
wire  signed [17:0] sext_ln703_654_fu_3933_p1;
wire   [17:0] shl_ln728_476_i_i_fu_3926_p3;
wire   [8:0] shl_ln728_477_i_i_fu_3942_p3;
wire   [7:0] mul_ln1118_23_fu_3953_p0;
wire  signed [8:0] mul_ln1118_23_fu_3953_p1;
wire   [16:0] mul_ln1118_23_fu_3953_p2;
wire   [17:0] add_ln1192_21_fu_3936_p2;
wire   [15:0] tmp_96_i_i_fu_3968_p4;
wire   [12:0] trunc_ln708_22_i_i_fu_3958_p4;
wire  signed [17:0] sext_ln703_655_fu_3986_p1;
wire   [17:0] shl_ln728_478_i_i_fu_3978_p3;
wire   [8:0] shl_ln728_479_i_i_fu_3996_p3;
wire   [7:0] mul_ln1118_24_fu_4007_p0;
wire  signed [8:0] mul_ln1118_24_fu_4007_p1;
wire   [16:0] mul_ln1118_24_fu_4007_p2;
wire   [17:0] add_ln1192_22_fu_3990_p2;
wire   [15:0] tmp_97_i_i_fu_4022_p4;
wire   [12:0] trunc_ln708_23_i_i_fu_4012_p4;
wire  signed [17:0] sext_ln703_656_fu_4040_p1;
wire   [17:0] shl_ln728_480_i_i_fu_4032_p3;
wire   [7:0] shl_ln728_481_i_i_fu_4050_p3;
wire  signed [7:0] mul_ln1118_25_fu_4061_p0;
wire   [7:0] mul_ln1118_25_fu_4061_p1;
wire   [15:0] mul_ln1118_25_fu_4061_p2;
wire   [17:0] add_ln1192_23_fu_4044_p2;
wire   [15:0] tmp_98_i_i_fu_4076_p4;
wire   [11:0] trunc_ln708_24_i_i_fu_4066_p4;
wire  signed [17:0] sext_ln703_657_fu_4094_p1;
wire   [17:0] shl_ln728_482_i_i_fu_4086_p3;
wire   [8:0] shl_ln728_483_i_i_fu_4104_p3;
wire   [7:0] mul_ln1118_26_fu_4115_p0;
wire  signed [8:0] mul_ln1118_26_fu_4115_p1;
wire   [16:0] mul_ln1118_26_fu_4115_p2;
wire   [17:0] add_ln1192_24_fu_4098_p2;
wire   [15:0] tmp_99_i_i_fu_4130_p4;
wire   [12:0] trunc_ln708_25_i_i_fu_4120_p4;
wire  signed [17:0] sext_ln703_658_fu_4148_p1;
wire   [17:0] shl_ln728_484_i_i_fu_4140_p3;
wire   [17:0] add_ln1192_25_fu_4152_p2;
wire   [19:0] mul_ln134_fu_4169_p0;
wire   [19:0] mul_ln134_1_fu_4177_p0;
wire  signed [17:0] mul_ln134_1_fu_4177_p1;
reg    grp_fu_1476_ce;
reg    grp_fu_1607_ce;
reg    grp_fu_1718_ce;
reg   [13:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_condition_3452;
reg    ap_condition_3456;
reg    ap_condition_3460;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
end

conv113_weight_cobkb #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_0_0_0_address0),
    .ce0(weight_conv1_V_0_0_0_ce0),
    .q0(weight_conv1_V_0_0_0_q0)
);

conv113_weight_cocud #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_0_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_0_1_0_address0),
    .ce0(weight_conv1_V_0_1_0_ce0),
    .q0(weight_conv1_V_0_1_0_q0)
);

conv113_weight_codEe #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_0_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_0_2_0_address0),
    .ce0(weight_conv1_V_0_2_0_ce0),
    .q0(weight_conv1_V_0_2_0_q0)
);

conv113_weight_coeOg #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_1_0_0_address0),
    .ce0(weight_conv1_V_1_0_0_ce0),
    .q0(weight_conv1_V_1_0_0_q0)
);

conv113_weight_cofYi #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_1_1_0_address0),
    .ce0(weight_conv1_V_1_1_0_ce0),
    .q0(weight_conv1_V_1_1_0_q0)
);

conv113_weight_cog8j #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_1_2_0_address0),
    .ce0(weight_conv1_V_1_2_0_ce0),
    .q0(weight_conv1_V_1_2_0_q0)
);

conv113_weight_cohbi #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_2_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_2_0_0_address0),
    .ce0(weight_conv1_V_2_0_0_ce0),
    .q0(weight_conv1_V_2_0_0_q0)
);

conv113_weight_coibs #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_2_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_2_1_0_address0),
    .ce0(weight_conv1_V_2_1_0_ce0),
    .q0(weight_conv1_V_2_1_0_q0)
);

conv113_weight_cojbC #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_2_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_2_2_0_address0),
    .ce0(weight_conv1_V_2_2_0_ce0),
    .q0(weight_conv1_V_2_2_0_q0)
);

conv113_weight_cokbM #(
    .DataWidth( 4 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_0_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_0_0_1_address0),
    .ce0(weight_conv1_V_0_0_1_ce0),
    .q0(weight_conv1_V_0_0_1_q0)
);

conv113_weight_colbW #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_0_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_0_1_1_address0),
    .ce0(weight_conv1_V_0_1_1_ce0),
    .q0(weight_conv1_V_0_1_1_q0)
);

conv113_weight_comb6 #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_0_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_0_2_1_address0),
    .ce0(weight_conv1_V_0_2_1_ce0),
    .q0(weight_conv1_V_0_2_1_q0)
);

conv113_weight_concg #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_1_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_1_0_1_address0),
    .ce0(weight_conv1_V_1_0_1_ce0),
    .q0(weight_conv1_V_1_0_1_q0)
);

conv113_weight_coocq #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_1_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_1_1_1_address0),
    .ce0(weight_conv1_V_1_1_1_ce0),
    .q0(weight_conv1_V_1_1_1_q0)
);

conv113_weight_copcA #(
    .DataWidth( 4 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_1_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_1_2_1_address0),
    .ce0(weight_conv1_V_1_2_1_ce0),
    .q0(weight_conv1_V_1_2_1_q0)
);

conv113_weight_coqcK #(
    .DataWidth( 4 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_2_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_2_0_1_address0),
    .ce0(weight_conv1_V_2_0_1_ce0),
    .q0(weight_conv1_V_2_0_1_q0)
);

conv113_weight_corcU #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_2_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_2_1_1_address0),
    .ce0(weight_conv1_V_2_1_1_ce0),
    .q0(weight_conv1_V_2_1_1_q0)
);

conv113_weight_cosc4 #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_2_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_2_2_1_address0),
    .ce0(weight_conv1_V_2_2_1_ce0),
    .q0(weight_conv1_V_2_2_1_q0)
);

conv113_weight_cotde #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_0_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_0_0_2_address0),
    .ce0(weight_conv1_V_0_0_2_ce0),
    .q0(weight_conv1_V_0_0_2_q0)
);

conv113_weight_coudo #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_0_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_0_1_2_address0),
    .ce0(weight_conv1_V_0_1_2_ce0),
    .q0(weight_conv1_V_0_1_2_q0)
);

conv113_weight_covdy #(
    .DataWidth( 4 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_0_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_0_2_2_address0),
    .ce0(weight_conv1_V_0_2_2_ce0),
    .q0(weight_conv1_V_0_2_2_q0)
);

conv113_weight_cowdI #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_1_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_1_0_2_address0),
    .ce0(weight_conv1_V_1_0_2_ce0),
    .q0(weight_conv1_V_1_0_2_q0)
);

conv113_weight_coxdS #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_1_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_1_1_2_address0),
    .ce0(weight_conv1_V_1_1_2_ce0),
    .q0(weight_conv1_V_1_1_2_q0)
);

conv113_weight_coyd2 #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_1_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_1_2_2_address0),
    .ce0(weight_conv1_V_1_2_2_ce0),
    .q0(weight_conv1_V_1_2_2_q0)
);

conv113_weight_cozec #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_2_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_2_0_2_address0),
    .ce0(weight_conv1_V_2_0_2_ce0),
    .q0(weight_conv1_V_2_0_2_q0)
);

conv113_weight_coAem #(
    .DataWidth( 4 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_2_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_2_1_2_address0),
    .ce0(weight_conv1_V_2_1_2_ce0),
    .q0(weight_conv1_V_2_1_2_q0)
);

conv113_weight_coBew #(
    .DataWidth( 5 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
weight_conv1_V_2_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_conv1_V_2_2_2_address0),
    .ce0(weight_conv1_V_2_2_2_ce0),
    .q0(weight_conv1_V_2_2_2_q0)
);

conv113_conv1_linCeG #(
    .DataWidth( 8 ),
    .AddressRange( 322 ),
    .AddressWidth( 9 ))
conv1_line_buffer_0_217_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_line_buffer_0_217_address0),
    .ce0(conv1_line_buffer_0_217_ce0),
    .we0(conv1_line_buffer_0_217_we0),
    .d0(conv1_line_buffer_1_q0),
    .q0(conv1_line_buffer_0_217_q0)
);

conv113_conv1_linCeG #(
    .DataWidth( 8 ),
    .AddressRange( 322 ),
    .AddressWidth( 9 ))
conv1_line_buffer_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_line_buffer_0_1_address0),
    .ce0(conv1_line_buffer_0_1_ce0),
    .we0(conv1_line_buffer_0_1_we0),
    .d0(conv1_line_buffer_1_1_q0),
    .q0(conv1_line_buffer_0_1_q0)
);

conv113_conv1_linCeG #(
    .DataWidth( 8 ),
    .AddressRange( 322 ),
    .AddressWidth( 9 ))
conv1_line_buffer_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_line_buffer_0_2_address0),
    .ce0(conv1_line_buffer_0_2_ce0),
    .we0(conv1_line_buffer_0_2_we0),
    .d0(conv1_line_buffer_1_2_q0),
    .q0(conv1_line_buffer_0_2_q0)
);

conv113_conv1_linCeG #(
    .DataWidth( 8 ),
    .AddressRange( 322 ),
    .AddressWidth( 9 ))
conv1_line_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_line_buffer_1_address0),
    .ce0(conv1_line_buffer_1_ce0),
    .we0(conv1_line_buffer_1_we0),
    .d0(conv1_line_buffer_2_q0),
    .q0(conv1_line_buffer_1_q0)
);

conv113_conv1_linCeG #(
    .DataWidth( 8 ),
    .AddressRange( 322 ),
    .AddressWidth( 9 ))
conv1_line_buffer_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_line_buffer_1_1_address0),
    .ce0(conv1_line_buffer_1_1_ce0),
    .we0(conv1_line_buffer_1_1_we0),
    .d0(conv1_line_buffer_2_1_q0),
    .q0(conv1_line_buffer_1_1_q0)
);

conv113_conv1_linCeG #(
    .DataWidth( 8 ),
    .AddressRange( 322 ),
    .AddressWidth( 9 ))
conv1_line_buffer_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_line_buffer_1_2_address0),
    .ce0(conv1_line_buffer_1_2_ce0),
    .we0(conv1_line_buffer_1_2_we0),
    .d0(conv1_line_buffer_2_2_q0),
    .q0(conv1_line_buffer_1_2_q0)
);

conv113_conv1_linCeG #(
    .DataWidth( 8 ),
    .AddressRange( 322 ),
    .AddressWidth( 9 ))
conv1_line_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_line_buffer_2_address0),
    .ce0(conv1_line_buffer_2_ce0),
    .we0(conv1_line_buffer_2_we0),
    .d0(conv1_line_buffer_2_d0),
    .q0(conv1_line_buffer_2_q0)
);

conv113_conv1_linCeG #(
    .DataWidth( 8 ),
    .AddressRange( 322 ),
    .AddressWidth( 9 ))
conv1_line_buffer_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_line_buffer_2_1_address0),
    .ce0(conv1_line_buffer_2_1_ce0),
    .we0(conv1_line_buffer_2_1_we0),
    .d0(ap_phi_mux_p_0127_0_0_1_i_i_phi_fu_1398_p14),
    .q0(conv1_line_buffer_2_1_q0)
);

conv113_conv1_linKfY #(
    .DataWidth( 8 ),
    .AddressRange( 322 ),
    .AddressWidth( 9 ))
conv1_line_buffer_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_line_buffer_2_2_address0),
    .ce0(conv1_line_buffer_2_2_ce0),
    .q0(conv1_line_buffer_2_2_q0),
    .address1(conv1_line_buffer_2_8_reg_4396_pp0_iter12_reg),
    .ce1(conv1_line_buffer_2_2_ce1),
    .we1(conv1_line_buffer_2_2_we1),
    .d1(ap_phi_mux_p_0127_0_0_2_i_i_phi_fu_1422_p14)
);

conv113_conv1_winLf8 #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
conv1_window_buffer_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_window_buffer_s_address0),
    .ce0(conv1_window_buffer_s_ce0),
    .we0(conv1_window_buffer_s_we0),
    .d0(conv1_window_buffer_1_q0),
    .q0(conv1_window_buffer_s_q0),
    .address1(conv1_window_buffer_s_address1),
    .ce1(conv1_window_buffer_s_ce1),
    .q1(conv1_window_buffer_s_q1)
);

conv113_conv1_winMgi #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
conv1_window_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_window_buffer_1_address0),
    .ce0(conv1_window_buffer_1_ce0),
    .q0(conv1_window_buffer_1_q0),
    .address1(conv1_window_buffer_1_address1),
    .ce1(conv1_window_buffer_1_ce1),
    .we1(conv1_window_buffer_1_we1),
    .d1(conv1_window_buffer_2_q0),
    .q1(conv1_window_buffer_1_q1)
);

conv113_conv1_winLf8 #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
conv1_window_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_window_buffer_2_address0),
    .ce0(conv1_window_buffer_2_ce0),
    .we0(conv1_window_buffer_2_we0),
    .d0(tmp_46_i_i_fu_2553_p5),
    .q0(conv1_window_buffer_2_q0),
    .address1(conv1_window_buffer_2_address1),
    .ce1(conv1_window_buffer_2_ce1),
    .q1(conv1_window_buffer_2_q1)
);

conv113_conv1_winLf8 #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
conv1_window_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_window_buffer_3_address0),
    .ce0(conv1_window_buffer_3_ce0),
    .we0(conv1_window_buffer_3_we0),
    .d0(conv1_window_buffer_4_q0),
    .q0(conv1_window_buffer_3_q0),
    .address1(conv1_window_buffer_3_address1),
    .ce1(conv1_window_buffer_3_ce1),
    .q1(conv1_window_buffer_3_q1)
);

conv113_conv1_winMgi #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
conv1_window_buffer_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_window_buffer_4_address0),
    .ce0(conv1_window_buffer_4_ce0),
    .q0(conv1_window_buffer_4_q0),
    .address1(conv1_window_buffer_4_address1),
    .ce1(conv1_window_buffer_4_ce1),
    .we1(conv1_window_buffer_4_we1),
    .d1(conv1_window_buffer_5_q0),
    .q1(conv1_window_buffer_4_q1)
);

conv113_conv1_winLf8 #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
conv1_window_buffer_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_window_buffer_5_address0),
    .ce0(conv1_window_buffer_5_ce0),
    .we0(conv1_window_buffer_5_we0),
    .d0(tmp_47_i_i_fu_2563_p5),
    .q0(conv1_window_buffer_5_q0),
    .address1(conv1_window_buffer_5_address1),
    .ce1(conv1_window_buffer_5_ce1),
    .q1(conv1_window_buffer_5_q1)
);

conv113_conv1_winLf8 #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
conv1_window_buffer_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_window_buffer_6_address0),
    .ce0(conv1_window_buffer_6_ce0),
    .we0(conv1_window_buffer_6_we0),
    .d0(conv1_window_buffer_7_q0),
    .q0(conv1_window_buffer_6_q0),
    .address1(conv1_window_buffer_6_address1),
    .ce1(conv1_window_buffer_6_ce1),
    .q1(conv1_window_buffer_6_q1)
);

conv113_conv1_winMgi #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
conv1_window_buffer_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_window_buffer_7_address0),
    .ce0(conv1_window_buffer_7_ce0),
    .q0(conv1_window_buffer_7_q0),
    .address1(conv1_window_buffer_7_address1),
    .ce1(conv1_window_buffer_7_ce1),
    .we1(conv1_window_buffer_7_we1),
    .d1(conv1_window_buffer_8_q0),
    .q1(conv1_window_buffer_7_q1)
);

conv113_conv1_winLf8 #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
conv1_window_buffer_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_window_buffer_8_address0),
    .ce0(conv1_window_buffer_8_ce0),
    .we0(conv1_window_buffer_8_we0),
    .d0(tmp_48_i_i_fu_2573_p5),
    .q0(conv1_window_buffer_8_q0),
    .address1(conv1_window_buffer_8_address1),
    .ce1(conv1_window_buffer_8_ce1),
    .q1(conv1_window_buffer_8_q1)
);

test_fpext_32ns_6UhA #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
test_fpext_32ns_6UhA_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1476_p0),
    .ce(grp_fu_1476_ce),
    .dout(grp_fu_1476_p1)
);

test_srem_10ns_10VhK #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
test_srem_10ns_10VhK_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1607_p0),
    .din1(10'd320),
    .ce(grp_fu_1607_ce),
    .dout(grp_fu_1607_p2)
);

test_srem_9ns_9nsWhU #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
test_srem_9ns_9nsWhU_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln134_1_reg_4432),
    .din1(9'd160),
    .ce(grp_fu_1718_ce),
    .dout(grp_fu_1718_p2)
);

test_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
test_mux_32_8_1_1_U4(
    .din0(conv1_line_buffer_0_9_reg_4656),
    .din1(conv1_line_buffer_0_10_reg_4661),
    .din2(conv1_line_buffer_0_11_reg_4666),
    .din3(conv1_line_buffer_0_s_reg_1454),
    .dout(tmp_46_i_i_fu_2553_p5)
);

test_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
test_mux_32_8_1_1_U5(
    .din0(conv1_line_buffer_1_13_reg_4671),
    .din1(conv1_line_buffer_1_14_reg_4676),
    .din2(conv1_line_buffer_1_15_reg_4681),
    .din3(conv1_line_buffer_0_s_reg_1454),
    .dout(tmp_47_i_i_fu_2563_p5)
);

test_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
test_mux_32_8_1_1_U6(
    .din0(conv1_line_buffer_2_13_reg_4686),
    .din1(conv1_line_buffer_2_14_reg_4691),
    .din2(conv1_line_buffer_2_15_reg_4696),
    .din3(conv1_line_buffer_0_s_reg_1454),
    .dout(tmp_48_i_i_fu_2573_p5)
);

test_mul_mul_20nsXh4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 38 ))
test_mul_mul_20nsXh4_U7(
    .din0(mul_ln134_fu_4169_p0),
    .din1(sub_ln134_fu_1634_p2),
    .dout(mul_ln134_fu_4169_p2)
);

test_mul_mul_20nsXh4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 38 ))
test_mul_mul_20nsXh4_U8(
    .din0(mul_ln134_1_fu_4177_p0),
    .din1(mul_ln134_1_fu_4177_p1),
    .dout(mul_ln134_1_fu_4177_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln127_fu_1493_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln127_fu_1493_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln127_fu_1493_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state46) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state46) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state46);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state51) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state50)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state51)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state51);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if ((1'b1 == ap_CS_fsm_state50)) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln603_fu_2053_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln582_fu_2033_p2 == 1'd0) & (icmp_ln581_fu_1999_p2 == 1'd0) & (icmp_ln571_fu_1977_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter12_p_0127_0_0_0_i_i_reg_1373 <= shl_ln604_fu_2059_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln581_fu_1999_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln585_fu_2065_p2 == 1'd0) & (icmp_ln582_fu_2033_p2 == 1'd0) & (icmp_ln571_fu_1977_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter12_p_0127_0_0_0_i_i_reg_1373 <= select_ln588_fu_2082_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln582_fu_2033_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln571_fu_1977_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter12_p_0127_0_0_0_i_i_reg_1373 <= trunc_ln583_fu_2104_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln603_fu_2053_p2 == 1'd0) & (icmp_ln582_fu_2033_p2 == 1'd0) & (icmp_ln581_fu_1999_p2 == 1'd0) & (icmp_ln571_fu_1977_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln571_fu_1977_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0)))) begin
        ap_phi_reg_pp0_iter12_p_0127_0_0_0_i_i_reg_1373 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        ap_phi_reg_pp0_iter12_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter11_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln603_1_fu_2244_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln582_1_fu_2224_p2 == 1'd0) & (icmp_ln581_1_fu_2190_p2 == 1'd0) & (icmp_ln571_1_fu_2168_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter12_p_0127_0_0_1_i_i_reg_1394 <= shl_ln604_1_fu_2250_p2;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln581_1_fu_2190_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln585_1_fu_2256_p2 == 1'd0) & (icmp_ln582_1_fu_2224_p2 == 1'd0) & (icmp_ln571_1_fu_2168_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter12_p_0127_0_0_1_i_i_reg_1394 <= select_ln588_1_fu_2273_p3;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln582_1_fu_2224_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln571_1_fu_2168_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter12_p_0127_0_0_1_i_i_reg_1394 <= trunc_ln583_1_fu_2295_p1;
    end else if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln603_1_fu_2244_p2 == 1'd0) & (icmp_ln582_1_fu_2224_p2 == 1'd0) & (icmp_ln581_1_fu_2190_p2 == 1'd0) & (icmp_ln571_1_fu_2168_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln571_1_fu_2168_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0)))) begin
        ap_phi_reg_pp0_iter12_p_0127_0_0_1_i_i_reg_1394 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        ap_phi_reg_pp0_iter12_p_0127_0_0_1_i_i_reg_1394 <= ap_phi_reg_pp0_iter11_p_0127_0_0_1_i_i_reg_1394;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln603_2_fu_2435_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln582_2_fu_2415_p2 == 1'd0) & (icmp_ln581_2_fu_2381_p2 == 1'd0) & (icmp_ln571_2_fu_2359_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter13_p_0127_0_0_2_i_i_reg_1418 <= shl_ln604_2_fu_2441_p2;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln581_2_fu_2381_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln585_2_fu_2447_p2 == 1'd0) & (icmp_ln582_2_fu_2415_p2 == 1'd0) & (icmp_ln571_2_fu_2359_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter13_p_0127_0_0_2_i_i_reg_1418 <= select_ln588_2_fu_2464_p3;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln582_2_fu_2415_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln571_2_fu_2359_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter13_p_0127_0_0_2_i_i_reg_1418 <= trunc_ln583_2_fu_2486_p1;
    end else if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln603_2_fu_2435_p2 == 1'd0) & (icmp_ln582_2_fu_2415_p2 == 1'd0) & (icmp_ln581_2_fu_2381_p2 == 1'd0) & (icmp_ln571_2_fu_2359_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln571_2_fu_2359_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0)))) begin
        ap_phi_reg_pp0_iter13_p_0127_0_0_2_i_i_reg_1418 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter13_p_0127_0_0_2_i_i_reg_1418 <= ap_phi_reg_pp0_iter12_p_0127_0_0_2_i_i_reg_1418;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        conv1_line_buffer_0_s_reg_1454 <= 2'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0))) begin
        conv1_line_buffer_0_s_reg_1454 <= add_ln139_fu_2537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln128_reg_4350 == 1'd0))) begin
        conv1_pad_1_0_0_i_i_reg_1362 <= add_ln128_reg_4354;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln127_fu_1493_p2 == 1'd0))) begin
        conv1_pad_1_0_0_i_i_reg_1362 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ff_0_0_i_i_reg_1465 <= 5'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln148_fu_2698_p2 == 1'd0))) begin
        ff_0_0_i_i_reg_1465 <= add_ln148_fu_2704_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        xx_reuse_0_0_i_i_reg_1442 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        xx_reuse_0_0_i_i_reg_1442 <= add_ln137_reg_4606;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_fu_2506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
        yy_reuse_0_0_i_i_reg_1350 <= add_ln127_reg_4330;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0) | (result_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        yy_reuse_0_0_i_i_reg_1350 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln127_reg_4330 <= add_ln127_fu_1499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln128_reg_4354 <= add_ln128_fu_1553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_reg_4350_pp0_iter3_reg == 1'd0))) begin
        add_ln134_2_reg_4411 <= add_ln134_2_fu_1613_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        add_ln137_reg_4606 <= add_ln137_fu_2512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_fu_1547_p2 == 1'd0))) begin
        and_ln134_2_reg_4402 <= and_ln134_2_fu_1595_p2;
        conv1_line_buffer_1_6_reg_4371 <= zext_ln132_fu_1563_p1;
        conv1_line_buffer_1_7_reg_4376 <= zext_ln132_fu_1563_p1;
        conv1_line_buffer_1_8_reg_4381 <= zext_ln132_fu_1563_p1;
        conv1_line_buffer_2_6_reg_4386 <= zext_ln132_fu_1563_p1;
        conv1_line_buffer_2_7_reg_4391 <= zext_ln132_fu_1563_p1;
        conv1_line_buffer_2_8_reg_4396 <= zext_ln132_fu_1563_p1;
        zext_ln128_1_reg_4359[8 : 0] <= zext_ln128_1_fu_1559_p1[8 : 0];
        zext_ln132_reg_4364[8 : 0] <= zext_ln132_fu_1563_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln134_2_reg_4402_pp0_iter10_reg <= and_ln134_2_reg_4402_pp0_iter9_reg;
        and_ln134_2_reg_4402_pp0_iter11_reg <= and_ln134_2_reg_4402_pp0_iter10_reg;
        and_ln134_2_reg_4402_pp0_iter12_reg <= and_ln134_2_reg_4402_pp0_iter11_reg;
        and_ln134_2_reg_4402_pp0_iter1_reg <= and_ln134_2_reg_4402;
        and_ln134_2_reg_4402_pp0_iter2_reg <= and_ln134_2_reg_4402_pp0_iter1_reg;
        and_ln134_2_reg_4402_pp0_iter3_reg <= and_ln134_2_reg_4402_pp0_iter2_reg;
        and_ln134_2_reg_4402_pp0_iter4_reg <= and_ln134_2_reg_4402_pp0_iter3_reg;
        and_ln134_2_reg_4402_pp0_iter5_reg <= and_ln134_2_reg_4402_pp0_iter4_reg;
        and_ln134_2_reg_4402_pp0_iter6_reg <= and_ln134_2_reg_4402_pp0_iter5_reg;
        and_ln134_2_reg_4402_pp0_iter7_reg <= and_ln134_2_reg_4402_pp0_iter6_reg;
        and_ln134_2_reg_4402_pp0_iter8_reg <= and_ln134_2_reg_4402_pp0_iter7_reg;
        and_ln134_2_reg_4402_pp0_iter9_reg <= and_ln134_2_reg_4402_pp0_iter8_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter10_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter9_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter11_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter10_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter12_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter11_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter1_reg <= conv1_line_buffer_2_6_reg_4386;
        conv1_line_buffer_2_6_reg_4386_pp0_iter2_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter1_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter3_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter2_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter4_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter3_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter5_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter4_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter6_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter5_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter7_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter6_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter8_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter7_reg;
        conv1_line_buffer_2_6_reg_4386_pp0_iter9_reg <= conv1_line_buffer_2_6_reg_4386_pp0_iter8_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter10_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter9_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter11_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter10_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter12_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter11_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter1_reg <= conv1_line_buffer_2_7_reg_4391;
        conv1_line_buffer_2_7_reg_4391_pp0_iter2_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter1_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter3_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter2_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter4_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter3_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter5_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter4_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter6_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter5_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter7_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter6_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter8_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter7_reg;
        conv1_line_buffer_2_7_reg_4391_pp0_iter9_reg <= conv1_line_buffer_2_7_reg_4391_pp0_iter8_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter10_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter9_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter11_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter10_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter12_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter11_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter1_reg <= conv1_line_buffer_2_8_reg_4396;
        conv1_line_buffer_2_8_reg_4396_pp0_iter2_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter1_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter3_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter2_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter4_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter3_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter5_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter4_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter6_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter5_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter7_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter6_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter8_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter7_reg;
        conv1_line_buffer_2_8_reg_4396_pp0_iter9_reg <= conv1_line_buffer_2_8_reg_4396_pp0_iter8_reg;
        icmp_ln128_reg_4350 <= icmp_ln128_fu_1547_p2;
        icmp_ln128_reg_4350_pp0_iter10_reg <= icmp_ln128_reg_4350_pp0_iter9_reg;
        icmp_ln128_reg_4350_pp0_iter11_reg <= icmp_ln128_reg_4350_pp0_iter10_reg;
        icmp_ln128_reg_4350_pp0_iter12_reg <= icmp_ln128_reg_4350_pp0_iter11_reg;
        icmp_ln128_reg_4350_pp0_iter1_reg <= icmp_ln128_reg_4350;
        icmp_ln128_reg_4350_pp0_iter2_reg <= icmp_ln128_reg_4350_pp0_iter1_reg;
        icmp_ln128_reg_4350_pp0_iter3_reg <= icmp_ln128_reg_4350_pp0_iter2_reg;
        icmp_ln128_reg_4350_pp0_iter4_reg <= icmp_ln128_reg_4350_pp0_iter3_reg;
        icmp_ln128_reg_4350_pp0_iter5_reg <= icmp_ln128_reg_4350_pp0_iter4_reg;
        icmp_ln128_reg_4350_pp0_iter6_reg <= icmp_ln128_reg_4350_pp0_iter5_reg;
        icmp_ln128_reg_4350_pp0_iter7_reg <= icmp_ln128_reg_4350_pp0_iter6_reg;
        icmp_ln128_reg_4350_pp0_iter8_reg <= icmp_ln128_reg_4350_pp0_iter7_reg;
        icmp_ln128_reg_4350_pp0_iter9_reg <= icmp_ln128_reg_4350_pp0_iter8_reg;
        zext_ln128_1_reg_4359_pp0_iter1_reg[8 : 0] <= zext_ln128_1_reg_4359[8 : 0];
        zext_ln128_1_reg_4359_pp0_iter2_reg[8 : 0] <= zext_ln128_1_reg_4359_pp0_iter1_reg[8 : 0];
        zext_ln128_1_reg_4359_pp0_iter3_reg[8 : 0] <= zext_ln128_1_reg_4359_pp0_iter2_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        ap_phi_reg_pp0_iter10_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter9_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        ap_phi_reg_pp0_iter11_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter10_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter0_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter2_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter1_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter2_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter3_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter4_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter6_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter5_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_phi_reg_pp0_iter7_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter6_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ap_phi_reg_pp0_iter8_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter7_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_phi_reg_pp0_iter9_p_0127_0_0_0_i_i_reg_1373 <= ap_phi_reg_pp0_iter8_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        conv1_line_buffer_0_10_reg_4661 <= conv1_line_buffer_0_1_q0;
        conv1_line_buffer_0_11_reg_4666 <= conv1_line_buffer_0_2_q0;
        conv1_line_buffer_0_9_reg_4656 <= conv1_line_buffer_0_217_q0;
        conv1_line_buffer_1_13_reg_4671 <= conv1_line_buffer_1_q0;
        conv1_line_buffer_1_14_reg_4676 <= conv1_line_buffer_1_1_q0;
        conv1_line_buffer_1_15_reg_4681 <= conv1_line_buffer_1_2_q0;
        conv1_line_buffer_2_13_reg_4686 <= conv1_line_buffer_2_q0;
        conv1_line_buffer_2_14_reg_4691 <= conv1_line_buffer_2_1_q0;
        conv1_line_buffer_2_15_reg_4696 <= conv1_line_buffer_2_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_36_reg_4754 <= conv1_window_buffer_s_q0;
        conv1_window_buffer_37_reg_4759 <= conv1_window_buffer_1_q0;
        conv1_window_buffer_38_reg_4764 <= conv1_window_buffer_2_q0;
        conv1_window_buffer_39_reg_4769 <= conv1_window_buffer_3_q0;
        conv1_window_buffer_40_reg_4774 <= conv1_window_buffer_4_q0;
        conv1_window_buffer_41_reg_4779 <= conv1_window_buffer_5_q0;
        conv1_window_buffer_42_reg_4784 <= conv1_window_buffer_6_q0;
        conv1_window_buffer_43_reg_4789 <= conv1_window_buffer_7_q0;
        conv1_window_buffer_44_reg_4794 <= conv1_window_buffer_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0))) begin
        conv1_window_buffer_63_reg_4717 <= zext_ln143_fu_2543_p1;
        conv1_window_buffer_68_reg_4728 <= zext_ln143_fu_2543_p1;
        conv1_window_buffer_73_reg_4739 <= zext_ln143_fu_2543_p1;
        zext_ln143_reg_4710[1 : 0] <= zext_ln143_fu_2543_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln127_fu_1493_p2 == 1'd0))) begin
        icmp_ln134_1_reg_4340 <= icmp_ln134_1_fu_1511_p2;
        icmp_ln134_reg_4335 <= icmp_ln134_fu_1505_p2;
        zext_ln128_reg_4345[15 : 6] <= zext_ln128_fu_1543_p1[15 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        icmp_ln138_reg_4599 <= icmp_ln138_fu_2500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln139_reg_4701 <= icmp_ln139_fu_2531_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        icmp_ln150_reg_4750 <= icmp_ln150_fu_2593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        icmp_ln571_1_reg_4519 <= icmp_ln571_1_fu_2168_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        icmp_ln571_2_reg_4559 <= icmp_ln571_2_fu_2359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0))) begin
        icmp_ln571_reg_4473 <= icmp_ln571_fu_1977_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln571_1_fu_2168_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        icmp_ln581_1_reg_4523 <= icmp_ln581_1_fu_2190_p2;
        icmp_ln582_1_reg_4527 <= icmp_ln582_1_fu_2224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln571_2_fu_2359_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        icmp_ln581_2_reg_4563 <= icmp_ln581_2_fu_2381_p2;
        icmp_ln582_2_reg_4567 <= icmp_ln582_2_fu_2415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln571_fu_1977_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0))) begin
        icmp_ln581_reg_4477 <= icmp_ln581_fu_1999_p2;
        icmp_ln582_reg_4481 <= icmp_ln582_fu_2033_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln581_1_fu_2190_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln582_1_fu_2224_p2 == 1'd0) & (icmp_ln571_1_fu_2168_p2 == 1'd0))) begin
        icmp_ln585_1_reg_4540 <= icmp_ln585_1_fu_2256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln581_2_fu_2381_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln582_2_fu_2415_p2 == 1'd0) & (icmp_ln571_2_fu_2359_p2 == 1'd0))) begin
        icmp_ln585_2_reg_4580 <= icmp_ln585_2_fu_2447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln581_fu_1999_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln582_fu_2033_p2 == 1'd0) & (icmp_ln571_fu_1977_p2 == 1'd0))) begin
        icmp_ln585_reg_4494 <= icmp_ln585_fu_2065_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op292_read_state38 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_image_addr_1_r_reg_4467 <= m_axi_input_image_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln128_reg_4350_pp0_iter8_reg == 1'd0))) begin
        input_image_addr_1_reg_4449 <= add_ln134_10_fu_1889_p2;
        input_image_addr_2_reg_4455 <= add_ln134_12_fu_1906_p2;
        input_image_addr_reg_4443 <= add_ln134_8_fu_1872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op336_read_state39 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_image_addr_2_r_reg_4513 <= m_axi_input_image_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op288_read_state37 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_image_addr_rea_reg_4461 <= m_axi_input_image_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350_pp0_iter4_reg == 1'd0))) begin
        select_ln134_1_reg_4432 <= select_ln134_1_fu_1710_p3;
        sext_ln134_4_reg_4421 <= sext_ln134_4_fu_1640_p1;
        srem_ln134_reg_4416 <= grp_fu_1607_p2;
        tmp_57_reg_4426 <= sub_ln134_fu_1634_p2[32'd17];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln128_reg_4350_pp0_iter7_reg == 1'd0))) begin
        select_ln134_3_reg_4437 <= select_ln134_3_fu_1772_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sext_ln134_4_reg_4421_pp0_iter5_reg <= sext_ln134_4_reg_4421;
        sext_ln134_4_reg_4421_pp0_iter6_reg <= sext_ln134_4_reg_4421_pp0_iter5_reg;
        sext_ln134_4_reg_4421_pp0_iter7_reg <= sext_ln134_4_reg_4421_pp0_iter6_reg;
        srem_ln134_reg_4416_pp0_iter5_reg <= srem_ln134_reg_4416;
        srem_ln134_reg_4416_pp0_iter6_reg <= srem_ln134_reg_4416_pp0_iter5_reg;
        srem_ln134_reg_4416_pp0_iter7_reg <= srem_ln134_reg_4416_pp0_iter6_reg;
        srem_ln134_reg_4416_pp0_iter8_reg <= srem_ln134_reg_4416_pp0_iter7_reg;
        tmp_57_reg_4426_pp0_iter5_reg <= tmp_57_reg_4426;
        tmp_57_reg_4426_pp0_iter6_reg <= tmp_57_reg_4426_pp0_iter5_reg;
        tmp_57_reg_4426_pp0_iter7_reg <= tmp_57_reg_4426_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln150_reg_4750 == 1'd0))) begin
        tmp_79_i_i_reg_5015 <= {{add_ln1192_4_fu_3017_p2[17:2]}};
        trunc_ln708_5_i_i_reg_5010 <= {{mul_ln1118_6_fu_3035_p2[16:4]}};
        trunc_ln708_6_i_i_reg_5020 <= {{mul_ln1118_7_fu_3072_p2[16:4]}};
        weight_conv1_V_2_2_0_2_reg_5025 <= weight_conv1_V_2_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln150_reg_4750 == 1'd0))) begin
        tmp_87_i_i_reg_5125 <= {{add_ln1192_12_fu_3453_p2[17:2]}};
        tmp_95_i_i_reg_5195 <= {{add_ln1192_20_fu_3884_p2[17:2]}};
        trunc_ln708_13_i_i_reg_5120 <= {{mul_ln1118_14_fu_3471_p2[15:4]}};
        trunc_ln708_14_i_i_reg_5130 <= {{mul_ln1118_15_fu_3508_p2[15:4]}};
        trunc_ln708_21_i_i_reg_5190 <= {{mul_ln1118_22_fu_3901_p2[16:4]}};
        weight_conv1_V_0_0_2_2_reg_5145 <= weight_conv1_V_0_0_2_q0;
        weight_conv1_V_0_1_2_2_reg_5150 <= weight_conv1_V_0_1_2_q0;
        weight_conv1_V_0_2_2_2_reg_5155 <= weight_conv1_V_0_2_2_q0;
        weight_conv1_V_1_0_2_2_reg_5160 <= weight_conv1_V_1_0_2_q0;
        weight_conv1_V_1_1_2_2_reg_5165 <= weight_conv1_V_1_1_2_q0;
        weight_conv1_V_1_2_2_2_reg_5170 <= weight_conv1_V_1_2_2_q0;
        weight_conv1_V_2_0_2_2_reg_5175 <= weight_conv1_V_2_0_2_q0;
        weight_conv1_V_2_1_1_2_reg_5135 <= weight_conv1_V_2_1_1_q0;
        weight_conv1_V_2_1_2_2_reg_5180 <= weight_conv1_V_2_1_2_q0;
        weight_conv1_V_2_2_1_2_reg_5140 <= weight_conv1_V_2_2_1_q0;
        weight_conv1_V_2_2_2_2_reg_5185 <= weight_conv1_V_2_2_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln585_1_fu_2256_p2 == 1'd1) & (icmp_ln581_1_fu_2190_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln582_1_fu_2224_p2 == 1'd0) & (icmp_ln571_1_fu_2168_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        trunc_ln586_1_reg_4549 <= trunc_ln586_1_fu_2291_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln585_2_fu_2447_p2 == 1'd1) & (icmp_ln581_2_fu_2381_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln582_2_fu_2415_p2 == 1'd0) & (icmp_ln571_2_fu_2359_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        trunc_ln586_2_reg_4589 <= trunc_ln586_2_fu_2482_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln585_fu_2065_p2 == 1'd1) & (icmp_ln581_fu_1999_p2 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln582_fu_2033_p2 == 1'd0) & (icmp_ln571_fu_1977_p2 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0))) begin
        trunc_ln586_reg_4503 <= trunc_ln586_fu_2100_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        weight_conv1_V_1_2_2_2_reg_5170_pp2_iter3_reg <= weight_conv1_V_1_2_2_2_reg_5170;
        weight_conv1_V_2_0_2_2_reg_5175_pp2_iter3_reg <= weight_conv1_V_2_0_2_2_reg_5175;
        weight_conv1_V_2_1_2_2_reg_5180_pp2_iter3_reg <= weight_conv1_V_2_1_2_2_reg_5180;
        weight_conv1_V_2_2_2_2_reg_5185_pp2_iter3_reg <= weight_conv1_V_2_2_2_2_reg_5185;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        zext_ln1118_10_reg_4854[7 : 0] <= zext_ln1118_10_fu_2634_p1[7 : 0];
        zext_ln1118_11_reg_4859[7 : 0] <= zext_ln1118_11_fu_2638_p1[7 : 0];
        zext_ln1118_12_reg_4864[7 : 0] <= zext_ln1118_12_fu_2642_p1[7 : 0];
        zext_ln1118_13_reg_4879[7 : 0] <= zext_ln1118_13_fu_2654_p1[7 : 0];
        zext_ln1118_14_reg_4884[7 : 0] <= zext_ln1118_14_fu_2658_p1[7 : 0];
        zext_ln1118_15_reg_4889[7 : 0] <= zext_ln1118_15_fu_2662_p1[7 : 0];
        zext_ln1118_16_reg_4894[7 : 0] <= zext_ln1118_16_fu_2666_p1[7 : 0];
        zext_ln1118_17_reg_4904[7 : 0] <= zext_ln1118_17_fu_2674_p1[7 : 0];
        zext_ln1118_18_reg_4909[7 : 0] <= zext_ln1118_18_fu_2678_p1[7 : 0];
        zext_ln1118_19_reg_4914[7 : 0] <= zext_ln1118_19_fu_2682_p1[7 : 0];
        zext_ln1118_1_reg_4804[7 : 0] <= zext_ln1118_1_fu_2602_p1[7 : 0];
        zext_ln1118_20_reg_4919[7 : 0] <= zext_ln1118_20_fu_2686_p1[7 : 0];
        zext_ln1118_21_reg_4929[7 : 0] <= zext_ln1118_21_fu_2694_p1[7 : 0];
        zext_ln1118_2_reg_4809[7 : 0] <= zext_ln1118_2_fu_2605_p1[7 : 0];
        zext_ln1118_3_reg_4814[7 : 0] <= zext_ln1118_3_fu_2608_p1[7 : 0];
        zext_ln1118_4_reg_4819[7 : 0] <= zext_ln1118_4_fu_2611_p1[7 : 0];
        zext_ln1118_5_reg_4824[7 : 0] <= zext_ln1118_5_fu_2614_p1[7 : 0];
        zext_ln1118_6_reg_4829[7 : 0] <= zext_ln1118_6_fu_2617_p1[7 : 0];
        zext_ln1118_7_reg_4834[7 : 0] <= zext_ln1118_7_fu_2620_p1[7 : 0];
        zext_ln1118_8_reg_4839[7 : 0] <= zext_ln1118_8_fu_2623_p1[7 : 0];
        zext_ln1118_9_reg_4849[7 : 0] <= zext_ln1118_9_fu_2630_p1[7 : 0];
        zext_ln1118_reg_4799[7 : 0] <= zext_ln1118_fu_2599_p1[7 : 0];
        zext_ln1265_76_reg_4869[7 : 0] <= zext_ln1265_76_fu_2646_p1[7 : 0];
        zext_ln1265_77_reg_4874[7 : 0] <= zext_ln1265_77_fu_2650_p1[7 : 0];
        zext_ln1265_78_reg_4899[7 : 0] <= zext_ln1265_78_fu_2670_p1[7 : 0];
        zext_ln1265_79_reg_4924[7 : 0] <= zext_ln1265_79_fu_2690_p1[7 : 0];
        zext_ln1265_reg_4844[7 : 0] <= zext_ln1265_fu_2626_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0) | (result_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        zext_ln134_reg_4319[29 : 0] <= zext_ln134_fu_1489_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln150_reg_4750 == 1'd0) & (icmp_ln148_fu_2698_p2 == 1'd0))) begin
        zext_ln158_reg_4943[4 : 0] <= zext_ln158_fu_2710_p1[4 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln128_fu_1547_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln139_fu_2531_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state46 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state46 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln148_fu_2698_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state51 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state51 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln127_fu_1493_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln128_reg_4350 == 1'd0))) begin
        ap_phi_mux_conv1_pad_1_0_0_i_i_phi_fu_1366_p4 = add_ln128_reg_4354;
    end else begin
        ap_phi_mux_conv1_pad_1_0_0_i_i_phi_fu_1366_p4 = conv1_pad_1_0_0_i_i_reg_1362;
    end
end

always @ (*) begin
    if (((icmp_ln585_reg_4494 == 1'd1) & (icmp_ln581_reg_4477 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (icmp_ln582_reg_4481 == 1'd0) & (icmp_ln571_reg_4473 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        ap_phi_mux_p_0127_0_0_0_i_i_phi_fu_1377_p12 = trunc_ln586_reg_4503;
    end else begin
        ap_phi_mux_p_0127_0_0_0_i_i_phi_fu_1377_p12 = ap_phi_reg_pp0_iter12_p_0127_0_0_0_i_i_reg_1373;
    end
end

always @ (*) begin
    if (((icmp_ln585_1_reg_4540 == 1'd1) & (icmp_ln581_1_reg_4523 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (icmp_ln582_1_reg_4527 == 1'd0) & (icmp_ln571_1_reg_4519 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        ap_phi_mux_p_0127_0_0_1_i_i_phi_fu_1398_p14 = trunc_ln586_1_reg_4549;
    end else begin
        ap_phi_mux_p_0127_0_0_1_i_i_phi_fu_1398_p14 = ap_phi_reg_pp0_iter12_p_0127_0_0_1_i_i_reg_1394;
    end
end

always @ (*) begin
    if (((icmp_ln585_2_reg_4580 == 1'd1) & (icmp_ln581_2_reg_4563 == 1'd1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (icmp_ln582_2_reg_4567 == 1'd0) & (icmp_ln571_2_reg_4559 == 1'd0) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        ap_phi_mux_p_0127_0_0_2_i_i_phi_fu_1422_p14 = trunc_ln586_2_reg_4589;
    end else begin
        ap_phi_mux_p_0127_0_0_2_i_i_phi_fu_1422_p14 = ap_phi_reg_pp0_iter13_p_0127_0_0_2_i_i_reg_1418;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        conv1_line_buffer_0_1_address0 = zext_ln145_fu_2518_p1;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (1'd1 == and_ln134_2_reg_4402) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln134_2_reg_4402) & (icmp_ln128_reg_4350 == 1'd0)))) begin
        conv1_line_buffer_0_1_address0 = zext_ln132_reg_4364;
    end else begin
        conv1_line_buffer_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln134_2_reg_4402) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln134_2_reg_4402) & (icmp_ln128_reg_4350 == 1'd0)))) begin
        conv1_line_buffer_0_1_ce0 = 1'b1;
    end else begin
        conv1_line_buffer_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln134_2_reg_4402) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln134_2_reg_4402) & (icmp_ln128_reg_4350 == 1'd0)))) begin
        conv1_line_buffer_0_1_we0 = 1'b1;
    end else begin
        conv1_line_buffer_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        conv1_line_buffer_0_217_address0 = zext_ln145_fu_2518_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_line_buffer_0_217_address0 = zext_ln132_reg_4364;
    end else begin
        conv1_line_buffer_0_217_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv1_line_buffer_0_217_ce0 = 1'b1;
    end else begin
        conv1_line_buffer_0_217_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350 == 1'd0))) begin
        conv1_line_buffer_0_217_we0 = 1'b1;
    end else begin
        conv1_line_buffer_0_217_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        conv1_line_buffer_0_2_address0 = zext_ln145_fu_2518_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_line_buffer_0_2_address0 = zext_ln132_reg_4364;
    end else begin
        conv1_line_buffer_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv1_line_buffer_0_2_ce0 = 1'b1;
    end else begin
        conv1_line_buffer_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350 == 1'd0))) begin
        conv1_line_buffer_0_2_we0 = 1'b1;
    end else begin
        conv1_line_buffer_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        conv1_line_buffer_1_1_address0 = zext_ln145_fu_2518_p1;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (1'd1 == and_ln134_2_reg_4402) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln134_2_reg_4402) & (icmp_ln128_reg_4350 == 1'd0)))) begin
        conv1_line_buffer_1_1_address0 = conv1_line_buffer_1_7_reg_4376;
    end else if ((((1'd1 == and_ln134_2_fu_1595_p2) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_fu_1547_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln134_2_fu_1595_p2) & (icmp_ln128_fu_1547_p2 == 1'd0)))) begin
        conv1_line_buffer_1_1_address0 = zext_ln132_fu_1563_p1;
    end else begin
        conv1_line_buffer_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln134_2_reg_4402) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln134_2_reg_4402) & (icmp_ln128_reg_4350 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln134_2_fu_1595_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_fu_1547_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln134_2_fu_1595_p2) & (icmp_ln128_fu_1547_p2 == 1'd0)))) begin
        conv1_line_buffer_1_1_ce0 = 1'b1;
    end else begin
        conv1_line_buffer_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln134_2_reg_4402) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln134_2_reg_4402) & (icmp_ln128_reg_4350 == 1'd0)))) begin
        conv1_line_buffer_1_1_we0 = 1'b1;
    end else begin
        conv1_line_buffer_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        conv1_line_buffer_1_2_address0 = zext_ln145_fu_2518_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_line_buffer_1_2_address0 = conv1_line_buffer_1_8_reg_4381;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_line_buffer_1_2_address0 = zext_ln132_fu_1563_p1;
    end else begin
        conv1_line_buffer_1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_line_buffer_1_2_ce0 = 1'b1;
    end else begin
        conv1_line_buffer_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350 == 1'd0))) begin
        conv1_line_buffer_1_2_we0 = 1'b1;
    end else begin
        conv1_line_buffer_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        conv1_line_buffer_1_address0 = zext_ln145_fu_2518_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_line_buffer_1_address0 = conv1_line_buffer_1_6_reg_4371;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_line_buffer_1_address0 = zext_ln132_fu_1563_p1;
    end else begin
        conv1_line_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_line_buffer_1_ce0 = 1'b1;
    end else begin
        conv1_line_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350 == 1'd0))) begin
        conv1_line_buffer_1_we0 = 1'b1;
    end else begin
        conv1_line_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        conv1_line_buffer_2_1_address0 = zext_ln145_fu_2518_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv1_line_buffer_2_1_address0 = conv1_line_buffer_2_7_reg_4391_pp0_iter12_reg;
    end else if ((((1'd1 == and_ln134_2_fu_1595_p2) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_fu_1547_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln134_2_fu_1595_p2) & (icmp_ln128_fu_1547_p2 == 1'd0)))) begin
        conv1_line_buffer_2_1_address0 = zext_ln132_fu_1563_p1;
    end else begin
        conv1_line_buffer_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln134_2_fu_1595_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_fu_1547_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln134_2_fu_1595_p2) & (icmp_ln128_fu_1547_p2 == 1'd0)))) begin
        conv1_line_buffer_2_1_ce0 = 1'b1;
    end else begin
        conv1_line_buffer_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        conv1_line_buffer_2_1_we0 = 1'b1;
    end else begin
        conv1_line_buffer_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        conv1_line_buffer_2_2_address0 = zext_ln145_fu_2518_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_line_buffer_2_2_address0 = zext_ln132_fu_1563_p1;
    end else begin
        conv1_line_buffer_2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_line_buffer_2_2_ce0 = 1'b1;
    end else begin
        conv1_line_buffer_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        conv1_line_buffer_2_2_ce1 = 1'b1;
    end else begin
        conv1_line_buffer_2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0))) begin
        conv1_line_buffer_2_2_we1 = 1'b1;
    end else begin
        conv1_line_buffer_2_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        conv1_line_buffer_2_address0 = zext_ln145_fu_2518_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_line_buffer_2_address0 = conv1_line_buffer_2_6_reg_4386_pp0_iter12_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_fu_1547_p2 == 1'd0))) begin
        conv1_line_buffer_2_address0 = zext_ln132_fu_1563_p1;
    end else begin
        conv1_line_buffer_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln134_2_fu_1595_p2) & (icmp_ln128_fu_1547_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_fu_1547_p2 == 1'd0)))) begin
        conv1_line_buffer_2_ce0 = 1'b1;
    end else begin
        conv1_line_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_line_buffer_2_d0 = ap_phi_mux_p_0127_0_0_0_i_i_phi_fu_1377_p12;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln134_2_fu_1595_p2) & (icmp_ln128_fu_1547_p2 == 1'd0))) begin
        conv1_line_buffer_2_d0 = 8'd0;
    end else begin
        conv1_line_buffer_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln134_2_reg_4402_pp0_iter12_reg) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350_pp0_iter12_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln134_2_fu_1595_p2) & (icmp_ln128_fu_1547_p2 == 1'd0)))) begin
        conv1_line_buffer_2_we0 = 1'b1;
    end else begin
        conv1_line_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln150_reg_4750 == 1'd0))) begin
        conv1_pipe_1_V_V_blk_n = conv1_pipe_1_V_V_full_n;
    end else begin
        conv1_pipe_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln150_reg_4750 == 1'd0))) begin
        conv1_pipe_1_V_V_write = 1'b1;
    end else begin
        conv1_pipe_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        conv1_window_buffer_1_address0 = 64'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        conv1_window_buffer_1_address0 = zext_ln143_fu_2543_p1;
    end else begin
        conv1_window_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_1_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        conv1_window_buffer_1_address1 = conv1_window_buffer_63_reg_4717;
    end else begin
        conv1_window_buffer_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        conv1_window_buffer_1_ce0 = 1'b1;
    end else begin
        conv1_window_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        conv1_window_buffer_1_ce1 = 1'b1;
    end else begin
        conv1_window_buffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln139_reg_4701 == 1'd0))) begin
        conv1_window_buffer_1_we1 = 1'b1;
    end else begin
        conv1_window_buffer_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_2_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        conv1_window_buffer_2_address0 = 64'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0))) begin
        conv1_window_buffer_2_address0 = zext_ln143_fu_2543_p1;
    end else begin
        conv1_window_buffer_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0)))) begin
        conv1_window_buffer_2_ce0 = 1'b1;
    end else begin
        conv1_window_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_2_ce1 = 1'b1;
    end else begin
        conv1_window_buffer_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0))) begin
        conv1_window_buffer_2_we0 = 1'b1;
    end else begin
        conv1_window_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_3_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        conv1_window_buffer_3_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        conv1_window_buffer_3_address0 = zext_ln143_reg_4710;
    end else begin
        conv1_window_buffer_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        conv1_window_buffer_3_ce0 = 1'b1;
    end else begin
        conv1_window_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_3_ce1 = 1'b1;
    end else begin
        conv1_window_buffer_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln139_reg_4701 == 1'd0))) begin
        conv1_window_buffer_3_we0 = 1'b1;
    end else begin
        conv1_window_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_4_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        conv1_window_buffer_4_address0 = 64'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        conv1_window_buffer_4_address0 = zext_ln143_fu_2543_p1;
    end else begin
        conv1_window_buffer_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_4_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        conv1_window_buffer_4_address1 = conv1_window_buffer_68_reg_4728;
    end else begin
        conv1_window_buffer_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        conv1_window_buffer_4_ce0 = 1'b1;
    end else begin
        conv1_window_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        conv1_window_buffer_4_ce1 = 1'b1;
    end else begin
        conv1_window_buffer_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln139_reg_4701 == 1'd0))) begin
        conv1_window_buffer_4_we1 = 1'b1;
    end else begin
        conv1_window_buffer_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_5_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        conv1_window_buffer_5_address0 = 64'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0))) begin
        conv1_window_buffer_5_address0 = zext_ln143_fu_2543_p1;
    end else begin
        conv1_window_buffer_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0)))) begin
        conv1_window_buffer_5_ce0 = 1'b1;
    end else begin
        conv1_window_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_5_ce1 = 1'b1;
    end else begin
        conv1_window_buffer_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0))) begin
        conv1_window_buffer_5_we0 = 1'b1;
    end else begin
        conv1_window_buffer_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_6_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        conv1_window_buffer_6_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        conv1_window_buffer_6_address0 = zext_ln143_reg_4710;
    end else begin
        conv1_window_buffer_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        conv1_window_buffer_6_ce0 = 1'b1;
    end else begin
        conv1_window_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_6_ce1 = 1'b1;
    end else begin
        conv1_window_buffer_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln139_reg_4701 == 1'd0))) begin
        conv1_window_buffer_6_we0 = 1'b1;
    end else begin
        conv1_window_buffer_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_7_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        conv1_window_buffer_7_address0 = 64'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        conv1_window_buffer_7_address0 = zext_ln143_fu_2543_p1;
    end else begin
        conv1_window_buffer_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_7_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        conv1_window_buffer_7_address1 = conv1_window_buffer_73_reg_4739;
    end else begin
        conv1_window_buffer_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        conv1_window_buffer_7_ce0 = 1'b1;
    end else begin
        conv1_window_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        conv1_window_buffer_7_ce1 = 1'b1;
    end else begin
        conv1_window_buffer_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln139_reg_4701 == 1'd0))) begin
        conv1_window_buffer_7_we1 = 1'b1;
    end else begin
        conv1_window_buffer_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_8_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        conv1_window_buffer_8_address0 = 64'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0))) begin
        conv1_window_buffer_8_address0 = zext_ln143_fu_2543_p1;
    end else begin
        conv1_window_buffer_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0)))) begin
        conv1_window_buffer_8_ce0 = 1'b1;
    end else begin
        conv1_window_buffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_8_ce1 = 1'b1;
    end else begin
        conv1_window_buffer_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln139_fu_2531_p2 == 1'd0))) begin
        conv1_window_buffer_8_we0 = 1'b1;
    end else begin
        conv1_window_buffer_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_s_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        conv1_window_buffer_s_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        conv1_window_buffer_s_address0 = zext_ln143_reg_4710;
    end else begin
        conv1_window_buffer_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        conv1_window_buffer_s_ce0 = 1'b1;
    end else begin
        conv1_window_buffer_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_window_buffer_s_ce1 = 1'b1;
    end else begin
        conv1_window_buffer_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln139_reg_4701 == 1'd0))) begin
        conv1_window_buffer_s_we0 = 1'b1;
    end else begin
        conv1_window_buffer_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1476_ce = 1'b1;
    end else begin
        grp_fu_1476_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1476_p0 = input_image_addr_2_r_reg_4513;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1476_p0 = input_image_addr_1_r_reg_4467;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        grp_fu_1476_p0 = input_image_addr_rea_reg_4461;
    end else begin
        grp_fu_1476_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1607_ce = 1'b1;
    end else begin
        grp_fu_1607_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1718_ce = 1'b1;
    end else begin
        grp_fu_1718_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (1'd1 == and_ln134_2_reg_4402_pp0_iter9_reg) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln128_reg_4350_pp0_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter9_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln128_reg_4350_pp0_iter9_reg == 1'd0)) | ((1'd1 == and_ln134_2_reg_4402_pp0_iter8_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_reg_4350_pp0_iter8_reg == 1'd0)))) begin
        input_image_blk_n_AR = m_axi_input_image_ARREADY;
    end else begin
        input_image_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0)) | ((1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0)))) begin
        input_image_blk_n_R = m_axi_input_image_RVALID;
    end else begin
        input_image_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln127_fu_1493_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
        if ((1'b1 == ap_condition_3460)) begin
            m_axi_input_image_ARADDR = input_image_addr_2_reg_4455;
        end else if ((1'b1 == ap_condition_3456)) begin
            m_axi_input_image_ARADDR = input_image_addr_1_reg_4449;
        end else if ((1'b1 == ap_condition_3452)) begin
            m_axi_input_image_ARADDR = input_image_addr_reg_4443;
        end else begin
            m_axi_input_image_ARADDR = 'bx;
        end
    end else begin
        m_axi_input_image_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op275_readreq_state32 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op272_readreq_state31 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op270_readreq_state30 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        m_axi_input_image_ARVALID = 1'b1;
    end else begin
        m_axi_input_image_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op292_read_state38 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op288_read_state37 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op336_read_state39 == 1'b1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        m_axi_input_image_RREADY = 1'b1;
    end else begin
        m_axi_input_image_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        result_out_blk_n = result_out_full_n;
    end else begin
        result_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0) | (result_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        result_out_write = 1'b1;
    end else begin
        result_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_0_0_0_ce0 = 1'b1;
    end else begin
        weight_conv1_V_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_0_0_1_ce0 = 1'b1;
    end else begin
        weight_conv1_V_0_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_0_0_2_ce0 = 1'b1;
    end else begin
        weight_conv1_V_0_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_0_1_0_ce0 = 1'b1;
    end else begin
        weight_conv1_V_0_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_0_1_1_ce0 = 1'b1;
    end else begin
        weight_conv1_V_0_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_0_1_2_ce0 = 1'b1;
    end else begin
        weight_conv1_V_0_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_0_2_0_ce0 = 1'b1;
    end else begin
        weight_conv1_V_0_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_0_2_1_ce0 = 1'b1;
    end else begin
        weight_conv1_V_0_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_0_2_2_ce0 = 1'b1;
    end else begin
        weight_conv1_V_0_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_1_0_0_ce0 = 1'b1;
    end else begin
        weight_conv1_V_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_1_0_1_ce0 = 1'b1;
    end else begin
        weight_conv1_V_1_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_1_0_2_ce0 = 1'b1;
    end else begin
        weight_conv1_V_1_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_1_1_0_ce0 = 1'b1;
    end else begin
        weight_conv1_V_1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_1_1_1_ce0 = 1'b1;
    end else begin
        weight_conv1_V_1_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_1_1_2_ce0 = 1'b1;
    end else begin
        weight_conv1_V_1_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_1_2_0_ce0 = 1'b1;
    end else begin
        weight_conv1_V_1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_1_2_1_ce0 = 1'b1;
    end else begin
        weight_conv1_V_1_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_1_2_2_ce0 = 1'b1;
    end else begin
        weight_conv1_V_1_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_2_0_0_ce0 = 1'b1;
    end else begin
        weight_conv1_V_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_2_0_1_ce0 = 1'b1;
    end else begin
        weight_conv1_V_2_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_2_0_2_ce0 = 1'b1;
    end else begin
        weight_conv1_V_2_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_2_1_0_ce0 = 1'b1;
    end else begin
        weight_conv1_V_2_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_2_1_1_ce0 = 1'b1;
    end else begin
        weight_conv1_V_2_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_2_1_2_ce0 = 1'b1;
    end else begin
        weight_conv1_V_2_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_2_2_0_ce0 = 1'b1;
    end else begin
        weight_conv1_V_2_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_2_2_1_ce0 = 1'b1;
    end else begin
        weight_conv1_V_2_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        weight_conv1_V_2_2_2_ce0 = 1'b1;
    end else begin
        weight_conv1_V_2_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0) | (result_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln127_fu_1493_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln128_fu_1547_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((icmp_ln128_fu_1547_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((icmp_ln137_fu_2506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln138_reg_4599 == 1'd1) & (1'b1 == ap_CS_fsm_state44) & (icmp_ln137_fu_2506_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln139_fu_2531_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln139_fu_2531_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln148_fu_2698_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter4 == 1'b1) & (ap_enable_reg_pp2_iter3 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter4 == 1'b1) & (ap_enable_reg_pp2_iter3 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((icmp_ln148_fu_2698_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_10_fu_3343_p2 = ($signed(sext_ln703_643_fu_3339_p1) + $signed(shl_ln728_454_i_i_fu_3331_p3));

assign add_ln1192_11_fu_3398_p2 = ($signed(sext_ln703_644_fu_3394_p1) + $signed(shl_ln728_456_i_i_fu_3386_p3));

assign add_ln1192_12_fu_3453_p2 = ($signed(sext_ln703_645_fu_3449_p1) + $signed(shl_ln728_458_i_i_fu_3441_p3));

assign add_ln1192_13_fu_3533_p2 = ($signed(sext_ln703_646_fu_3530_p1) + $signed(shl_ln728_460_i_i_fu_3523_p3));

assign add_ln1192_14_fu_3560_p2 = ($signed(sext_ln703_647_fu_3557_p1) + $signed(shl_ln728_462_i_i_fu_3549_p3));

assign add_ln1192_15_fu_3614_p2 = ($signed(sext_ln703_648_fu_3610_p1) + $signed(shl_ln728_464_i_i_fu_3602_p3));

assign add_ln1192_16_fu_3668_p2 = ($signed(sext_ln703_649_fu_3664_p1) + $signed(shl_ln728_466_i_i_fu_3656_p3));

assign add_ln1192_17_fu_3722_p2 = ($signed(sext_ln703_650_fu_3718_p1) + $signed(shl_ln728_468_i_i_fu_3710_p3));

assign add_ln1192_18_fu_3776_p2 = ($signed(sext_ln703_651_fu_3772_p1) + $signed(shl_ln728_470_i_i_fu_3764_p3));

assign add_ln1192_19_fu_3830_p2 = ($signed(sext_ln703_652_fu_3826_p1) + $signed(shl_ln728_472_i_i_fu_3818_p3));

assign add_ln1192_1_fu_2852_p2 = ($signed(sext_ln703_634_fu_2848_p1) + $signed(sext_ln728_304_fu_2844_p1));

assign add_ln1192_20_fu_3884_p2 = ($signed(sext_ln703_653_fu_3880_p1) + $signed(shl_ln728_474_i_i_fu_3872_p3));

assign add_ln1192_21_fu_3936_p2 = ($signed(sext_ln703_654_fu_3933_p1) + $signed(shl_ln728_476_i_i_fu_3926_p3));

assign add_ln1192_22_fu_3990_p2 = ($signed(sext_ln703_655_fu_3986_p1) + $signed(shl_ln728_478_i_i_fu_3978_p3));

assign add_ln1192_23_fu_4044_p2 = ($signed(sext_ln703_656_fu_4040_p1) + $signed(shl_ln728_480_i_i_fu_4032_p3));

assign add_ln1192_24_fu_4098_p2 = ($signed(sext_ln703_657_fu_4094_p1) + $signed(shl_ln728_482_i_i_fu_4086_p3));

assign add_ln1192_25_fu_4152_p2 = ($signed(sext_ln703_658_fu_4148_p1) + $signed(shl_ln728_484_i_i_fu_4140_p3));

assign add_ln1192_2_fu_2907_p2 = ($signed(sext_ln703_635_fu_2903_p1) + $signed(shl_ln728_438_i_i_fu_2895_p3));

assign add_ln1192_3_fu_2962_p2 = ($signed(sext_ln703_636_fu_2958_p1) + $signed(shl_ln728_440_i_i_fu_2950_p3));

assign add_ln1192_4_fu_3017_p2 = ($signed(sext_ln703_637_fu_3013_p1) + $signed(shl_ln728_442_i_i_fu_3005_p3));

assign add_ln1192_5_fu_3097_p2 = ($signed(sext_ln703_638_fu_3094_p1) + $signed(shl_ln728_444_i_i_fu_3087_p3));

assign add_ln1192_6_fu_3124_p2 = ($signed(sext_ln703_639_fu_3121_p1) + $signed(shl_ln728_446_i_i_fu_3113_p3));

assign add_ln1192_7_fu_3178_p2 = ($signed(sext_ln703_640_fu_3174_p1) + $signed(shl_ln728_448_i_i_fu_3166_p3));

assign add_ln1192_8_fu_3233_p2 = ($signed(sext_ln703_641_fu_3229_p1) + $signed(shl_ln728_450_i_i_fu_3221_p3));

assign add_ln1192_9_fu_3288_p2 = ($signed(sext_ln703_642_fu_3284_p1) + $signed(shl_ln728_452_i_i_fu_3276_p3));

assign add_ln1192_fu_2793_p2 = ($signed(sext_ln1192_fu_2789_p1) + $signed(sext_ln703_fu_2775_p1));

assign add_ln127_fu_1499_p2 = (yy_reuse_0_0_i_i_reg_1350 + 8'd1);

assign add_ln128_fu_1553_p2 = (ap_phi_mux_conv1_pad_1_0_0_i_i_phi_fu_1366_p4 + 9'd1);

assign add_ln134_10_fu_1889_p2 = (zext_ln134_reg_4319 + add_ln134_9_fu_1883_p2);

assign add_ln134_11_fu_1900_p2 = (64'd2 + sub_ln134_5_fu_1866_p2);

assign add_ln134_12_fu_1906_p2 = (zext_ln134_reg_4319 + add_ln134_11_fu_1900_p2);

assign add_ln134_2_fu_1613_p2 = ($signed(10'd703) + $signed(zext_ln128_1_reg_4359_pp0_iter3_reg));

assign add_ln134_3_fu_1625_p2 = ($signed(zext_ln128_reg_4345) + $signed(sext_ln134_2_fu_1622_p1));

assign add_ln134_4_fu_1808_p2 = (zext_ln134_3_fu_1804_p1 + zext_ln134_2_fu_1793_p1);

assign add_ln134_5_fu_1818_p2 = ($signed(zext_ln134_4_fu_1814_p1) + $signed(sext_ln134_7_fu_1782_p1));

assign add_ln134_6_fu_1848_p2 = ($signed(sext_ln134_11_fu_1844_p1) + $signed(sext_ln134_10_fu_1832_p1));

assign add_ln134_7_fu_1854_p2 = ($signed(add_ln134_6_fu_1848_p2) + $signed(sext_ln134_1_fu_1779_p1));

assign add_ln134_8_fu_1872_p2 = (zext_ln134_reg_4319 + sub_ln134_5_fu_1866_p2);

assign add_ln134_9_fu_1883_p2 = (64'd1 + sub_ln134_5_fu_1866_p2);

assign add_ln134_fu_1537_p2 = (zext_ln134_1_fu_1533_p1 + shl_ln_i_i_fu_1517_p3);

assign add_ln137_fu_2512_p2 = (xx_reuse_0_0_i_i_reg_1442 + 9'd1);

assign add_ln139_fu_2537_p2 = (conv1_line_buffer_0_s_reg_1454 + 2'd1);

assign add_ln148_fu_2704_p2 = (ff_0_0_i_i_reg_1465 + 5'd1);

assign add_ln581_1_fu_2196_p2 = ($signed(12'd4089) + $signed(sub_ln575_1_fu_2174_p2));

assign add_ln581_2_fu_2387_p2 = ($signed(12'd4089) + $signed(sub_ln575_2_fu_2365_p2));

assign add_ln581_fu_2005_p2 = ($signed(12'd4089) + $signed(sub_ln575_fu_1983_p2));

assign and_ln134_1_fu_1590_p2 = (icmp_ln134_reg_4335 & icmp_ln134_3_fu_1579_p2);

assign and_ln134_2_fu_1595_p2 = (and_ln134_fu_1585_p2 & and_ln134_1_fu_1590_p2);

assign and_ln134_fu_1585_p2 = (icmp_ln134_2_fu_1573_p2 & icmp_ln134_1_reg_4340);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd13];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_input_image_RVALID == 1'b0) & (ap_predicate_op336_read_state39 == 1'b1) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp0_iter9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_input_image_RVALID == 1'b0) & (ap_predicate_op336_read_state39 == 1'b1) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp0_iter9 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((m_axi_input_image_RVALID == 1'b0) & (ap_predicate_op288_read_state37 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp0_iter9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((m_axi_input_image_RVALID == 1'b0) & (ap_predicate_op288_read_state37 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp0_iter9 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((m_axi_input_image_RVALID == 1'b0) & (ap_predicate_op292_read_state38 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp0_iter9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((m_axi_input_image_RVALID == 1'b0) & (ap_predicate_op292_read_state38 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp0_iter9 == 1'b1)));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((conv1_pipe_1_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln150_reg_4750 == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((conv1_pipe_1_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln150_reg_4750 == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((conv1_pipe_1_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln150_reg_4750 == 1'd0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0) | (result_out_full_n == 1'b0));
end

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = ((m_axi_input_image_ARREADY == 1'b0) & (ap_predicate_op270_readreq_state30 == 1'b1));
end

assign ap_block_state30_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state31_io = ((m_axi_input_image_ARREADY == 1'b0) & (ap_predicate_op272_readreq_state31 == 1'b1));
end

assign ap_block_state31_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_io = ((m_axi_input_image_ARREADY == 1'b0) & (ap_predicate_op275_readreq_state32 == 1'b1));
end

assign ap_block_state32_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state37_pp0_stage1_iter11 = ((m_axi_input_image_RVALID == 1'b0) & (ap_predicate_op288_read_state37 == 1'b1));
end

always @ (*) begin
    ap_block_state38_pp0_stage2_iter11 = ((m_axi_input_image_RVALID == 1'b0) & (ap_predicate_op292_read_state38 == 1'b1));
end

always @ (*) begin
    ap_block_state39_pp0_stage0_iter12 = ((m_axi_input_image_RVALID == 1'b0) & (ap_predicate_op336_read_state39 == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state55_pp2_stage0_iter4 = ((conv1_pipe_1_V_V_full_n == 1'b0) & (icmp_ln150_reg_4750 == 1'd0));
end

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_3452 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op270_readreq_state30 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_3456 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op272_readreq_state31 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3460 = ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op275_readreq_state32 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_0127_0_0_0_i_i_reg_1373 = 'bx;

assign ap_phi_reg_pp0_iter11_p_0127_0_0_1_i_i_reg_1394 = 8'd0;

assign ap_phi_reg_pp0_iter12_p_0127_0_0_2_i_i_reg_1418 = 8'd0;

always @ (*) begin
    ap_predicate_op270_readreq_state30 = ((1'd1 == and_ln134_2_reg_4402_pp0_iter8_reg) & (icmp_ln128_reg_4350_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op272_readreq_state31 = ((1'd1 == and_ln134_2_reg_4402_pp0_iter9_reg) & (icmp_ln128_reg_4350_pp0_iter9_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op275_readreq_state32 = ((1'd1 == and_ln134_2_reg_4402_pp0_iter9_reg) & (icmp_ln128_reg_4350_pp0_iter9_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op288_read_state37 = ((1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op292_read_state38 = ((1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op336_read_state39 = ((1'd1 == and_ln134_2_reg_4402_pp0_iter11_reg) & (icmp_ln128_reg_4350_pp0_iter11_reg == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign ashr_ln586_1_fu_2285_p2 = $signed(select_ln570_1_fu_2160_p3) >>> zext_ln586_1_fu_2281_p1;

assign ashr_ln586_2_fu_2476_p2 = $signed(select_ln570_2_fu_2351_p3) >>> zext_ln586_2_fu_2472_p1;

assign ashr_ln586_fu_2094_p2 = $signed(select_ln570_fu_1969_p3) >>> zext_ln586_fu_2090_p1;

assign bitcast_ln696_1_fu_2071_p1 = input_image_addr_rea_reg_4461;

assign bitcast_ln696_2_fu_2108_p1 = grp_fu_1476_p1;

assign bitcast_ln696_3_fu_2262_p1 = input_image_addr_1_r_reg_4467;

assign bitcast_ln696_4_fu_2299_p1 = grp_fu_1476_p1;

assign bitcast_ln696_5_fu_2453_p1 = input_image_addr_2_r_reg_4513;

assign bitcast_ln696_fu_1917_p1 = grp_fu_1476_p1;

assign conv1_pipe_1_V_V_din = {{add_ln1192_25_fu_4152_p2[17:2]}};

assign conv1_window_buffer_2_address1 = 64'd2;

assign conv1_window_buffer_3_address1 = 64'd2;

assign conv1_window_buffer_5_address1 = 64'd2;

assign conv1_window_buffer_6_address1 = 64'd2;

assign conv1_window_buffer_8_address1 = 64'd2;

assign conv1_window_buffer_s_address1 = 64'd2;

assign grp_fu_1607_p0 = ($signed(10'd1023) + $signed(zext_ln128_1_fu_1559_p1));

assign icmp_ln127_fu_1493_p2 = ((yy_reuse_0_0_i_i_reg_1350 == 8'd162) ? 1'b1 : 1'b0);

assign icmp_ln128_fu_1547_p2 = ((ap_phi_mux_conv1_pad_1_0_0_i_i_phi_fu_1366_p4 == 9'd322) ? 1'b1 : 1'b0);

assign icmp_ln134_1_fu_1511_p2 = ((yy_reuse_0_0_i_i_reg_1350 < 8'd161) ? 1'b1 : 1'b0);

assign icmp_ln134_2_fu_1573_p2 = ((ap_phi_mux_conv1_pad_1_0_0_i_i_phi_fu_1366_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_3_fu_1579_p2 = ((ap_phi_mux_conv1_pad_1_0_0_i_i_phi_fu_1366_p4 < 9'd321) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_1505_p2 = ((yy_reuse_0_0_i_i_reg_1350 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_2506_p2 = ((xx_reuse_0_0_i_i_reg_1442 == 9'd322) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_2500_p2 = ((tmp_fu_2490_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_2531_p2 = ((conv1_line_buffer_0_s_reg_1454 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_2698_p2 = ((ff_0_0_i_i_reg_1465 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_2593_p2 = ((tmp_67_fu_2583_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_2168_p2 = ((trunc_ln557_1_fu_2112_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_2359_p2 = ((trunc_ln557_2_fu_2303_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1977_p2 = ((trunc_ln557_fu_1921_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_1_fu_2190_p2 = (($signed(tmp_70_fu_2180_p4) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln581_2_fu_2381_p2 = (($signed(tmp_77_fu_2371_p4) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1999_p2 = (($signed(tmp_65_fu_1989_p4) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_2224_p2 = ((sub_ln575_1_fu_2174_p2 == 12'd7) ? 1'b1 : 1'b0);

assign icmp_ln582_2_fu_2415_p2 = ((sub_ln575_2_fu_2365_p2 == 12'd7) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_2033_p2 = ((sub_ln575_fu_1983_p2 == 12'd7) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_2256_p2 = ((select_ln581_1_fu_2208_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_2_fu_2447_p2 = ((select_ln581_2_fu_2399_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_2065_p2 = ((select_ln581_fu_2017_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_2244_p2 = ((tmp_74_fu_2234_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_2_fu_2435_p2 = ((tmp_78_fu_2425_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_2053_p2 = ((tmp_66_fu_2043_p4 == 9'd0) ? 1'b1 : 1'b0);

assign input_image_offset1_s_fu_1479_p4 = {{input_image_offset[31:2]}};

assign m_axi_input_image_ARBURST = 2'd0;

assign m_axi_input_image_ARCACHE = 4'd0;

assign m_axi_input_image_ARID = 1'd0;

assign m_axi_input_image_ARLEN = 32'd1;

assign m_axi_input_image_ARLOCK = 2'd0;

assign m_axi_input_image_ARPROT = 3'd0;

assign m_axi_input_image_ARQOS = 4'd0;

assign m_axi_input_image_ARREGION = 4'd0;

assign m_axi_input_image_ARSIZE = 3'd0;

assign m_axi_input_image_ARUSER = 1'd0;

assign m_axi_input_image_AWADDR = 32'd0;

assign m_axi_input_image_AWBURST = 2'd0;

assign m_axi_input_image_AWCACHE = 4'd0;

assign m_axi_input_image_AWID = 1'd0;

assign m_axi_input_image_AWLEN = 32'd0;

assign m_axi_input_image_AWLOCK = 2'd0;

assign m_axi_input_image_AWPROT = 3'd0;

assign m_axi_input_image_AWQOS = 4'd0;

assign m_axi_input_image_AWREGION = 4'd0;

assign m_axi_input_image_AWSIZE = 3'd0;

assign m_axi_input_image_AWUSER = 1'd0;

assign m_axi_input_image_AWVALID = 1'b0;

assign m_axi_input_image_BREADY = 1'b0;

assign m_axi_input_image_WDATA = 32'd0;

assign m_axi_input_image_WID = 1'd0;

assign m_axi_input_image_WLAST = 1'b0;

assign m_axi_input_image_WSTRB = 4'd0;

assign m_axi_input_image_WUSER = 1'd0;

assign m_axi_input_image_WVALID = 1'b0;

assign mul_ln1118_10_fu_3251_p0 = zext_ln1118_9_reg_4849;

assign mul_ln1118_10_fu_3251_p1 = shl_ln728_451_i_i_fu_3239_p3;

assign mul_ln1118_10_fu_3251_p2 = ($signed({{1'b0}, {mul_ln1118_10_fu_3251_p0}}) * $signed(mul_ln1118_10_fu_3251_p1));

assign mul_ln1118_11_fu_3306_p0 = zext_ln1118_10_reg_4854;

assign mul_ln1118_11_fu_3306_p1 = shl_ln728_453_i_i_fu_3294_p3;

assign mul_ln1118_11_fu_3306_p2 = ($signed({{1'b0}, {mul_ln1118_11_fu_3306_p0}}) * $signed(mul_ln1118_11_fu_3306_p1));

assign mul_ln1118_12_fu_3361_p0 = zext_ln1118_11_reg_4859;

assign mul_ln1118_12_fu_3361_p1 = shl_ln728_455_i_i_fu_3349_p3;

assign mul_ln1118_12_fu_3361_p2 = ($signed({{1'b0}, {mul_ln1118_12_fu_3361_p0}}) * $signed(mul_ln1118_12_fu_3361_p1));

assign mul_ln1118_13_fu_3416_p0 = zext_ln1118_12_reg_4864;

assign mul_ln1118_13_fu_3416_p1 = shl_ln728_457_i_i_fu_3404_p3;

assign mul_ln1118_13_fu_3416_p2 = ($signed({{1'b0}, {mul_ln1118_13_fu_3416_p0}}) * $signed(mul_ln1118_13_fu_3416_p1));

assign mul_ln1118_14_fu_3471_p0 = shl_ln728_459_i_i_fu_3459_p3;

assign mul_ln1118_14_fu_3471_p1 = zext_ln1265_76_reg_4869;

assign mul_ln1118_14_fu_3471_p2 = ($signed(mul_ln1118_14_fu_3471_p0) * $signed({{1'b0}, {mul_ln1118_14_fu_3471_p1}}));

assign mul_ln1118_15_fu_3508_p0 = shl_ln728_461_i_i_fu_3496_p3;

assign mul_ln1118_15_fu_3508_p1 = zext_ln1265_77_reg_4874;

assign mul_ln1118_15_fu_3508_p2 = ($signed(mul_ln1118_15_fu_3508_p0) * $signed({{1'b0}, {mul_ln1118_15_fu_3508_p1}}));

assign mul_ln1118_16_fu_3577_p0 = zext_ln1118_13_reg_4879;

assign mul_ln1118_16_fu_3577_p1 = shl_ln728_463_i_i_fu_3566_p3;

assign mul_ln1118_16_fu_3577_p2 = ($signed({{1'b0}, {mul_ln1118_16_fu_3577_p0}}) * $signed(mul_ln1118_16_fu_3577_p1));

assign mul_ln1118_17_fu_3631_p0 = zext_ln1118_14_reg_4884;

assign mul_ln1118_17_fu_3631_p1 = shl_ln728_465_i_i_fu_3620_p3;

assign mul_ln1118_17_fu_3631_p2 = ($signed({{1'b0}, {mul_ln1118_17_fu_3631_p0}}) * $signed(mul_ln1118_17_fu_3631_p1));

assign mul_ln1118_18_fu_3685_p0 = zext_ln1118_15_reg_4889;

assign mul_ln1118_18_fu_3685_p1 = shl_ln728_467_i_i_fu_3674_p3;

assign mul_ln1118_18_fu_3685_p2 = ($signed({{1'b0}, {mul_ln1118_18_fu_3685_p0}}) * $signed(mul_ln1118_18_fu_3685_p1));

assign mul_ln1118_19_fu_3739_p0 = zext_ln1118_16_reg_4894;

assign mul_ln1118_19_fu_3739_p1 = shl_ln728_469_i_i_fu_3728_p3;

assign mul_ln1118_19_fu_3739_p2 = ($signed({{1'b0}, {mul_ln1118_19_fu_3739_p0}}) * $signed(mul_ln1118_19_fu_3739_p1));

assign mul_ln1118_1_fu_2762_p0 = zext_ln1118_1_reg_4804;

assign mul_ln1118_1_fu_2762_p1 = shl_ln728_i_i_fu_2750_p3;

assign mul_ln1118_1_fu_2762_p2 = ($signed({{1'b0}, {mul_ln1118_1_fu_2762_p0}}) * $signed(mul_ln1118_1_fu_2762_p1));

assign mul_ln1118_20_fu_3793_p0 = shl_ln728_471_i_i_fu_3782_p3;

assign mul_ln1118_20_fu_3793_p1 = zext_ln1265_78_reg_4899;

assign mul_ln1118_20_fu_3793_p2 = ($signed(mul_ln1118_20_fu_3793_p0) * $signed({{1'b0}, {mul_ln1118_20_fu_3793_p1}}));

assign mul_ln1118_21_fu_3847_p0 = zext_ln1118_17_reg_4904;

assign mul_ln1118_21_fu_3847_p1 = shl_ln728_473_i_i_fu_3836_p3;

assign mul_ln1118_21_fu_3847_p2 = ($signed({{1'b0}, {mul_ln1118_21_fu_3847_p0}}) * $signed(mul_ln1118_21_fu_3847_p1));

assign mul_ln1118_22_fu_3901_p0 = zext_ln1118_18_reg_4909;

assign mul_ln1118_22_fu_3901_p1 = shl_ln728_475_i_i_fu_3890_p3;

assign mul_ln1118_22_fu_3901_p2 = ($signed({{1'b0}, {mul_ln1118_22_fu_3901_p0}}) * $signed(mul_ln1118_22_fu_3901_p1));

assign mul_ln1118_23_fu_3953_p0 = zext_ln1118_19_reg_4914;

assign mul_ln1118_23_fu_3953_p1 = shl_ln728_477_i_i_fu_3942_p3;

assign mul_ln1118_23_fu_3953_p2 = ($signed({{1'b0}, {mul_ln1118_23_fu_3953_p0}}) * $signed(mul_ln1118_23_fu_3953_p1));

assign mul_ln1118_24_fu_4007_p0 = zext_ln1118_20_reg_4919;

assign mul_ln1118_24_fu_4007_p1 = shl_ln728_479_i_i_fu_3996_p3;

assign mul_ln1118_24_fu_4007_p2 = ($signed({{1'b0}, {mul_ln1118_24_fu_4007_p0}}) * $signed(mul_ln1118_24_fu_4007_p1));

assign mul_ln1118_25_fu_4061_p0 = shl_ln728_481_i_i_fu_4050_p3;

assign mul_ln1118_25_fu_4061_p1 = zext_ln1265_79_reg_4924;

assign mul_ln1118_25_fu_4061_p2 = ($signed(mul_ln1118_25_fu_4061_p0) * $signed({{1'b0}, {mul_ln1118_25_fu_4061_p1}}));

assign mul_ln1118_26_fu_4115_p0 = zext_ln1118_21_reg_4929;

assign mul_ln1118_26_fu_4115_p1 = shl_ln728_483_i_i_fu_4104_p3;

assign mul_ln1118_26_fu_4115_p2 = ($signed({{1'b0}, {mul_ln1118_26_fu_4115_p0}}) * $signed(mul_ln1118_26_fu_4115_p1));

assign mul_ln1118_2_fu_2811_p0 = zext_ln1118_2_reg_4809;

assign mul_ln1118_2_fu_2811_p1 = shl_ln728_435_i_i_fu_2799_p3;

assign mul_ln1118_2_fu_2811_p2 = ($signed({{1'b0}, {mul_ln1118_2_fu_2811_p0}}) * $signed(mul_ln1118_2_fu_2811_p1));

assign mul_ln1118_3_fu_2870_p0 = zext_ln1118_3_reg_4814;

assign mul_ln1118_3_fu_2870_p1 = shl_ln728_437_i_i_fu_2858_p3;

assign mul_ln1118_3_fu_2870_p2 = ($signed({{1'b0}, {mul_ln1118_3_fu_2870_p0}}) * $signed(mul_ln1118_3_fu_2870_p1));

assign mul_ln1118_4_fu_2925_p0 = zext_ln1118_4_reg_4819;

assign mul_ln1118_4_fu_2925_p1 = shl_ln728_439_i_i_fu_2913_p3;

assign mul_ln1118_4_fu_2925_p2 = ($signed({{1'b0}, {mul_ln1118_4_fu_2925_p0}}) * $signed(mul_ln1118_4_fu_2925_p1));

assign mul_ln1118_5_fu_2980_p0 = zext_ln1118_5_reg_4824;

assign mul_ln1118_5_fu_2980_p1 = shl_ln728_441_i_i_fu_2968_p3;

assign mul_ln1118_5_fu_2980_p2 = ($signed({{1'b0}, {mul_ln1118_5_fu_2980_p0}}) * $signed(mul_ln1118_5_fu_2980_p1));

assign mul_ln1118_6_fu_3035_p0 = zext_ln1118_6_reg_4829;

assign mul_ln1118_6_fu_3035_p1 = shl_ln728_443_i_i_fu_3023_p3;

assign mul_ln1118_6_fu_3035_p2 = ($signed({{1'b0}, {mul_ln1118_6_fu_3035_p0}}) * $signed(mul_ln1118_6_fu_3035_p1));

assign mul_ln1118_7_fu_3072_p0 = zext_ln1118_7_reg_4834;

assign mul_ln1118_7_fu_3072_p1 = shl_ln728_445_i_i_fu_3060_p3;

assign mul_ln1118_7_fu_3072_p2 = ($signed({{1'b0}, {mul_ln1118_7_fu_3072_p0}}) * $signed(mul_ln1118_7_fu_3072_p1));

assign mul_ln1118_8_fu_3141_p0 = zext_ln1118_8_reg_4839;

assign mul_ln1118_8_fu_3141_p1 = shl_ln728_447_i_i_fu_3130_p3;

assign mul_ln1118_8_fu_3141_p2 = ($signed({{1'b0}, {mul_ln1118_8_fu_3141_p0}}) * $signed(mul_ln1118_8_fu_3141_p1));

assign mul_ln1118_9_fu_3196_p0 = shl_ln728_449_i_i_fu_3184_p3;

assign mul_ln1118_9_fu_3196_p1 = zext_ln1265_reg_4844;

assign mul_ln1118_9_fu_3196_p2 = ($signed(mul_ln1118_9_fu_3196_p0) * $signed({{1'b0}, {mul_ln1118_9_fu_3196_p1}}));

assign mul_ln1118_fu_2735_p0 = zext_ln1118_reg_4799;

assign mul_ln1118_fu_2735_p1 = shl_ln1_i_i_fu_2723_p3;

assign mul_ln1118_fu_2735_p2 = ($signed({{1'b0}, {mul_ln1118_fu_2735_p0}}) * $signed(mul_ln1118_fu_2735_p1));

assign mul_ln134_1_fu_4177_p0 = 38'd335545;

assign mul_ln134_1_fu_4177_p1 = sext_ln134_4_reg_4421_pp0_iter7_reg;

assign mul_ln134_fu_4169_p0 = 38'd419431;

assign p_Result_0_1_i_i_fu_2124_p4 = {{bitcast_ln696_2_fu_2108_p1[62:52]}};

assign p_Result_0_2_i_i_fu_2315_p4 = {{bitcast_ln696_4_fu_2299_p1[62:52]}};

assign p_Result_i_i_fu_1933_p4 = {{bitcast_ln696_fu_1917_p1[62:52]}};

assign result_out_din = result;

assign select_ln134_1_fu_1710_p3 = ((tmp_57_fu_1653_p3[0:0] === 1'b1) ? sub_ln134_2_fu_1700_p2 : trunc_ln134_2_fu_1706_p1);

assign select_ln134_2_fu_1759_p3 = ((tmp_57_reg_4426_pp0_iter7_reg[0:0] === 1'b1) ? sext_ln134_8_fu_1742_p1 : sext_ln134_9_fu_1755_p1);

assign select_ln134_3_fu_1772_p3 = ((tmp_57_reg_4426_pp0_iter7_reg[0:0] === 1'b1) ? sub_ln134_4_fu_1766_p2 : sext_ln134_9_fu_1755_p1);

assign select_ln134_fu_1688_p3 = ((tmp_57_fu_1653_p3[0:0] === 1'b1) ? sext_ln134_5_fu_1671_p1 : sext_ln134_6_fu_1684_p1);

assign select_ln570_1_fu_2160_p3 = ((tmp_69_fu_2116_p3[0:0] === 1'b1) ? sub_ln461_1_fu_2154_p2 : zext_ln569_1_fu_2150_p1);

assign select_ln570_2_fu_2351_p3 = ((tmp_76_fu_2307_p3[0:0] === 1'b1) ? sub_ln461_2_fu_2345_p2 : zext_ln569_2_fu_2341_p1);

assign select_ln570_fu_1969_p3 = ((tmp_64_fu_1925_p3[0:0] === 1'b1) ? sub_ln461_fu_1963_p2 : zext_ln569_fu_1959_p1);

assign select_ln581_1_fu_2208_p3 = ((icmp_ln581_1_fu_2190_p2[0:0] === 1'b1) ? add_ln581_1_fu_2196_p2 : sub_ln581_1_fu_2202_p2);

assign select_ln581_2_fu_2399_p3 = ((icmp_ln581_2_fu_2381_p2[0:0] === 1'b1) ? add_ln581_2_fu_2387_p2 : sub_ln581_2_fu_2393_p2);

assign select_ln581_fu_2017_p3 = ((icmp_ln581_fu_1999_p2[0:0] === 1'b1) ? add_ln581_fu_2005_p2 : sub_ln581_fu_2011_p2);

assign select_ln588_1_fu_2273_p3 = ((tmp_75_fu_2265_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln588_2_fu_2464_p3 = ((tmp_79_fu_2456_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln588_fu_2082_p3 = ((tmp_68_fu_2074_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign sext_ln1192_fu_2789_p1 = $signed(tmp_71_fu_2779_p4);

assign sext_ln134_10_fu_1832_p1 = $signed(tmp_62_fu_1824_p3);

assign sext_ln134_11_fu_1844_p1 = $signed(tmp_63_fu_1836_p3);

assign sext_ln134_1_fu_1779_p1 = srem_ln134_reg_4416_pp0_iter8_reg;

assign sext_ln134_2_fu_1622_p1 = $signed(add_ln134_2_reg_4411);

assign sext_ln134_3_fu_1630_p1 = $signed(add_ln134_3_fu_1625_p2);

assign sext_ln134_4_fu_1640_p1 = sub_ln134_fu_1634_p2;

assign sext_ln134_5_fu_1671_p1 = $signed(tmp_58_fu_1661_p4);

assign sext_ln134_6_fu_1684_p1 = $signed(tmp_59_fu_1675_p4);

assign sext_ln134_7_fu_1782_p1 = $signed(grp_fu_1718_p2);

assign sext_ln134_8_fu_1742_p1 = $signed(tmp_60_fu_1732_p4);

assign sext_ln134_9_fu_1755_p1 = $signed(tmp_61_fu_1746_p4);

assign sext_ln134_fu_1618_p1 = grp_fu_1607_p2;

assign sext_ln581_1_fu_2220_p1 = select_ln581_1_fu_2208_p3;

assign sext_ln581_2_fu_2411_p1 = select_ln581_2_fu_2399_p3;

assign sext_ln581_fu_2029_p1 = select_ln581_fu_2017_p3;

assign sext_ln703_634_fu_2848_p1 = $signed(trunc_ln708_1_i_i_fu_2816_p4);

assign sext_ln703_635_fu_2903_p1 = $signed(trunc_ln708_2_i_i_fu_2875_p4);

assign sext_ln703_636_fu_2958_p1 = $signed(trunc_ln708_3_i_i_fu_2930_p4);

assign sext_ln703_637_fu_3013_p1 = $signed(trunc_ln708_4_i_i_fu_2985_p4);

assign sext_ln703_638_fu_3094_p1 = $signed(trunc_ln708_5_i_i_reg_5010);

assign sext_ln703_639_fu_3121_p1 = $signed(trunc_ln708_6_i_i_reg_5020);

assign sext_ln703_640_fu_3174_p1 = $signed(trunc_ln708_7_i_i_fu_3146_p4);

assign sext_ln703_641_fu_3229_p1 = $signed(trunc_ln708_8_i_i_fu_3201_p4);

assign sext_ln703_642_fu_3284_p1 = $signed(trunc_ln708_9_i_i_fu_3256_p4);

assign sext_ln703_643_fu_3339_p1 = $signed(trunc_ln708_10_i_i_fu_3311_p4);

assign sext_ln703_644_fu_3394_p1 = $signed(trunc_ln708_11_i_i_fu_3366_p4);

assign sext_ln703_645_fu_3449_p1 = $signed(trunc_ln708_12_i_i_fu_3421_p4);

assign sext_ln703_646_fu_3530_p1 = $signed(trunc_ln708_13_i_i_reg_5120);

assign sext_ln703_647_fu_3557_p1 = $signed(trunc_ln708_14_i_i_reg_5130);

assign sext_ln703_648_fu_3610_p1 = $signed(trunc_ln708_15_i_i_fu_3582_p4);

assign sext_ln703_649_fu_3664_p1 = $signed(trunc_ln708_16_i_i_fu_3636_p4);

assign sext_ln703_650_fu_3718_p1 = $signed(trunc_ln708_17_i_i_fu_3690_p4);

assign sext_ln703_651_fu_3772_p1 = $signed(trunc_ln708_18_i_i_fu_3744_p4);

assign sext_ln703_652_fu_3826_p1 = $signed(trunc_ln708_19_i_i_fu_3798_p4);

assign sext_ln703_653_fu_3880_p1 = $signed(trunc_ln708_20_i_i_fu_3852_p4);

assign sext_ln703_654_fu_3933_p1 = $signed(trunc_ln708_21_i_i_reg_5190);

assign sext_ln703_655_fu_3986_p1 = $signed(trunc_ln708_22_i_i_fu_3958_p4);

assign sext_ln703_656_fu_4040_p1 = $signed(trunc_ln708_23_i_i_fu_4012_p4);

assign sext_ln703_657_fu_4094_p1 = $signed(trunc_ln708_24_i_i_fu_4066_p4);

assign sext_ln703_658_fu_4148_p1 = $signed(trunc_ln708_25_i_i_fu_4120_p4);

assign sext_ln703_fu_2775_p1 = $signed(tmp_74_i_i_fu_2767_p3);

assign sext_ln728_304_fu_2844_p1 = $signed(tmp_73_fu_2836_p3);

assign shl_ln134_1_i_i_fu_1525_p3 = {{yy_reuse_0_0_i_i_reg_1350}, {6'd0}};

assign shl_ln134_fu_1860_p2 = add_ln134_7_fu_1854_p2 << 64'd2;

assign shl_ln1_i_i_fu_2723_p3 = {{weight_conv1_V_0_0_0_q0}, {4'd0}};

assign shl_ln604_1_fu_2250_p2 = trunc_ln602_1_fu_2230_p1 << trunc_ln581_1_fu_2216_p1;

assign shl_ln604_2_fu_2441_p2 = trunc_ln602_2_fu_2421_p1 << trunc_ln581_2_fu_2407_p1;

assign shl_ln604_fu_2059_p2 = trunc_ln602_fu_2039_p1 << trunc_ln581_fu_2025_p1;

assign shl_ln728_435_i_i_fu_2799_p3 = {{weight_conv1_V_0_2_0_q0}, {4'd0}};

assign shl_ln728_437_i_i_fu_2858_p3 = {{weight_conv1_V_1_0_0_q0}, {4'd0}};

assign shl_ln728_438_i_i_fu_2895_p3 = {{tmp_76_i_i_fu_2885_p4}, {2'd0}};

assign shl_ln728_439_i_i_fu_2913_p3 = {{weight_conv1_V_1_1_0_q0}, {4'd0}};

assign shl_ln728_440_i_i_fu_2950_p3 = {{tmp_77_i_i_fu_2940_p4}, {2'd0}};

assign shl_ln728_441_i_i_fu_2968_p3 = {{weight_conv1_V_1_2_0_q0}, {4'd0}};

assign shl_ln728_442_i_i_fu_3005_p3 = {{tmp_78_i_i_fu_2995_p4}, {2'd0}};

assign shl_ln728_443_i_i_fu_3023_p3 = {{weight_conv1_V_2_0_0_q0}, {4'd0}};

assign shl_ln728_444_i_i_fu_3087_p3 = {{tmp_79_i_i_reg_5015}, {2'd0}};

assign shl_ln728_445_i_i_fu_3060_p3 = {{weight_conv1_V_2_1_0_q0}, {4'd0}};

assign shl_ln728_446_i_i_fu_3113_p3 = {{tmp_80_i_i_fu_3103_p4}, {2'd0}};

assign shl_ln728_447_i_i_fu_3130_p3 = {{weight_conv1_V_2_2_0_2_reg_5025}, {4'd0}};

assign shl_ln728_448_i_i_fu_3166_p3 = {{tmp_81_i_i_fu_3156_p4}, {2'd0}};

assign shl_ln728_449_i_i_fu_3184_p3 = {{weight_conv1_V_0_0_1_q0}, {4'd0}};

assign shl_ln728_450_i_i_fu_3221_p3 = {{tmp_82_i_i_fu_3211_p4}, {2'd0}};

assign shl_ln728_451_i_i_fu_3239_p3 = {{weight_conv1_V_0_1_1_q0}, {4'd0}};

assign shl_ln728_452_i_i_fu_3276_p3 = {{tmp_83_i_i_fu_3266_p4}, {2'd0}};

assign shl_ln728_453_i_i_fu_3294_p3 = {{weight_conv1_V_0_2_1_q0}, {4'd0}};

assign shl_ln728_454_i_i_fu_3331_p3 = {{tmp_84_i_i_fu_3321_p4}, {2'd0}};

assign shl_ln728_455_i_i_fu_3349_p3 = {{weight_conv1_V_1_0_1_q0}, {4'd0}};

assign shl_ln728_456_i_i_fu_3386_p3 = {{tmp_85_i_i_fu_3376_p4}, {2'd0}};

assign shl_ln728_457_i_i_fu_3404_p3 = {{weight_conv1_V_1_1_1_q0}, {4'd0}};

assign shl_ln728_458_i_i_fu_3441_p3 = {{tmp_86_i_i_fu_3431_p4}, {2'd0}};

assign shl_ln728_459_i_i_fu_3459_p3 = {{weight_conv1_V_1_2_1_q0}, {4'd0}};

assign shl_ln728_460_i_i_fu_3523_p3 = {{tmp_87_i_i_reg_5125}, {2'd0}};

assign shl_ln728_461_i_i_fu_3496_p3 = {{weight_conv1_V_2_0_1_q0}, {4'd0}};

assign shl_ln728_462_i_i_fu_3549_p3 = {{tmp_88_i_i_fu_3539_p4}, {2'd0}};

assign shl_ln728_463_i_i_fu_3566_p3 = {{weight_conv1_V_2_1_1_2_reg_5135}, {4'd0}};

assign shl_ln728_464_i_i_fu_3602_p3 = {{tmp_89_i_i_fu_3592_p4}, {2'd0}};

assign shl_ln728_465_i_i_fu_3620_p3 = {{weight_conv1_V_2_2_1_2_reg_5140}, {4'd0}};

assign shl_ln728_466_i_i_fu_3656_p3 = {{tmp_90_i_i_fu_3646_p4}, {2'd0}};

assign shl_ln728_467_i_i_fu_3674_p3 = {{weight_conv1_V_0_0_2_2_reg_5145}, {4'd0}};

assign shl_ln728_468_i_i_fu_3710_p3 = {{tmp_91_i_i_fu_3700_p4}, {2'd0}};

assign shl_ln728_469_i_i_fu_3728_p3 = {{weight_conv1_V_0_1_2_2_reg_5150}, {4'd0}};

assign shl_ln728_470_i_i_fu_3764_p3 = {{tmp_92_i_i_fu_3754_p4}, {2'd0}};

assign shl_ln728_471_i_i_fu_3782_p3 = {{weight_conv1_V_0_2_2_2_reg_5155}, {4'd0}};

assign shl_ln728_472_i_i_fu_3818_p3 = {{tmp_93_i_i_fu_3808_p4}, {2'd0}};

assign shl_ln728_473_i_i_fu_3836_p3 = {{weight_conv1_V_1_0_2_2_reg_5160}, {4'd0}};

assign shl_ln728_474_i_i_fu_3872_p3 = {{tmp_94_i_i_fu_3862_p4}, {2'd0}};

assign shl_ln728_475_i_i_fu_3890_p3 = {{weight_conv1_V_1_1_2_2_reg_5165}, {4'd0}};

assign shl_ln728_476_i_i_fu_3926_p3 = {{tmp_95_i_i_reg_5195}, {2'd0}};

assign shl_ln728_477_i_i_fu_3942_p3 = {{weight_conv1_V_1_2_2_2_reg_5170_pp2_iter3_reg}, {4'd0}};

assign shl_ln728_478_i_i_fu_3978_p3 = {{tmp_96_i_i_fu_3968_p4}, {2'd0}};

assign shl_ln728_479_i_i_fu_3996_p3 = {{weight_conv1_V_2_0_2_2_reg_5175_pp2_iter3_reg}, {4'd0}};

assign shl_ln728_480_i_i_fu_4032_p3 = {{tmp_97_i_i_fu_4022_p4}, {2'd0}};

assign shl_ln728_481_i_i_fu_4050_p3 = {{weight_conv1_V_2_1_2_2_reg_5180_pp2_iter3_reg}, {4'd0}};

assign shl_ln728_482_i_i_fu_4086_p3 = {{tmp_98_i_i_fu_4076_p4}, {2'd0}};

assign shl_ln728_483_i_i_fu_4104_p3 = {{weight_conv1_V_2_2_2_2_reg_5185_pp2_iter3_reg}, {4'd0}};

assign shl_ln728_484_i_i_fu_4140_p3 = {{tmp_99_i_i_fu_4130_p4}, {2'd0}};

assign shl_ln728_i_i_fu_2750_p3 = {{weight_conv1_V_0_1_0_q0}, {4'd0}};

assign shl_ln_i_i_fu_1517_p3 = {{yy_reuse_0_0_i_i_reg_1350}, {8'd0}};

assign start_out = real_start;

assign sub_ln134_1_fu_1647_p2 = (36'd0 - trunc_ln134_fu_1644_p1);

assign sub_ln134_2_fu_1700_p2 = (9'd0 - trunc_ln134_1_fu_1696_p1);

assign sub_ln134_3_fu_1726_p2 = (36'd0 - trunc_ln134_3_fu_1723_p1);

assign sub_ln134_4_fu_1766_p2 = (18'd0 - select_ln134_2_fu_1759_p3);

assign sub_ln134_5_fu_1866_p2 = (shl_ln134_fu_1860_p2 - add_ln134_7_fu_1854_p2);

assign sub_ln134_fu_1634_p2 = ($signed(sext_ln134_3_fu_1630_p1) - $signed(sext_ln134_fu_1618_p1));

assign sub_ln461_1_fu_2154_p2 = (54'd0 - zext_ln569_1_fu_2150_p1);

assign sub_ln461_2_fu_2345_p2 = (54'd0 - zext_ln569_2_fu_2341_p1);

assign sub_ln461_fu_1963_p2 = (54'd0 - zext_ln569_fu_1959_p1);

assign sub_ln575_1_fu_2174_p2 = (12'd1075 - zext_ln461_1_fu_2134_p1);

assign sub_ln575_2_fu_2365_p2 = (12'd1075 - zext_ln461_2_fu_2325_p1);

assign sub_ln575_fu_1983_p2 = (12'd1075 - zext_ln461_fu_1943_p1);

assign sub_ln581_1_fu_2202_p2 = (12'd7 - sub_ln575_1_fu_2174_p2);

assign sub_ln581_2_fu_2393_p2 = (12'd7 - sub_ln575_2_fu_2365_p2);

assign sub_ln581_fu_2011_p2 = (12'd7 - sub_ln575_fu_1983_p2);

assign tmp_56_i_i_fu_1951_p3 = {{1'd1}, {trunc_ln565_fu_1947_p1}};

assign tmp_57_fu_1653_p3 = sub_ln134_fu_1634_p2[32'd17];

assign tmp_58_fu_1661_p4 = {{sub_ln134_1_fu_1647_p2[35:27]}};

assign tmp_59_fu_1675_p4 = {{mul_ln134_fu_4169_p2[37:27]}};

assign tmp_60_fu_1732_p4 = {{sub_ln134_3_fu_1726_p2[35:34]}};

assign tmp_61_fu_1746_p4 = {{mul_ln134_1_fu_4177_p2[37:34]}};

assign tmp_62_fu_1824_p3 = {{add_ln134_5_fu_1818_p2}, {8'd0}};

assign tmp_63_fu_1836_p3 = {{add_ln134_5_fu_1818_p2}, {6'd0}};

assign tmp_63_i_i_fu_2142_p3 = {{1'd1}, {trunc_ln565_1_fu_2138_p1}};

assign tmp_64_fu_1925_p3 = bitcast_ln696_fu_1917_p1[32'd63];

assign tmp_65_fu_1989_p4 = {{sub_ln575_fu_1983_p2[11:3]}};

assign tmp_65_i_i_fu_2333_p3 = {{1'd1}, {trunc_ln565_2_fu_2329_p1}};

assign tmp_66_fu_2043_p4 = {{select_ln581_fu_2017_p3[11:3]}};

assign tmp_67_fu_2583_p4 = {{xx_reuse_0_0_i_i_reg_1442[8:1]}};

assign tmp_68_fu_2074_p3 = bitcast_ln696_1_fu_2071_p1[32'd31];

assign tmp_69_fu_2116_p3 = bitcast_ln696_2_fu_2108_p1[32'd63];

assign tmp_69_i_i_fu_1786_p3 = {{select_ln134_3_reg_4437}, {7'd0}};

assign tmp_70_fu_2180_p4 = {{sub_ln575_1_fu_2174_p2[11:3]}};

assign tmp_70_i_i_fu_1797_p3 = {{select_ln134_3_reg_4437}, {5'd0}};

assign tmp_71_fu_2779_p4 = {{mul_ln1118_1_fu_2762_p2[16:4]}};

assign tmp_72_fu_2826_p4 = {{add_ln1192_fu_2793_p2[13:2]}};

assign tmp_73_fu_2836_p3 = {{tmp_72_fu_2826_p4}, {2'd0}};

assign tmp_74_fu_2234_p4 = {{select_ln581_1_fu_2208_p3[11:3]}};

assign tmp_74_i_i_fu_2767_p3 = {{trunc_ln10_i_i_fu_2740_p4}, {2'd0}};

assign tmp_75_fu_2265_p3 = bitcast_ln696_3_fu_2262_p1[32'd31];

assign tmp_76_fu_2307_p3 = bitcast_ln696_4_fu_2299_p1[32'd63];

assign tmp_76_i_i_fu_2885_p4 = {{add_ln1192_1_fu_2852_p2[17:2]}};

assign tmp_77_fu_2371_p4 = {{sub_ln575_2_fu_2365_p2[11:3]}};

assign tmp_77_i_i_fu_2940_p4 = {{add_ln1192_2_fu_2907_p2[17:2]}};

assign tmp_78_fu_2425_p4 = {{select_ln581_2_fu_2399_p3[11:3]}};

assign tmp_78_i_i_fu_2995_p4 = {{add_ln1192_3_fu_2962_p2[17:2]}};

assign tmp_79_fu_2456_p3 = bitcast_ln696_5_fu_2453_p1[32'd31];

assign tmp_80_i_i_fu_3103_p4 = {{add_ln1192_5_fu_3097_p2[17:2]}};

assign tmp_81_i_i_fu_3156_p4 = {{add_ln1192_6_fu_3124_p2[17:2]}};

assign tmp_82_i_i_fu_3211_p4 = {{add_ln1192_7_fu_3178_p2[17:2]}};

assign tmp_83_i_i_fu_3266_p4 = {{add_ln1192_8_fu_3233_p2[17:2]}};

assign tmp_84_i_i_fu_3321_p4 = {{add_ln1192_9_fu_3288_p2[17:2]}};

assign tmp_85_i_i_fu_3376_p4 = {{add_ln1192_10_fu_3343_p2[17:2]}};

assign tmp_86_i_i_fu_3431_p4 = {{add_ln1192_11_fu_3398_p2[17:2]}};

assign tmp_88_i_i_fu_3539_p4 = {{add_ln1192_13_fu_3533_p2[17:2]}};

assign tmp_89_i_i_fu_3592_p4 = {{add_ln1192_14_fu_3560_p2[17:2]}};

assign tmp_90_i_i_fu_3646_p4 = {{add_ln1192_15_fu_3614_p2[17:2]}};

assign tmp_91_i_i_fu_3700_p4 = {{add_ln1192_16_fu_3668_p2[17:2]}};

assign tmp_92_i_i_fu_3754_p4 = {{add_ln1192_17_fu_3722_p2[17:2]}};

assign tmp_93_i_i_fu_3808_p4 = {{add_ln1192_18_fu_3776_p2[17:2]}};

assign tmp_94_i_i_fu_3862_p4 = {{add_ln1192_19_fu_3830_p2[17:2]}};

assign tmp_96_i_i_fu_3968_p4 = {{add_ln1192_21_fu_3936_p2[17:2]}};

assign tmp_97_i_i_fu_4022_p4 = {{add_ln1192_22_fu_3990_p2[17:2]}};

assign tmp_98_i_i_fu_4076_p4 = {{add_ln1192_23_fu_4044_p2[17:2]}};

assign tmp_99_i_i_fu_4130_p4 = {{add_ln1192_24_fu_4098_p2[17:2]}};

assign tmp_fu_2490_p4 = {{yy_reuse_0_0_i_i_reg_1350[7:1]}};

assign trunc_ln10_i_i_fu_2740_p4 = {{mul_ln1118_fu_2735_p2[16:6]}};

assign trunc_ln134_1_fu_1696_p1 = select_ln134_fu_1688_p3[8:0];

assign trunc_ln134_2_fu_1706_p1 = select_ln134_fu_1688_p3[8:0];

assign trunc_ln134_3_fu_1723_p1 = mul_ln134_1_fu_4177_p2[35:0];

assign trunc_ln134_fu_1644_p1 = mul_ln134_fu_4169_p2[35:0];

assign trunc_ln557_1_fu_2112_p1 = bitcast_ln696_2_fu_2108_p1[62:0];

assign trunc_ln557_2_fu_2303_p1 = bitcast_ln696_4_fu_2299_p1[62:0];

assign trunc_ln557_fu_1921_p1 = bitcast_ln696_fu_1917_p1[62:0];

assign trunc_ln565_1_fu_2138_p1 = bitcast_ln696_2_fu_2108_p1[51:0];

assign trunc_ln565_2_fu_2329_p1 = bitcast_ln696_4_fu_2299_p1[51:0];

assign trunc_ln565_fu_1947_p1 = bitcast_ln696_fu_1917_p1[51:0];

assign trunc_ln581_1_fu_2216_p1 = select_ln581_1_fu_2208_p3[7:0];

assign trunc_ln581_2_fu_2407_p1 = select_ln581_2_fu_2399_p3[7:0];

assign trunc_ln581_fu_2025_p1 = select_ln581_fu_2017_p3[7:0];

assign trunc_ln583_1_fu_2295_p1 = select_ln570_1_fu_2160_p3[7:0];

assign trunc_ln583_2_fu_2486_p1 = select_ln570_2_fu_2351_p3[7:0];

assign trunc_ln583_fu_2104_p1 = select_ln570_fu_1969_p3[7:0];

assign trunc_ln586_1_fu_2291_p1 = ashr_ln586_1_fu_2285_p2[7:0];

assign trunc_ln586_2_fu_2482_p1 = ashr_ln586_2_fu_2476_p2[7:0];

assign trunc_ln586_fu_2100_p1 = ashr_ln586_fu_2094_p2[7:0];

assign trunc_ln602_1_fu_2230_p1 = select_ln570_1_fu_2160_p3[7:0];

assign trunc_ln602_2_fu_2421_p1 = select_ln570_2_fu_2351_p3[7:0];

assign trunc_ln602_fu_2039_p1 = select_ln570_fu_1969_p3[7:0];

assign trunc_ln708_10_i_i_fu_3311_p4 = {{mul_ln1118_11_fu_3306_p2[16:4]}};

assign trunc_ln708_11_i_i_fu_3366_p4 = {{mul_ln1118_12_fu_3361_p2[16:4]}};

assign trunc_ln708_12_i_i_fu_3421_p4 = {{mul_ln1118_13_fu_3416_p2[16:4]}};

assign trunc_ln708_15_i_i_fu_3582_p4 = {{mul_ln1118_16_fu_3577_p2[16:4]}};

assign trunc_ln708_16_i_i_fu_3636_p4 = {{mul_ln1118_17_fu_3631_p2[16:4]}};

assign trunc_ln708_17_i_i_fu_3690_p4 = {{mul_ln1118_18_fu_3685_p2[16:4]}};

assign trunc_ln708_18_i_i_fu_3744_p4 = {{mul_ln1118_19_fu_3739_p2[16:4]}};

assign trunc_ln708_19_i_i_fu_3798_p4 = {{mul_ln1118_20_fu_3793_p2[15:4]}};

assign trunc_ln708_1_i_i_fu_2816_p4 = {{mul_ln1118_2_fu_2811_p2[16:4]}};

assign trunc_ln708_20_i_i_fu_3852_p4 = {{mul_ln1118_21_fu_3847_p2[16:4]}};

assign trunc_ln708_22_i_i_fu_3958_p4 = {{mul_ln1118_23_fu_3953_p2[16:4]}};

assign trunc_ln708_23_i_i_fu_4012_p4 = {{mul_ln1118_24_fu_4007_p2[16:4]}};

assign trunc_ln708_24_i_i_fu_4066_p4 = {{mul_ln1118_25_fu_4061_p2[15:4]}};

assign trunc_ln708_25_i_i_fu_4120_p4 = {{mul_ln1118_26_fu_4115_p2[16:4]}};

assign trunc_ln708_2_i_i_fu_2875_p4 = {{mul_ln1118_3_fu_2870_p2[16:4]}};

assign trunc_ln708_3_i_i_fu_2930_p4 = {{mul_ln1118_4_fu_2925_p2[16:4]}};

assign trunc_ln708_4_i_i_fu_2985_p4 = {{mul_ln1118_5_fu_2980_p2[16:4]}};

assign trunc_ln708_7_i_i_fu_3146_p4 = {{mul_ln1118_8_fu_3141_p2[16:4]}};

assign trunc_ln708_8_i_i_fu_3201_p4 = {{mul_ln1118_9_fu_3196_p2[15:4]}};

assign trunc_ln708_9_i_i_fu_3256_p4 = {{mul_ln1118_10_fu_3251_p2[16:4]}};

assign weight_conv1_V_0_0_0_address0 = zext_ln158_fu_2710_p1;

assign weight_conv1_V_0_0_1_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_0_0_2_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_0_1_0_address0 = zext_ln158_fu_2710_p1;

assign weight_conv1_V_0_1_1_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_0_1_2_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_0_2_0_address0 = zext_ln158_fu_2710_p1;

assign weight_conv1_V_0_2_1_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_0_2_2_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_1_0_0_address0 = zext_ln158_fu_2710_p1;

assign weight_conv1_V_1_0_1_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_1_0_2_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_1_1_0_address0 = zext_ln158_fu_2710_p1;

assign weight_conv1_V_1_1_1_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_1_1_2_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_1_2_0_address0 = zext_ln158_fu_2710_p1;

assign weight_conv1_V_1_2_1_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_1_2_2_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_2_0_0_address0 = zext_ln158_fu_2710_p1;

assign weight_conv1_V_2_0_1_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_2_0_2_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_2_1_0_address0 = zext_ln158_fu_2710_p1;

assign weight_conv1_V_2_1_1_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_2_1_2_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_2_2_0_address0 = zext_ln158_fu_2710_p1;

assign weight_conv1_V_2_2_1_address0 = zext_ln158_reg_4943;

assign weight_conv1_V_2_2_2_address0 = zext_ln158_reg_4943;

assign zext_ln1118_10_fu_2634_p1 = conv1_window_buffer_2_q0;

assign zext_ln1118_11_fu_2638_p1 = conv1_window_buffer_3_q0;

assign zext_ln1118_12_fu_2642_p1 = conv1_window_buffer_4_q1;

assign zext_ln1118_13_fu_2654_p1 = conv1_window_buffer_7_q1;

assign zext_ln1118_14_fu_2658_p1 = conv1_window_buffer_8_q0;

assign zext_ln1118_15_fu_2662_p1 = conv1_window_buffer_s_q1;

assign zext_ln1118_16_fu_2666_p1 = conv1_window_buffer_1_q0;

assign zext_ln1118_17_fu_2674_p1 = conv1_window_buffer_3_q1;

assign zext_ln1118_18_fu_2678_p1 = conv1_window_buffer_4_q0;

assign zext_ln1118_19_fu_2682_p1 = conv1_window_buffer_5_q1;

assign zext_ln1118_1_fu_2602_p1 = conv1_window_buffer_37_reg_4759;

assign zext_ln1118_20_fu_2686_p1 = conv1_window_buffer_6_q1;

assign zext_ln1118_21_fu_2694_p1 = conv1_window_buffer_8_q1;

assign zext_ln1118_2_fu_2605_p1 = conv1_window_buffer_38_reg_4764;

assign zext_ln1118_3_fu_2608_p1 = conv1_window_buffer_39_reg_4769;

assign zext_ln1118_4_fu_2611_p1 = conv1_window_buffer_40_reg_4774;

assign zext_ln1118_5_fu_2614_p1 = conv1_window_buffer_41_reg_4779;

assign zext_ln1118_6_fu_2617_p1 = conv1_window_buffer_42_reg_4784;

assign zext_ln1118_7_fu_2620_p1 = conv1_window_buffer_43_reg_4789;

assign zext_ln1118_8_fu_2623_p1 = conv1_window_buffer_44_reg_4794;

assign zext_ln1118_9_fu_2630_p1 = conv1_window_buffer_1_q1;

assign zext_ln1118_fu_2599_p1 = conv1_window_buffer_36_reg_4754;

assign zext_ln1265_76_fu_2646_p1 = conv1_window_buffer_5_q0;

assign zext_ln1265_77_fu_2650_p1 = conv1_window_buffer_6_q0;

assign zext_ln1265_78_fu_2670_p1 = conv1_window_buffer_2_q1;

assign zext_ln1265_79_fu_2690_p1 = conv1_window_buffer_7_q0;

assign zext_ln1265_fu_2626_p1 = conv1_window_buffer_s_q0;

assign zext_ln128_1_fu_1559_p1 = ap_phi_mux_conv1_pad_1_0_0_i_i_phi_fu_1366_p4;

assign zext_ln128_fu_1543_p1 = add_ln134_fu_1537_p2;

assign zext_ln132_fu_1563_p1 = ap_phi_mux_conv1_pad_1_0_0_i_i_phi_fu_1366_p4;

assign zext_ln134_1_fu_1533_p1 = shl_ln134_1_i_i_fu_1525_p3;

assign zext_ln134_2_fu_1793_p1 = tmp_69_i_i_fu_1786_p3;

assign zext_ln134_3_fu_1804_p1 = tmp_70_i_i_fu_1797_p3;

assign zext_ln134_4_fu_1814_p1 = add_ln134_4_fu_1808_p2;

assign zext_ln134_fu_1489_p1 = input_image_offset1_s_fu_1479_p4;

assign zext_ln143_fu_2543_p1 = conv1_line_buffer_0_s_reg_1454;

assign zext_ln145_fu_2518_p1 = xx_reuse_0_0_i_i_reg_1442;

assign zext_ln158_fu_2710_p1 = ff_0_0_i_i_reg_1465;

assign zext_ln461_1_fu_2134_p1 = p_Result_0_1_i_i_fu_2124_p4;

assign zext_ln461_2_fu_2325_p1 = p_Result_0_2_i_i_fu_2315_p4;

assign zext_ln461_fu_1943_p1 = p_Result_i_i_fu_1933_p4;

assign zext_ln569_1_fu_2150_p1 = tmp_63_i_i_fu_2142_p3;

assign zext_ln569_2_fu_2341_p1 = tmp_65_i_i_fu_2333_p3;

assign zext_ln569_fu_1959_p1 = tmp_56_i_i_fu_1951_p3;

assign zext_ln586_1_fu_2281_p1 = $unsigned(sext_ln581_1_fu_2220_p1);

assign zext_ln586_2_fu_2472_p1 = $unsigned(sext_ln581_2_fu_2411_p1);

assign zext_ln586_fu_2090_p1 = $unsigned(sext_ln581_fu_2029_p1);

always @ (posedge ap_clk) begin
    zext_ln134_reg_4319[63:30] <= 34'b0000000000000000000000000000000000;
    zext_ln128_reg_4345[5:0] <= 6'b000000;
    zext_ln128_reg_4345[16] <= 1'b0;
    zext_ln128_1_reg_4359[9] <= 1'b0;
    zext_ln128_1_reg_4359_pp0_iter1_reg[9] <= 1'b0;
    zext_ln128_1_reg_4359_pp0_iter2_reg[9] <= 1'b0;
    zext_ln128_1_reg_4359_pp0_iter3_reg[9] <= 1'b0;
    zext_ln132_reg_4364[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln143_reg_4710[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    zext_ln1118_reg_4799[16:8] <= 9'b000000000;
    zext_ln1118_1_reg_4804[16:8] <= 9'b000000000;
    zext_ln1118_2_reg_4809[16:8] <= 9'b000000000;
    zext_ln1118_3_reg_4814[16:8] <= 9'b000000000;
    zext_ln1118_4_reg_4819[16:8] <= 9'b000000000;
    zext_ln1118_5_reg_4824[16:8] <= 9'b000000000;
    zext_ln1118_6_reg_4829[16:8] <= 9'b000000000;
    zext_ln1118_7_reg_4834[16:8] <= 9'b000000000;
    zext_ln1118_8_reg_4839[16:8] <= 9'b000000000;
    zext_ln1265_reg_4844[15:8] <= 8'b00000000;
    zext_ln1118_9_reg_4849[16:8] <= 9'b000000000;
    zext_ln1118_10_reg_4854[16:8] <= 9'b000000000;
    zext_ln1118_11_reg_4859[16:8] <= 9'b000000000;
    zext_ln1118_12_reg_4864[16:8] <= 9'b000000000;
    zext_ln1265_76_reg_4869[15:8] <= 8'b00000000;
    zext_ln1265_77_reg_4874[15:8] <= 8'b00000000;
    zext_ln1118_13_reg_4879[16:8] <= 9'b000000000;
    zext_ln1118_14_reg_4884[16:8] <= 9'b000000000;
    zext_ln1118_15_reg_4889[16:8] <= 9'b000000000;
    zext_ln1118_16_reg_4894[16:8] <= 9'b000000000;
    zext_ln1265_78_reg_4899[15:8] <= 8'b00000000;
    zext_ln1118_17_reg_4904[16:8] <= 9'b000000000;
    zext_ln1118_18_reg_4909[16:8] <= 9'b000000000;
    zext_ln1118_19_reg_4914[16:8] <= 9'b000000000;
    zext_ln1118_20_reg_4919[16:8] <= 9'b000000000;
    zext_ln1265_79_reg_4924[15:8] <= 8'b00000000;
    zext_ln1118_21_reg_4929[16:8] <= 9'b000000000;
    zext_ln158_reg_4943[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //conv113
