

================================================================
== Vivado HLS Report for 'relu_bn7'
================================================================
* Date:           Mon Dec  5 18:16:42 2022

* Version:        2019.2.1 (Build 2724168 on Thu Dec 05 05:19:09 MST 2019)
* Project:        out_dataflow.prj
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.526 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    12802|    12802| 0.128 ms | 0.128 ms |  12802|  12802|   none  |
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                                          |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |                 Loop Name                |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +------------------------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- relu7_args06_relu7_args16_relu7_args26  |    12800|    12800|         2|          1|          1|  12800|    yes   |
        +------------------------------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i5* %relu7_pipe_14_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str423, i32 0, i32 0, [1 x i8]* @p_str424, [1 x i8]* @p_str425, [1 x i8]* @p_str426, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str427, [1 x i8]* @p_str428)"   --->   Operation 5 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %conv7_pipe_13_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str416, i32 0, i32 0, [1 x i8]* @p_str417, [1 x i8]* @p_str418, [1 x i8]* @p_str419, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str420, [1 x i8]* @p_str421)"   --->   Operation 6 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str197)" [kernel.cpp:806]   --->   Operation 7 'specregionbegin' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.75ns)   --->   "br label %0" [kernel.cpp:807]   --->   Operation 8 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 2.63>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten11 = phi i14 [ 0, %relu7_y6_begin ], [ %add_ln807, %relu7_args26 ]" [kernel.cpp:807]   --->   Operation 9 'phi' 'indvar_flatten11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i12 [ 0, %relu7_y6_begin ], [ %select_ln808, %relu7_args26 ]" [kernel.cpp:808]   --->   Operation 10 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%args26_0_0 = phi i7 [ 0, %relu7_y6_begin ], [ %add_ln809, %relu7_args26 ]" [kernel.cpp:809]   --->   Operation 11 'phi' 'args26_0_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.86ns)   --->   "%icmp_ln807 = icmp eq i14 %indvar_flatten11, -3584" [kernel.cpp:807]   --->   Operation 12 'icmp' 'icmp_ln807' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 13 [1/1] (0.98ns)   --->   "%add_ln807 = add i14 %indvar_flatten11, 1" [kernel.cpp:807]   --->   Operation 13 'add' 'add_ln807' <Predicate = true> <Delay = 0.98> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "br i1 %icmp_ln807, label %relu7_y6_end, label %relu7_args26" [kernel.cpp:807]   --->   Operation 14 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.86ns)   --->   "%icmp_ln808 = icmp eq i12 %indvar_flatten, 1280" [kernel.cpp:808]   --->   Operation 15 'icmp' 'icmp_ln808' <Predicate = (!icmp_ln807)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node select_ln809)   --->   "%xor_ln808 = xor i1 %icmp_ln808, true" [kernel.cpp:808]   --->   Operation 16 'xor' 'xor_ln808' <Predicate = (!icmp_ln807)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.86ns)   --->   "%icmp_ln809 = icmp eq i7 %args26_0_0, -64" [kernel.cpp:809]   --->   Operation 17 'icmp' 'icmp_ln809' <Predicate = (!icmp_ln807)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node select_ln809)   --->   "%and_ln808 = and i1 %icmp_ln809, %xor_ln808" [kernel.cpp:808]   --->   Operation 18 'and' 'and_ln808' <Predicate = (!icmp_ln807)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node select_ln809)   --->   "%or_ln809 = or i1 %and_ln808, %icmp_ln808" [kernel.cpp:809]   --->   Operation 19 'or' 'or_ln809' <Predicate = (!icmp_ln807)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.42ns) (out node of the LUT)   --->   "%select_ln809 = select i1 %or_ln809, i7 0, i7 %args26_0_0" [kernel.cpp:809]   --->   Operation 20 'select' 'select_ln809' <Predicate = (!icmp_ln807)> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln814 = zext i7 %select_ln809 to i64" [kernel.cpp:814]   --->   Operation 21 'zext' 'zext_ln814' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%a_batchnorm7_V_addr = getelementptr [64 x i10]* @a_batchnorm7_V, i64 0, i64 %zext_ln814" [kernel.cpp:814]   --->   Operation 22 'getelementptr' 'a_batchnorm7_V_addr' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_2 : Operation 23 [2/2] (1.35ns)   --->   "%a_batchnorm7_V_load = load i10* %a_batchnorm7_V_addr, align 2" [kernel.cpp:814]   --->   Operation 23 'load' 'a_batchnorm7_V_load' <Predicate = (!icmp_ln807)> <Delay = 1.35> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 21> <Depth = 64> <ROM>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%b_batchnorm7_V_addr = getelementptr [64 x i21]* @b_batchnorm7_V, i64 0, i64 %zext_ln814" [kernel.cpp:814]   --->   Operation 24 'getelementptr' 'b_batchnorm7_V_addr' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_2 : Operation 25 [2/2] (1.35ns)   --->   "%b_batchnorm7_V_load = load i21* %b_batchnorm7_V_addr, align 4" [kernel.cpp:814]   --->   Operation 25 'load' 'b_batchnorm7_V_load' <Predicate = (!icmp_ln807)> <Delay = 1.35> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 21> <Depth = 64> <ROM>
ST_2 : Operation 26 [1/1] (0.89ns)   --->   "%add_ln809 = add i7 1, %select_ln809" [kernel.cpp:809]   --->   Operation 26 'add' 'add_ln809' <Predicate = (!icmp_ln807)> <Delay = 0.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.96ns)   --->   "%add_ln808 = add i12 1, %indvar_flatten" [kernel.cpp:808]   --->   Operation 27 'add' 'add_ln808' <Predicate = (!icmp_ln807)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.43ns)   --->   "%select_ln808 = select i1 %icmp_ln808, i12 1, i12 %add_ln808" [kernel.cpp:808]   --->   Operation 28 'select' 'select_ln808' <Predicate = (!icmp_ln807)> <Delay = 0.43> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.52>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([39 x i8]* @relu7_args06_relu7_a)"   --->   Operation 29 'specloopname' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%empty_65 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 12800, i64 12800, i64 12800)"   --->   Operation 30 'speclooptripcount' 'empty_65' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([26 x i8]* @relu7_args16_relu7_a)"   --->   Operation 31 'specloopname' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str200) nounwind" [kernel.cpp:809]   --->   Operation 32 'specloopname' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str200)" [kernel.cpp:809]   --->   Operation 33 'specregionbegin' 'tmp_8' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str24) nounwind" [kernel.cpp:810]   --->   Operation 34 'specpipeline' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (2.16ns)   --->   "%tmp_V = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %conv7_pipe_13_V_V)" [kernel.cpp:813]   --->   Operation 35 'read' 'tmp_V' <Predicate = (!icmp_ln807)> <Delay = 2.16> <Core = "FIFO_SRL">   --->   Core 36 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 2.16> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 5> <Depth = 0> <FIFO>
ST_3 : Operation 36 [1/2] (1.35ns)   --->   "%a_batchnorm7_V_load = load i10* %a_batchnorm7_V_addr, align 2" [kernel.cpp:814]   --->   Operation 36 'load' 'a_batchnorm7_V_load' <Predicate = (!icmp_ln807)> <Delay = 1.35> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 21> <Depth = 64> <ROM>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln703 = zext i10 %a_batchnorm7_V_load to i26" [kernel.cpp:814]   --->   Operation 37 'zext' 'zext_ln703' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%sext_ln703 = sext i16 %tmp_V to i26" [kernel.cpp:814]   --->   Operation 38 'sext' 'sext_ln703' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.63ns) (grouped into DSP with root node add_ln1192)   --->   "%mul_ln703 = mul i26 %sext_ln703, %zext_ln703" [kernel.cpp:814]   --->   Operation 39 'mul' 'mul_ln703' <Predicate = (!icmp_ln807)> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 40 [1/2] (1.35ns)   --->   "%b_batchnorm7_V_load = load i21* %b_batchnorm7_V_addr, align 4" [kernel.cpp:814]   --->   Operation 40 'load' 'b_batchnorm7_V_load' <Predicate = (!icmp_ln807)> <Delay = 1.35> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 21> <Depth = 64> <ROM>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln1265 = sext i21 %b_batchnorm7_V_load to i26" [kernel.cpp:814]   --->   Operation 41 'sext' 'sext_ln1265' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln1192 = add i26 %mul_ln703, %sext_ln1265" [kernel.cpp:814]   --->   Operation 42 'add' 'add_ln1192' <Predicate = (!icmp_ln807)> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%trunc_ln = call i16 @_ssdm_op_PartSelect.i16.i26.i32.i32(i26 %add_ln1192, i32 10, i32 25)" [kernel.cpp:814]   --->   Operation 43 'partselect' 'trunc_ln' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i26.i32(i26 %add_ln1192, i32 25)" [kernel.cpp:816]   --->   Operation 44 'bitselect' 'tmp_5' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.86ns)   --->   "%icmp_ln1495 = icmp sgt i16 %trunc_ln, 256" [kernel.cpp:816]   --->   Operation 45 'icmp' 'icmp_ln1495' <Predicate = (!icmp_ln807)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node tmp_V_1)   --->   "%tmp_9 = call i5 @_ssdm_op_PartSelect.i5.i26.i32.i32(i26 %add_ln1192, i32 14, i32 18)" [kernel.cpp:816]   --->   Operation 46 'partselect' 'tmp_9' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node tmp_V_1)   --->   "%select_ln1495 = select i1 %tmp_5, i5 0, i5 -16" [kernel.cpp:816]   --->   Operation 47 'select' 'select_ln1495' <Predicate = (!icmp_ln807)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node tmp_V_1)   --->   "%or_ln1495 = or i1 %tmp_5, %icmp_ln1495" [kernel.cpp:816]   --->   Operation 48 'or' 'or_ln1495' <Predicate = (!icmp_ln807)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.48ns) (out node of the LUT)   --->   "%tmp_V_1 = select i1 %or_ln1495, i5 %select_ln1495, i5 %tmp_9" [kernel.cpp:816]   --->   Operation 49 'select' 'tmp_V_1' <Predicate = (!icmp_ln807)> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (2.16ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i5P(i5* %relu7_pipe_14_V_V, i5 %tmp_V_1)" [kernel.cpp:817]   --->   Operation 50 'write' <Predicate = (!icmp_ln807)> <Delay = 2.16> <Core = "FIFO_SRL">   --->   Core 36 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 2.16> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 5> <Depth = 0> <FIFO>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%empty_66 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str200, i32 %tmp_8)" [kernel.cpp:818]   --->   Operation 51 'specregionend' 'empty_66' <Predicate = (!icmp_ln807)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "br label %0"   --->   Operation 52 'br' <Predicate = (!icmp_ln807)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str197, i32 %tmp)" [kernel.cpp:821]   --->   Operation 53 'specregionend' 'empty' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "ret void" [kernel.cpp:822]   --->   Operation 54 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten11', kernel.cpp:807) with incoming values : ('add_ln807', kernel.cpp:807) [12]  (0.755 ns)

 <State 2>: 2.63ns
The critical path consists of the following:
	'phi' operation ('args26_0_0', kernel.cpp:809) with incoming values : ('add_ln809', kernel.cpp:809) [14]  (0 ns)
	'icmp' operation ('icmp_ln809', kernel.cpp:809) [23]  (0.863 ns)
	'and' operation ('and_ln808', kernel.cpp:808) [24]  (0 ns)
	'or' operation ('or_ln809', kernel.cpp:809) [26]  (0 ns)
	'select' operation ('select_ln809', kernel.cpp:809) [27]  (0.42 ns)
	'getelementptr' operation ('a_batchnorm7_V_addr', kernel.cpp:814) [33]  (0 ns)
	'load' operation ('a_batchnorm7_V_load', kernel.cpp:814) on array 'a_batchnorm7_V' [34]  (1.35 ns)

 <State 3>: 8.53ns
The critical path consists of the following:
	fifo read on port 'conv7_pipe_13_V_V' (kernel.cpp:813) [31]  (2.17 ns)
	'mul' operation of DSP[41] ('mul_ln703', kernel.cpp:814) [37]  (0.638 ns)
	'add' operation of DSP[41] ('add_ln1192', kernel.cpp:814) [41]  (2.21 ns)
	'icmp' operation ('icmp_ln1495', kernel.cpp:816) [44]  (0.866 ns)
	'or' operation ('or_ln1495', kernel.cpp:816) [47]  (0 ns)
	'select' operation ('tmp.V', kernel.cpp:816) [48]  (0.48 ns)
	fifo write on port 'relu7_pipe_14_V_V' (kernel.cpp:817) [49]  (2.17 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
