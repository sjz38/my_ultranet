-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity test is
port (
    input_image_V_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    input_image_V_ce0 : OUT STD_LOGIC;
    input_image_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_image_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    input_image_V_we0 : OUT STD_LOGIC;
    input_image_V_address1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    input_image_V_ce1 : OUT STD_LOGIC;
    input_image_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_image_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    input_image_V_we1 : OUT STD_LOGIC;
    weight_conv1_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weight_conv1_V_ce0 : OUT STD_LOGIC;
    weight_conv1_V_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv1_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv1_V_we0 : OUT STD_LOGIC;
    weight_conv1_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weight_conv1_V_ce1 : OUT STD_LOGIC;
    weight_conv1_V_d1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv1_V_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv1_V_we1 : OUT STD_LOGIC;
    a_batchnorm1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_batchnorm1_V_ce0 : OUT STD_LOGIC;
    a_batchnorm1_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm1_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm1_V_we0 : OUT STD_LOGIC;
    a_batchnorm1_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_batchnorm1_V_ce1 : OUT STD_LOGIC;
    a_batchnorm1_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm1_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm1_V_we1 : OUT STD_LOGIC;
    b_batchnorm1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_batchnorm1_V_ce0 : OUT STD_LOGIC;
    b_batchnorm1_V_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm1_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm1_V_we0 : OUT STD_LOGIC;
    b_batchnorm1_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_batchnorm1_V_ce1 : OUT STD_LOGIC;
    b_batchnorm1_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm1_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm1_V_we1 : OUT STD_LOGIC;
    weight_conv2_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    weight_conv2_V_ce0 : OUT STD_LOGIC;
    weight_conv2_V_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv2_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv2_V_we0 : OUT STD_LOGIC;
    weight_conv2_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    weight_conv2_V_ce1 : OUT STD_LOGIC;
    weight_conv2_V_d1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv2_V_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv2_V_we1 : OUT STD_LOGIC;
    a_batchnorm2_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    a_batchnorm2_V_ce0 : OUT STD_LOGIC;
    a_batchnorm2_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm2_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm2_V_we0 : OUT STD_LOGIC;
    a_batchnorm2_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    a_batchnorm2_V_ce1 : OUT STD_LOGIC;
    a_batchnorm2_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm2_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm2_V_we1 : OUT STD_LOGIC;
    b_batchnorm2_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    b_batchnorm2_V_ce0 : OUT STD_LOGIC;
    b_batchnorm2_V_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm2_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm2_V_we0 : OUT STD_LOGIC;
    b_batchnorm2_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    b_batchnorm2_V_ce1 : OUT STD_LOGIC;
    b_batchnorm2_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm2_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm2_V_we1 : OUT STD_LOGIC;
    weight_conv3_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weight_conv3_V_ce0 : OUT STD_LOGIC;
    weight_conv3_V_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv3_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv3_V_we0 : OUT STD_LOGIC;
    weight_conv3_V_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weight_conv3_V_ce1 : OUT STD_LOGIC;
    weight_conv3_V_d1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv3_V_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv3_V_we1 : OUT STD_LOGIC;
    a_batchnorm3_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm3_V_ce0 : OUT STD_LOGIC;
    a_batchnorm3_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm3_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm3_V_we0 : OUT STD_LOGIC;
    a_batchnorm3_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm3_V_ce1 : OUT STD_LOGIC;
    a_batchnorm3_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm3_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm3_V_we1 : OUT STD_LOGIC;
    b_batchnorm3_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm3_V_ce0 : OUT STD_LOGIC;
    b_batchnorm3_V_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm3_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm3_V_we0 : OUT STD_LOGIC;
    b_batchnorm3_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm3_V_ce1 : OUT STD_LOGIC;
    b_batchnorm3_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm3_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm3_V_we1 : OUT STD_LOGIC;
    weight_conv4_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_conv4_V_ce0 : OUT STD_LOGIC;
    weight_conv4_V_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv4_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv4_V_we0 : OUT STD_LOGIC;
    weight_conv4_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_conv4_V_ce1 : OUT STD_LOGIC;
    weight_conv4_V_d1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv4_V_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv4_V_we1 : OUT STD_LOGIC;
    a_batchnorm4_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm4_V_ce0 : OUT STD_LOGIC;
    a_batchnorm4_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm4_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm4_V_we0 : OUT STD_LOGIC;
    a_batchnorm4_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm4_V_ce1 : OUT STD_LOGIC;
    a_batchnorm4_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm4_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm4_V_we1 : OUT STD_LOGIC;
    b_batchnorm4_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm4_V_ce0 : OUT STD_LOGIC;
    b_batchnorm4_V_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm4_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm4_V_we0 : OUT STD_LOGIC;
    b_batchnorm4_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm4_V_ce1 : OUT STD_LOGIC;
    b_batchnorm4_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm4_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm4_V_we1 : OUT STD_LOGIC;
    weight_conv5_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_conv5_V_ce0 : OUT STD_LOGIC;
    weight_conv5_V_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv5_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv5_V_we0 : OUT STD_LOGIC;
    weight_conv5_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_conv5_V_ce1 : OUT STD_LOGIC;
    weight_conv5_V_d1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv5_V_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv5_V_we1 : OUT STD_LOGIC;
    a_batchnorm5_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm5_V_ce0 : OUT STD_LOGIC;
    a_batchnorm5_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm5_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm5_V_we0 : OUT STD_LOGIC;
    a_batchnorm5_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm5_V_ce1 : OUT STD_LOGIC;
    a_batchnorm5_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm5_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm5_V_we1 : OUT STD_LOGIC;
    b_batchnorm5_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm5_V_ce0 : OUT STD_LOGIC;
    b_batchnorm5_V_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm5_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm5_V_we0 : OUT STD_LOGIC;
    b_batchnorm5_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm5_V_ce1 : OUT STD_LOGIC;
    b_batchnorm5_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm5_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm5_V_we1 : OUT STD_LOGIC;
    weight_conv6_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_conv6_V_ce0 : OUT STD_LOGIC;
    weight_conv6_V_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv6_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv6_V_we0 : OUT STD_LOGIC;
    weight_conv6_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_conv6_V_ce1 : OUT STD_LOGIC;
    weight_conv6_V_d1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv6_V_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv6_V_we1 : OUT STD_LOGIC;
    a_batchnorm6_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm6_V_ce0 : OUT STD_LOGIC;
    a_batchnorm6_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm6_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm6_V_we0 : OUT STD_LOGIC;
    a_batchnorm6_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm6_V_ce1 : OUT STD_LOGIC;
    a_batchnorm6_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm6_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm6_V_we1 : OUT STD_LOGIC;
    b_batchnorm6_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm6_V_ce0 : OUT STD_LOGIC;
    b_batchnorm6_V_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm6_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm6_V_we0 : OUT STD_LOGIC;
    b_batchnorm6_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm6_V_ce1 : OUT STD_LOGIC;
    b_batchnorm6_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm6_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm6_V_we1 : OUT STD_LOGIC;
    weight_conv7_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_conv7_V_ce0 : OUT STD_LOGIC;
    weight_conv7_V_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv7_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv7_V_we0 : OUT STD_LOGIC;
    weight_conv7_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_conv7_V_ce1 : OUT STD_LOGIC;
    weight_conv7_V_d1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv7_V_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv7_V_we1 : OUT STD_LOGIC;
    a_batchnorm7_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm7_V_ce0 : OUT STD_LOGIC;
    a_batchnorm7_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm7_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm7_V_we0 : OUT STD_LOGIC;
    a_batchnorm7_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm7_V_ce1 : OUT STD_LOGIC;
    a_batchnorm7_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm7_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm7_V_we1 : OUT STD_LOGIC;
    b_batchnorm7_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm7_V_ce0 : OUT STD_LOGIC;
    b_batchnorm7_V_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm7_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm7_V_we0 : OUT STD_LOGIC;
    b_batchnorm7_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm7_V_ce1 : OUT STD_LOGIC;
    b_batchnorm7_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm7_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm7_V_we1 : OUT STD_LOGIC;
    weight_conv8_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_conv8_V_ce0 : OUT STD_LOGIC;
    weight_conv8_V_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv8_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv8_V_we0 : OUT STD_LOGIC;
    weight_conv8_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_conv8_V_ce1 : OUT STD_LOGIC;
    weight_conv8_V_d1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    weight_conv8_V_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    weight_conv8_V_we1 : OUT STD_LOGIC;
    a_batchnorm8_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm8_V_ce0 : OUT STD_LOGIC;
    a_batchnorm8_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm8_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm8_V_we0 : OUT STD_LOGIC;
    a_batchnorm8_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    a_batchnorm8_V_ce1 : OUT STD_LOGIC;
    a_batchnorm8_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm8_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_batchnorm8_V_we1 : OUT STD_LOGIC;
    b_batchnorm8_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm8_V_ce0 : OUT STD_LOGIC;
    b_batchnorm8_V_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm8_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm8_V_we0 : OUT STD_LOGIC;
    b_batchnorm8_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_batchnorm8_V_ce1 : OUT STD_LOGIC;
    b_batchnorm8_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm8_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    b_batchnorm8_V_we1 : OUT STD_LOGIC;
    result_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    result_V_ce0 : OUT STD_LOGIC;
    result_V_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    result_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    result_V_we0 : OUT STD_LOGIC;
    result_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    result_V_ce1 : OUT STD_LOGIC;
    result_V_d1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    result_V_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    result_V_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of test is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "test,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.702000,HLS_SYN_LAT=63686580,HLS_SYN_TPT=63686581,HLS_SYN_MEM=48,HLS_SYN_DSP=17,HLS_SYN_FF=28411,HLS_SYN_LUT=51741,HLS_VERSION=2019_2_1}";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal Block_arrayctor_loop_U0_ap_start : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_done : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_continue : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_idle : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_ready : STD_LOGIC;
    signal Block_arrayctor_loop_U0_input_image_V_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal Block_arrayctor_loop_U0_input_image_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_input_image_V_address1 : STD_LOGIC_VECTOR (17 downto 0);
    signal Block_arrayctor_loop_U0_input_image_V_ce1 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_weight_conv1_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal Block_arrayctor_loop_U0_weight_conv1_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_a_batchnorm1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_arrayctor_loop_U0_a_batchnorm1_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_b_batchnorm1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_arrayctor_loop_U0_b_batchnorm1_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_weight_conv2_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal Block_arrayctor_loop_U0_weight_conv2_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_a_batchnorm2_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_arrayctor_loop_U0_a_batchnorm2_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_b_batchnorm2_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_arrayctor_loop_U0_b_batchnorm2_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_weight_conv3_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal Block_arrayctor_loop_U0_weight_conv3_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_a_batchnorm3_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_a_batchnorm3_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_b_batchnorm3_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_b_batchnorm3_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_weight_conv4_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_arrayctor_loop_U0_weight_conv4_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_a_batchnorm4_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_a_batchnorm4_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_b_batchnorm4_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_b_batchnorm4_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_weight_conv5_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_arrayctor_loop_U0_weight_conv5_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_a_batchnorm5_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_a_batchnorm5_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_b_batchnorm5_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_b_batchnorm5_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_weight_conv6_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_arrayctor_loop_U0_weight_conv6_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_a_batchnorm6_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_a_batchnorm6_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_b_batchnorm6_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_b_batchnorm6_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_weight_conv7_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_arrayctor_loop_U0_weight_conv7_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_a_batchnorm7_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_a_batchnorm7_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_b_batchnorm7_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_b_batchnorm7_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_weight_conv8_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_arrayctor_loop_U0_weight_conv8_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_result_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal Block_arrayctor_loop_U0_result_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_result_V_we0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_result_V_d0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_arrayctor_loop_U0_a_batchnorm8_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_a_batchnorm8_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_b_batchnorm8_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_arrayctor_loop_U0_b_batchnorm8_V_ce0 : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Block_arrayctor_loop_U0_start_full_n : STD_LOGIC;
    signal Block_arrayctor_loop_U0_start_write : STD_LOGIC;

    component Block_arrayctor_loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_image_V_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        input_image_V_ce0 : OUT STD_LOGIC;
        input_image_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        input_image_V_address1 : OUT STD_LOGIC_VECTOR (17 downto 0);
        input_image_V_ce1 : OUT STD_LOGIC;
        input_image_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_conv1_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_conv1_V_ce0 : OUT STD_LOGIC;
        weight_conv1_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        a_batchnorm1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        a_batchnorm1_V_ce0 : OUT STD_LOGIC;
        a_batchnorm1_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        b_batchnorm1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        b_batchnorm1_V_ce0 : OUT STD_LOGIC;
        b_batchnorm1_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        weight_conv2_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        weight_conv2_V_ce0 : OUT STD_LOGIC;
        weight_conv2_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        a_batchnorm2_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_batchnorm2_V_ce0 : OUT STD_LOGIC;
        a_batchnorm2_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        b_batchnorm2_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_batchnorm2_V_ce0 : OUT STD_LOGIC;
        b_batchnorm2_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        weight_conv3_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        weight_conv3_V_ce0 : OUT STD_LOGIC;
        weight_conv3_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        a_batchnorm3_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        a_batchnorm3_V_ce0 : OUT STD_LOGIC;
        a_batchnorm3_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        b_batchnorm3_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        b_batchnorm3_V_ce0 : OUT STD_LOGIC;
        b_batchnorm3_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        weight_conv4_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_conv4_V_ce0 : OUT STD_LOGIC;
        weight_conv4_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        a_batchnorm4_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        a_batchnorm4_V_ce0 : OUT STD_LOGIC;
        a_batchnorm4_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        b_batchnorm4_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        b_batchnorm4_V_ce0 : OUT STD_LOGIC;
        b_batchnorm4_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        weight_conv5_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_conv5_V_ce0 : OUT STD_LOGIC;
        weight_conv5_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        a_batchnorm5_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        a_batchnorm5_V_ce0 : OUT STD_LOGIC;
        a_batchnorm5_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        b_batchnorm5_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        b_batchnorm5_V_ce0 : OUT STD_LOGIC;
        b_batchnorm5_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        weight_conv6_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_conv6_V_ce0 : OUT STD_LOGIC;
        weight_conv6_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        a_batchnorm6_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        a_batchnorm6_V_ce0 : OUT STD_LOGIC;
        a_batchnorm6_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        b_batchnorm6_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        b_batchnorm6_V_ce0 : OUT STD_LOGIC;
        b_batchnorm6_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        weight_conv7_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_conv7_V_ce0 : OUT STD_LOGIC;
        weight_conv7_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        a_batchnorm7_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        a_batchnorm7_V_ce0 : OUT STD_LOGIC;
        a_batchnorm7_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        b_batchnorm7_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        b_batchnorm7_V_ce0 : OUT STD_LOGIC;
        b_batchnorm7_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        weight_conv8_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_conv8_V_ce0 : OUT STD_LOGIC;
        weight_conv8_V_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        result_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        result_V_ce0 : OUT STD_LOGIC;
        result_V_we0 : OUT STD_LOGIC;
        result_V_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_batchnorm8_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        a_batchnorm8_V_ce0 : OUT STD_LOGIC;
        a_batchnorm8_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        b_batchnorm8_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        b_batchnorm8_V_ce0 : OUT STD_LOGIC;
        b_batchnorm8_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    Block_arrayctor_loop_U0 : component Block_arrayctor_loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Block_arrayctor_loop_U0_ap_start,
        ap_done => Block_arrayctor_loop_U0_ap_done,
        ap_continue => Block_arrayctor_loop_U0_ap_continue,
        ap_idle => Block_arrayctor_loop_U0_ap_idle,
        ap_ready => Block_arrayctor_loop_U0_ap_ready,
        input_image_V_address0 => Block_arrayctor_loop_U0_input_image_V_address0,
        input_image_V_ce0 => Block_arrayctor_loop_U0_input_image_V_ce0,
        input_image_V_q0 => input_image_V_q0,
        input_image_V_address1 => Block_arrayctor_loop_U0_input_image_V_address1,
        input_image_V_ce1 => Block_arrayctor_loop_U0_input_image_V_ce1,
        input_image_V_q1 => input_image_V_q1,
        weight_conv1_V_address0 => Block_arrayctor_loop_U0_weight_conv1_V_address0,
        weight_conv1_V_ce0 => Block_arrayctor_loop_U0_weight_conv1_V_ce0,
        weight_conv1_V_q0 => weight_conv1_V_q0,
        a_batchnorm1_V_address0 => Block_arrayctor_loop_U0_a_batchnorm1_V_address0,
        a_batchnorm1_V_ce0 => Block_arrayctor_loop_U0_a_batchnorm1_V_ce0,
        a_batchnorm1_V_q0 => a_batchnorm1_V_q0,
        b_batchnorm1_V_address0 => Block_arrayctor_loop_U0_b_batchnorm1_V_address0,
        b_batchnorm1_V_ce0 => Block_arrayctor_loop_U0_b_batchnorm1_V_ce0,
        b_batchnorm1_V_q0 => b_batchnorm1_V_q0,
        weight_conv2_V_address0 => Block_arrayctor_loop_U0_weight_conv2_V_address0,
        weight_conv2_V_ce0 => Block_arrayctor_loop_U0_weight_conv2_V_ce0,
        weight_conv2_V_q0 => weight_conv2_V_q0,
        a_batchnorm2_V_address0 => Block_arrayctor_loop_U0_a_batchnorm2_V_address0,
        a_batchnorm2_V_ce0 => Block_arrayctor_loop_U0_a_batchnorm2_V_ce0,
        a_batchnorm2_V_q0 => a_batchnorm2_V_q0,
        b_batchnorm2_V_address0 => Block_arrayctor_loop_U0_b_batchnorm2_V_address0,
        b_batchnorm2_V_ce0 => Block_arrayctor_loop_U0_b_batchnorm2_V_ce0,
        b_batchnorm2_V_q0 => b_batchnorm2_V_q0,
        weight_conv3_V_address0 => Block_arrayctor_loop_U0_weight_conv3_V_address0,
        weight_conv3_V_ce0 => Block_arrayctor_loop_U0_weight_conv3_V_ce0,
        weight_conv3_V_q0 => weight_conv3_V_q0,
        a_batchnorm3_V_address0 => Block_arrayctor_loop_U0_a_batchnorm3_V_address0,
        a_batchnorm3_V_ce0 => Block_arrayctor_loop_U0_a_batchnorm3_V_ce0,
        a_batchnorm3_V_q0 => a_batchnorm3_V_q0,
        b_batchnorm3_V_address0 => Block_arrayctor_loop_U0_b_batchnorm3_V_address0,
        b_batchnorm3_V_ce0 => Block_arrayctor_loop_U0_b_batchnorm3_V_ce0,
        b_batchnorm3_V_q0 => b_batchnorm3_V_q0,
        weight_conv4_V_address0 => Block_arrayctor_loop_U0_weight_conv4_V_address0,
        weight_conv4_V_ce0 => Block_arrayctor_loop_U0_weight_conv4_V_ce0,
        weight_conv4_V_q0 => weight_conv4_V_q0,
        a_batchnorm4_V_address0 => Block_arrayctor_loop_U0_a_batchnorm4_V_address0,
        a_batchnorm4_V_ce0 => Block_arrayctor_loop_U0_a_batchnorm4_V_ce0,
        a_batchnorm4_V_q0 => a_batchnorm4_V_q0,
        b_batchnorm4_V_address0 => Block_arrayctor_loop_U0_b_batchnorm4_V_address0,
        b_batchnorm4_V_ce0 => Block_arrayctor_loop_U0_b_batchnorm4_V_ce0,
        b_batchnorm4_V_q0 => b_batchnorm4_V_q0,
        weight_conv5_V_address0 => Block_arrayctor_loop_U0_weight_conv5_V_address0,
        weight_conv5_V_ce0 => Block_arrayctor_loop_U0_weight_conv5_V_ce0,
        weight_conv5_V_q0 => weight_conv5_V_q0,
        a_batchnorm5_V_address0 => Block_arrayctor_loop_U0_a_batchnorm5_V_address0,
        a_batchnorm5_V_ce0 => Block_arrayctor_loop_U0_a_batchnorm5_V_ce0,
        a_batchnorm5_V_q0 => a_batchnorm5_V_q0,
        b_batchnorm5_V_address0 => Block_arrayctor_loop_U0_b_batchnorm5_V_address0,
        b_batchnorm5_V_ce0 => Block_arrayctor_loop_U0_b_batchnorm5_V_ce0,
        b_batchnorm5_V_q0 => b_batchnorm5_V_q0,
        weight_conv6_V_address0 => Block_arrayctor_loop_U0_weight_conv6_V_address0,
        weight_conv6_V_ce0 => Block_arrayctor_loop_U0_weight_conv6_V_ce0,
        weight_conv6_V_q0 => weight_conv6_V_q0,
        a_batchnorm6_V_address0 => Block_arrayctor_loop_U0_a_batchnorm6_V_address0,
        a_batchnorm6_V_ce0 => Block_arrayctor_loop_U0_a_batchnorm6_V_ce0,
        a_batchnorm6_V_q0 => a_batchnorm6_V_q0,
        b_batchnorm6_V_address0 => Block_arrayctor_loop_U0_b_batchnorm6_V_address0,
        b_batchnorm6_V_ce0 => Block_arrayctor_loop_U0_b_batchnorm6_V_ce0,
        b_batchnorm6_V_q0 => b_batchnorm6_V_q0,
        weight_conv7_V_address0 => Block_arrayctor_loop_U0_weight_conv7_V_address0,
        weight_conv7_V_ce0 => Block_arrayctor_loop_U0_weight_conv7_V_ce0,
        weight_conv7_V_q0 => weight_conv7_V_q0,
        a_batchnorm7_V_address0 => Block_arrayctor_loop_U0_a_batchnorm7_V_address0,
        a_batchnorm7_V_ce0 => Block_arrayctor_loop_U0_a_batchnorm7_V_ce0,
        a_batchnorm7_V_q0 => a_batchnorm7_V_q0,
        b_batchnorm7_V_address0 => Block_arrayctor_loop_U0_b_batchnorm7_V_address0,
        b_batchnorm7_V_ce0 => Block_arrayctor_loop_U0_b_batchnorm7_V_ce0,
        b_batchnorm7_V_q0 => b_batchnorm7_V_q0,
        weight_conv8_V_address0 => Block_arrayctor_loop_U0_weight_conv8_V_address0,
        weight_conv8_V_ce0 => Block_arrayctor_loop_U0_weight_conv8_V_ce0,
        weight_conv8_V_q0 => weight_conv8_V_q0,
        result_V_address0 => Block_arrayctor_loop_U0_result_V_address0,
        result_V_ce0 => Block_arrayctor_loop_U0_result_V_ce0,
        result_V_we0 => Block_arrayctor_loop_U0_result_V_we0,
        result_V_d0 => Block_arrayctor_loop_U0_result_V_d0,
        a_batchnorm8_V_address0 => Block_arrayctor_loop_U0_a_batchnorm8_V_address0,
        a_batchnorm8_V_ce0 => Block_arrayctor_loop_U0_a_batchnorm8_V_ce0,
        a_batchnorm8_V_q0 => a_batchnorm8_V_q0,
        b_batchnorm8_V_address0 => Block_arrayctor_loop_U0_b_batchnorm8_V_address0,
        b_batchnorm8_V_ce0 => Block_arrayctor_loop_U0_b_batchnorm8_V_ce0,
        b_batchnorm8_V_q0 => b_batchnorm8_V_q0);




    Block_arrayctor_loop_U0_ap_continue <= ap_const_logic_1;
    Block_arrayctor_loop_U0_ap_start <= ap_start;
    Block_arrayctor_loop_U0_start_full_n <= ap_const_logic_1;
    Block_arrayctor_loop_U0_start_write <= ap_const_logic_0;
    a_batchnorm1_V_address0 <= Block_arrayctor_loop_U0_a_batchnorm1_V_address0;
    a_batchnorm1_V_address1 <= ap_const_lv4_0;
    a_batchnorm1_V_ce0 <= Block_arrayctor_loop_U0_a_batchnorm1_V_ce0;
    a_batchnorm1_V_ce1 <= ap_const_logic_0;
    a_batchnorm1_V_d0 <= ap_const_lv14_0;
    a_batchnorm1_V_d1 <= ap_const_lv14_0;
    a_batchnorm1_V_we0 <= ap_const_logic_0;
    a_batchnorm1_V_we1 <= ap_const_logic_0;
    a_batchnorm2_V_address0 <= Block_arrayctor_loop_U0_a_batchnorm2_V_address0;
    a_batchnorm2_V_address1 <= ap_const_lv5_0;
    a_batchnorm2_V_ce0 <= Block_arrayctor_loop_U0_a_batchnorm2_V_ce0;
    a_batchnorm2_V_ce1 <= ap_const_logic_0;
    a_batchnorm2_V_d0 <= ap_const_lv14_0;
    a_batchnorm2_V_d1 <= ap_const_lv14_0;
    a_batchnorm2_V_we0 <= ap_const_logic_0;
    a_batchnorm2_V_we1 <= ap_const_logic_0;
    a_batchnorm3_V_address0 <= Block_arrayctor_loop_U0_a_batchnorm3_V_address0;
    a_batchnorm3_V_address1 <= ap_const_lv6_0;
    a_batchnorm3_V_ce0 <= Block_arrayctor_loop_U0_a_batchnorm3_V_ce0;
    a_batchnorm3_V_ce1 <= ap_const_logic_0;
    a_batchnorm3_V_d0 <= ap_const_lv14_0;
    a_batchnorm3_V_d1 <= ap_const_lv14_0;
    a_batchnorm3_V_we0 <= ap_const_logic_0;
    a_batchnorm3_V_we1 <= ap_const_logic_0;
    a_batchnorm4_V_address0 <= Block_arrayctor_loop_U0_a_batchnorm4_V_address0;
    a_batchnorm4_V_address1 <= ap_const_lv6_0;
    a_batchnorm4_V_ce0 <= Block_arrayctor_loop_U0_a_batchnorm4_V_ce0;
    a_batchnorm4_V_ce1 <= ap_const_logic_0;
    a_batchnorm4_V_d0 <= ap_const_lv14_0;
    a_batchnorm4_V_d1 <= ap_const_lv14_0;
    a_batchnorm4_V_we0 <= ap_const_logic_0;
    a_batchnorm4_V_we1 <= ap_const_logic_0;
    a_batchnorm5_V_address0 <= Block_arrayctor_loop_U0_a_batchnorm5_V_address0;
    a_batchnorm5_V_address1 <= ap_const_lv6_0;
    a_batchnorm5_V_ce0 <= Block_arrayctor_loop_U0_a_batchnorm5_V_ce0;
    a_batchnorm5_V_ce1 <= ap_const_logic_0;
    a_batchnorm5_V_d0 <= ap_const_lv14_0;
    a_batchnorm5_V_d1 <= ap_const_lv14_0;
    a_batchnorm5_V_we0 <= ap_const_logic_0;
    a_batchnorm5_V_we1 <= ap_const_logic_0;
    a_batchnorm6_V_address0 <= Block_arrayctor_loop_U0_a_batchnorm6_V_address0;
    a_batchnorm6_V_address1 <= ap_const_lv6_0;
    a_batchnorm6_V_ce0 <= Block_arrayctor_loop_U0_a_batchnorm6_V_ce0;
    a_batchnorm6_V_ce1 <= ap_const_logic_0;
    a_batchnorm6_V_d0 <= ap_const_lv14_0;
    a_batchnorm6_V_d1 <= ap_const_lv14_0;
    a_batchnorm6_V_we0 <= ap_const_logic_0;
    a_batchnorm6_V_we1 <= ap_const_logic_0;
    a_batchnorm7_V_address0 <= Block_arrayctor_loop_U0_a_batchnorm7_V_address0;
    a_batchnorm7_V_address1 <= ap_const_lv6_0;
    a_batchnorm7_V_ce0 <= Block_arrayctor_loop_U0_a_batchnorm7_V_ce0;
    a_batchnorm7_V_ce1 <= ap_const_logic_0;
    a_batchnorm7_V_d0 <= ap_const_lv14_0;
    a_batchnorm7_V_d1 <= ap_const_lv14_0;
    a_batchnorm7_V_we0 <= ap_const_logic_0;
    a_batchnorm7_V_we1 <= ap_const_logic_0;
    a_batchnorm8_V_address0 <= Block_arrayctor_loop_U0_a_batchnorm8_V_address0;
    a_batchnorm8_V_address1 <= ap_const_lv6_0;
    a_batchnorm8_V_ce0 <= Block_arrayctor_loop_U0_a_batchnorm8_V_ce0;
    a_batchnorm8_V_ce1 <= ap_const_logic_0;
    a_batchnorm8_V_d0 <= ap_const_lv14_0;
    a_batchnorm8_V_d1 <= ap_const_lv14_0;
    a_batchnorm8_V_we0 <= ap_const_logic_0;
    a_batchnorm8_V_we1 <= ap_const_logic_0;
    ap_done <= Block_arrayctor_loop_U0_ap_done;
    ap_idle <= Block_arrayctor_loop_U0_ap_idle;
    ap_ready <= Block_arrayctor_loop_U0_ap_ready;
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Block_arrayctor_loop_U0_ap_done;
    ap_sync_ready <= Block_arrayctor_loop_U0_ap_ready;
    b_batchnorm1_V_address0 <= Block_arrayctor_loop_U0_b_batchnorm1_V_address0;
    b_batchnorm1_V_address1 <= ap_const_lv4_0;
    b_batchnorm1_V_ce0 <= Block_arrayctor_loop_U0_b_batchnorm1_V_ce0;
    b_batchnorm1_V_ce1 <= ap_const_logic_0;
    b_batchnorm1_V_d0 <= ap_const_lv26_0;
    b_batchnorm1_V_d1 <= ap_const_lv26_0;
    b_batchnorm1_V_we0 <= ap_const_logic_0;
    b_batchnorm1_V_we1 <= ap_const_logic_0;
    b_batchnorm2_V_address0 <= Block_arrayctor_loop_U0_b_batchnorm2_V_address0;
    b_batchnorm2_V_address1 <= ap_const_lv5_0;
    b_batchnorm2_V_ce0 <= Block_arrayctor_loop_U0_b_batchnorm2_V_ce0;
    b_batchnorm2_V_ce1 <= ap_const_logic_0;
    b_batchnorm2_V_d0 <= ap_const_lv26_0;
    b_batchnorm2_V_d1 <= ap_const_lv26_0;
    b_batchnorm2_V_we0 <= ap_const_logic_0;
    b_batchnorm2_V_we1 <= ap_const_logic_0;
    b_batchnorm3_V_address0 <= Block_arrayctor_loop_U0_b_batchnorm3_V_address0;
    b_batchnorm3_V_address1 <= ap_const_lv6_0;
    b_batchnorm3_V_ce0 <= Block_arrayctor_loop_U0_b_batchnorm3_V_ce0;
    b_batchnorm3_V_ce1 <= ap_const_logic_0;
    b_batchnorm3_V_d0 <= ap_const_lv26_0;
    b_batchnorm3_V_d1 <= ap_const_lv26_0;
    b_batchnorm3_V_we0 <= ap_const_logic_0;
    b_batchnorm3_V_we1 <= ap_const_logic_0;
    b_batchnorm4_V_address0 <= Block_arrayctor_loop_U0_b_batchnorm4_V_address0;
    b_batchnorm4_V_address1 <= ap_const_lv6_0;
    b_batchnorm4_V_ce0 <= Block_arrayctor_loop_U0_b_batchnorm4_V_ce0;
    b_batchnorm4_V_ce1 <= ap_const_logic_0;
    b_batchnorm4_V_d0 <= ap_const_lv26_0;
    b_batchnorm4_V_d1 <= ap_const_lv26_0;
    b_batchnorm4_V_we0 <= ap_const_logic_0;
    b_batchnorm4_V_we1 <= ap_const_logic_0;
    b_batchnorm5_V_address0 <= Block_arrayctor_loop_U0_b_batchnorm5_V_address0;
    b_batchnorm5_V_address1 <= ap_const_lv6_0;
    b_batchnorm5_V_ce0 <= Block_arrayctor_loop_U0_b_batchnorm5_V_ce0;
    b_batchnorm5_V_ce1 <= ap_const_logic_0;
    b_batchnorm5_V_d0 <= ap_const_lv26_0;
    b_batchnorm5_V_d1 <= ap_const_lv26_0;
    b_batchnorm5_V_we0 <= ap_const_logic_0;
    b_batchnorm5_V_we1 <= ap_const_logic_0;
    b_batchnorm6_V_address0 <= Block_arrayctor_loop_U0_b_batchnorm6_V_address0;
    b_batchnorm6_V_address1 <= ap_const_lv6_0;
    b_batchnorm6_V_ce0 <= Block_arrayctor_loop_U0_b_batchnorm6_V_ce0;
    b_batchnorm6_V_ce1 <= ap_const_logic_0;
    b_batchnorm6_V_d0 <= ap_const_lv26_0;
    b_batchnorm6_V_d1 <= ap_const_lv26_0;
    b_batchnorm6_V_we0 <= ap_const_logic_0;
    b_batchnorm6_V_we1 <= ap_const_logic_0;
    b_batchnorm7_V_address0 <= Block_arrayctor_loop_U0_b_batchnorm7_V_address0;
    b_batchnorm7_V_address1 <= ap_const_lv6_0;
    b_batchnorm7_V_ce0 <= Block_arrayctor_loop_U0_b_batchnorm7_V_ce0;
    b_batchnorm7_V_ce1 <= ap_const_logic_0;
    b_batchnorm7_V_d0 <= ap_const_lv26_0;
    b_batchnorm7_V_d1 <= ap_const_lv26_0;
    b_batchnorm7_V_we0 <= ap_const_logic_0;
    b_batchnorm7_V_we1 <= ap_const_logic_0;
    b_batchnorm8_V_address0 <= Block_arrayctor_loop_U0_b_batchnorm8_V_address0;
    b_batchnorm8_V_address1 <= ap_const_lv6_0;
    b_batchnorm8_V_ce0 <= Block_arrayctor_loop_U0_b_batchnorm8_V_ce0;
    b_batchnorm8_V_ce1 <= ap_const_logic_0;
    b_batchnorm8_V_d0 <= ap_const_lv26_0;
    b_batchnorm8_V_d1 <= ap_const_lv26_0;
    b_batchnorm8_V_we0 <= ap_const_logic_0;
    b_batchnorm8_V_we1 <= ap_const_logic_0;
    input_image_V_address0 <= Block_arrayctor_loop_U0_input_image_V_address0;
    input_image_V_address1 <= Block_arrayctor_loop_U0_input_image_V_address1;
    input_image_V_ce0 <= Block_arrayctor_loop_U0_input_image_V_ce0;
    input_image_V_ce1 <= Block_arrayctor_loop_U0_input_image_V_ce1;
    input_image_V_d0 <= ap_const_lv8_0;
    input_image_V_d1 <= ap_const_lv8_0;
    input_image_V_we0 <= ap_const_logic_0;
    input_image_V_we1 <= ap_const_logic_0;
    result_V_address0 <= Block_arrayctor_loop_U0_result_V_address0;
    result_V_address1 <= ap_const_lv14_0;
    result_V_ce0 <= Block_arrayctor_loop_U0_result_V_ce0;
    result_V_ce1 <= ap_const_logic_0;
    result_V_d0 <= Block_arrayctor_loop_U0_result_V_d0;
    result_V_d1 <= ap_const_lv5_0;
    result_V_we0 <= Block_arrayctor_loop_U0_result_V_we0;
    result_V_we1 <= ap_const_logic_0;
    weight_conv1_V_address0 <= Block_arrayctor_loop_U0_weight_conv1_V_address0;
    weight_conv1_V_address1 <= ap_const_lv9_0;
    weight_conv1_V_ce0 <= Block_arrayctor_loop_U0_weight_conv1_V_ce0;
    weight_conv1_V_ce1 <= ap_const_logic_0;
    weight_conv1_V_d0 <= ap_const_lv5_0;
    weight_conv1_V_d1 <= ap_const_lv5_0;
    weight_conv1_V_we0 <= ap_const_logic_0;
    weight_conv1_V_we1 <= ap_const_logic_0;
    weight_conv2_V_address0 <= Block_arrayctor_loop_U0_weight_conv2_V_address0;
    weight_conv2_V_address1 <= ap_const_lv13_0;
    weight_conv2_V_ce0 <= Block_arrayctor_loop_U0_weight_conv2_V_ce0;
    weight_conv2_V_ce1 <= ap_const_logic_0;
    weight_conv2_V_d0 <= ap_const_lv5_0;
    weight_conv2_V_d1 <= ap_const_lv5_0;
    weight_conv2_V_we0 <= ap_const_logic_0;
    weight_conv2_V_we1 <= ap_const_logic_0;
    weight_conv3_V_address0 <= Block_arrayctor_loop_U0_weight_conv3_V_address0;
    weight_conv3_V_address1 <= ap_const_lv15_0;
    weight_conv3_V_ce0 <= Block_arrayctor_loop_U0_weight_conv3_V_ce0;
    weight_conv3_V_ce1 <= ap_const_logic_0;
    weight_conv3_V_d0 <= ap_const_lv5_0;
    weight_conv3_V_d1 <= ap_const_lv5_0;
    weight_conv3_V_we0 <= ap_const_logic_0;
    weight_conv3_V_we1 <= ap_const_logic_0;
    weight_conv4_V_address0 <= Block_arrayctor_loop_U0_weight_conv4_V_address0;
    weight_conv4_V_address1 <= ap_const_lv16_0;
    weight_conv4_V_ce0 <= Block_arrayctor_loop_U0_weight_conv4_V_ce0;
    weight_conv4_V_ce1 <= ap_const_logic_0;
    weight_conv4_V_d0 <= ap_const_lv5_0;
    weight_conv4_V_d1 <= ap_const_lv5_0;
    weight_conv4_V_we0 <= ap_const_logic_0;
    weight_conv4_V_we1 <= ap_const_logic_0;
    weight_conv5_V_address0 <= Block_arrayctor_loop_U0_weight_conv5_V_address0;
    weight_conv5_V_address1 <= ap_const_lv16_0;
    weight_conv5_V_ce0 <= Block_arrayctor_loop_U0_weight_conv5_V_ce0;
    weight_conv5_V_ce1 <= ap_const_logic_0;
    weight_conv5_V_d0 <= ap_const_lv5_0;
    weight_conv5_V_d1 <= ap_const_lv5_0;
    weight_conv5_V_we0 <= ap_const_logic_0;
    weight_conv5_V_we1 <= ap_const_logic_0;
    weight_conv6_V_address0 <= Block_arrayctor_loop_U0_weight_conv6_V_address0;
    weight_conv6_V_address1 <= ap_const_lv16_0;
    weight_conv6_V_ce0 <= Block_arrayctor_loop_U0_weight_conv6_V_ce0;
    weight_conv6_V_ce1 <= ap_const_logic_0;
    weight_conv6_V_d0 <= ap_const_lv5_0;
    weight_conv6_V_d1 <= ap_const_lv5_0;
    weight_conv6_V_we0 <= ap_const_logic_0;
    weight_conv6_V_we1 <= ap_const_logic_0;
    weight_conv7_V_address0 <= Block_arrayctor_loop_U0_weight_conv7_V_address0;
    weight_conv7_V_address1 <= ap_const_lv16_0;
    weight_conv7_V_ce0 <= Block_arrayctor_loop_U0_weight_conv7_V_ce0;
    weight_conv7_V_ce1 <= ap_const_logic_0;
    weight_conv7_V_d0 <= ap_const_lv5_0;
    weight_conv7_V_d1 <= ap_const_lv5_0;
    weight_conv7_V_we0 <= ap_const_logic_0;
    weight_conv7_V_we1 <= ap_const_logic_0;
    weight_conv8_V_address0 <= Block_arrayctor_loop_U0_weight_conv8_V_address0;
    weight_conv8_V_address1 <= ap_const_lv16_0;
    weight_conv8_V_ce0 <= Block_arrayctor_loop_U0_weight_conv8_V_ce0;
    weight_conv8_V_ce1 <= ap_const_logic_0;
    weight_conv8_V_d0 <= ap_const_lv5_0;
    weight_conv8_V_d1 <= ap_const_lv5_0;
    weight_conv8_V_we0 <= ap_const_logic_0;
    weight_conv8_V_we1 <= ap_const_logic_0;
end behav;
